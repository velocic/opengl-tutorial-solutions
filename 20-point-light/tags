!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/585aa63/
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
A	include/glm/gtx/simd_vec4.hpp	/^		A = 3,$/;"	e	enum:glm::comp
ADAM7_DX	src/lodepng.cpp	/^static const unsigned ADAM7_DX[7] = { 8, 8, 4, 4, 2, 2, 1 }; \/*x delta values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ADAM7_DY	src/lodepng.cpp	/^static const unsigned ADAM7_DY[7] = { 8, 8, 8, 4, 4, 2, 2 }; \/*y delta values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ADAM7_IX	src/lodepng.cpp	/^static const unsigned ADAM7_IX[7] = { 0, 4, 0, 2, 0, 1, 0 }; \/*x start values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
ADAM7_IY	src/lodepng.cpp	/^static const unsigned ADAM7_IY[7] = { 0, 0, 4, 0, 2, 0, 1 }; \/*y start values*\/$/;"	v	typeref:typename:const unsigned[7]	file:
APIENTRY	include/GL/glcorearb.h	/^#define APIENTRY$/;"	d
APIENTRY	include/GL/glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	t	typeref:typename:void (* GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
APIENTRY	include/GL/glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	t	typeref:typename:void (* GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
APIENTRYP	include/GL/glcorearb.h	/^#define APIENTRYP /;"	d
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (PFNGLISBUFFERPROC)(GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (PFNGLISENABLEDIPROC)(GLenum target,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t	typeref:typename:GLboolean (PFNGLISENABLEDPROC)(GLenum cap)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (PFNGLISIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (PFNGLISNAMEDSTRINGARBPROC)(GLint namelen,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (PFNGLISPROGRAMPROC)(GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (PFNGLISQUERYPROC)(GLuint id)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (PFNGLISSAMPLERPROC)(GLuint sampler)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (PFNGLISSHADERPROC)(GLuint shader)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (PFNGLISSYNCPROC)(GLsync sync)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (PFNGLISTEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (PFNGLISTEXTUREPROC)(GLuint texture)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (PFNGLISVERTEXARRAYPROC)(GLuint array)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (PFNGLUNMAPBUFFERPROC)(GLenum target)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum targ/;"	t	typeref:typename:GLenum (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer,GLenum target)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (PFNGLCLIENTWAITSYNCPROC)(GLsync sync,GLbitfield flags,GLuint64 timeout)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t	typeref:typename:GLenum (PFNGLGETERRORPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (PFNGLGETGRAPHICSRESETSTATUSARBPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t	typeref:typename:GLenum (PFNGLGETGRAPHICSRESETSTATUSPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (PFNGLGETATTRIBLOCATIONPROC)(GLuint program,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (PFNGLGETFRAGDATAINDEXPROC)(GLuint program,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (PFNGLGETFRAGDATALOCATIONPROC)(GLuint program,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program,GLenum programInterface,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program,GLenum programInterface,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program,GLenum shadertype,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (PFNGLGETUNIFORMLOCATIONPROC)(GLuint program,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	t	typeref:typename:GLsync (PFNGLCREATESYNCFROMCLEVENTARBPROC)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (PFNGLFENCESYNCPROC)(GLenum condition,GLbitfield flags)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (PFNGLCREATEPROGRAMPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (PFNGLCREATESHADERPROC)(GLenum type)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (PFNGLCREATESHADERPROGRAMVPROC)(GLenum type,GLsizei count,const GLchar * const * strings)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	t	typeref:typename:GLuint (PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program,GLenum programInterface,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (PFNGLGETSUBROUTINEINDEXPROC)(GLuint program,GLenum shadertype,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program,const GLchar * uniformBlockName)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	t	typeref:typename:GLuint64 (PFNGLGETIMAGEHANDLEARBPROC)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (PFNGLGETTEXTUREHANDLEARBPROC)(GLuint texture)
APIENTRYP	include/GL/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	t	typeref:typename:GLuint64 (PFNGLGETTEXTURESAMPLERHANDLEARBPROC)(GLuint texture,GLuint sampler)
APIENTRYP	include/GL/glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (PFNGLGETSTRINGIPROC)(GLenum name,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t	typeref:typename:const GLubyte * (PFNGLGETSTRINGPROC)(GLenum name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline,GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (PFNGLACTIVETEXTUREPROC)(GLenum texture)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (PFNGLATTACHSHADERPROC)(GLuint program,GLuint shader)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id,GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (PFNGLBEGINQUERYINDEXEDPROC)(GLenum target,GLuint index,GLuint id)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (PFNGLBEGINQUERYPROC)(GLenum target,GLuint id)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (PFNGLBINDATTRIBLOCATIONPROC)(GLuint program,GLuint index,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (PFNGLBINDBUFFERBASEPROC)(GLenum target,GLuint index,GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (PFNGLBINDBUFFERPROC)(GLenum target,GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (PFNGLBINDBUFFERRANGEPROC)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	t	typeref:typename:void (PFNGLBINDBUFFERSBASEPROC)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	t	typeref:typename:void (PFNGLBINDBUFFERSRANGEPROC)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program,GLuint color,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (PFNGLBINDFRAMEBUFFERPROC)(GLenum target,GLuint framebuffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (PFNGLBINDIMAGETEXTUREPROC)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (PFNGLBINDIMAGETEXTURESPROC)(GLuint first,GLsizei count,const GLuint * textures)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (PFNGLBINDRENDERBUFFERPROC)(GLenum target,GLuint renderbuffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (PFNGLBINDSAMPLERPROC)(GLuint unit,GLuint sampler)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	t	typeref:typename:void (PFNGLBINDSAMPLERSPROC)(GLuint first,GLsizei count,const GLuint * samplers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (PFNGLBINDTEXTUREPROC)(GLenum target,GLuint texture)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	t	typeref:typename:void (PFNGLBINDTEXTURESPROC)(GLuint first,GLsizei count,const GLuint * textures)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t	typeref:typename:void (PFNGLBINDTEXTUREUNITPROC)(GLuint unit,GLuint texture)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target,GLuint id)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (PFNGLBINDVERTEXARRAYPROC)(GLuint array)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (PFNGLBINDVERTEXBUFFERSPROC)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (PFNGLBLENDCOLORPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (PFNGLBLENDEQUATIONIARBPROC)(GLuint buf,GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (PFNGLBLENDEQUATIONIPROC)(GLuint buf,GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (PFNGLBLENDEQUATIONPROC)(GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB,GLenum modeAlpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (PFNGLBLENDFUNCIARBPROC)(GLuint buf,GLenum src,GLenum dst)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (PFNGLBLENDFUNCIPROC)(GLuint buf,GLenum src,GLenum dst)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t	typeref:typename:void (PFNGLBLENDFUNCPROC)(GLenum sfactor,GLenum dfactor)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFrame/;"	t	typeref:typename:void (PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	t	typeref:typename:void (PFNGLBUFFERDATAPROC)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsiz/;"	t	typeref:typename:void (PFNGLBUFFERPAGECOMMITMENTARBPROC)(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	t	typeref:typename:void (PFNGLBUFFERSTORAGEPROC)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (PFNGLBUFFERSUBDATAPROC)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (PFNGLCLAMPCOLORPROC)(GLenum target,GLenum clamp)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (PFNGLCLEARBUFFERDATAPROC)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (PFNGLCLEARBUFFERFIPROC)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (PFNGLCLEARBUFFERFVPROC)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (PFNGLCLEARBUFFERIVPROC)(GLenum buffer,GLint drawbuffer,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (PFNGLCLEARBUFFERUIVPROC)(GLenum buffer,GLint drawbuffer,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (PFNGLCLEARCOLORPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (PFNGLCLEARDEPTHFPROC)(GLfloat d)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t	typeref:typename:void (PFNGLCLEARDEPTHPROC)(GLdouble depth)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GL/;"	t	typeref:typename:void (PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, co/;"	t	typeref:typename:void (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer,GLenum buffer,const GLfloat depth,GLint stencil)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, G/;"	t	typeref:typename:void (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (PFNGLCLEARPROC)(GLbitfield mask)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t	typeref:typename:void (PFNGLCLEARSTENCILPROC)(GLint s)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	t	typeref:typename:void (PFNGLCLEARTEXIMAGEPROC)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	t	typeref:typename:void (PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t	typeref:typename:void (PFNGLCLIPCONTROLPROC)(GLenum origin,GLenum depth)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (PFNGLCOLORMASKIPROC)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLb/;"	t	typeref:typename:void (PFNGLCOLORMASKPROC)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (PFNGLCOMPILESHADERPROC)(GLuint shader)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer,/;"	t	typeref:typename:void (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (PFNGLCOPYTEXIMAGE1DPROC)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (PFNGLCOPYTEXIMAGE2DPROC)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (PFNGLCREATEBUFFERSPROC)(GLsizei n,GLuint * buffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n,GLuint * framebuffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n,GLuint * pipelines)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (PFNGLCREATEQUERIESPROC)(GLenum target,GLsizei n,GLuint * ids)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (PFNGLCREATERENDERBUFFERSPROC)(GLsizei n,GLuint * renderbuffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t	typeref:typename:void (PFNGLCREATESAMPLERSPROC)(GLsizei n,GLuint * samplers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (PFNGLCREATETEXTURESPROC)(GLenum target,GLsizei n,GLuint * textures)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n,GLuint * ids)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n,GLuint * arrays)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (PFNGLCULLFACEPROC)(GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	t	typeref:typename:void (PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback,const void * userParam)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback,const void * userParam)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (PFNGLDELETEBUFFERSPROC)(GLsizei n,const GLuint * buffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n,const GLuint * framebuffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (PFNGLDELETENAMEDSTRINGARBPROC)(GLint namelen,const GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n,const GLuint * pipelines)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (PFNGLDELETEPROGRAMPROC)(GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (PFNGLDELETEQUERIESPROC)(GLsizei n,const GLuint * ids)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (PFNGLDELETERENDERBUFFERSPROC)(GLsizei n,const GLuint * renderbuffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (PFNGLDELETESAMPLERSPROC)(GLsizei count,const GLuint * samplers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (PFNGLDELETESHADERPROC)(GLuint shader)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (PFNGLDELETESYNCPROC)(GLsync sync)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (PFNGLDELETETEXTURESPROC)(GLsizei n,const GLuint * textures)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n,const GLuint * ids)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n,const GLuint * arrays)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t	typeref:typename:void (PFNGLDEPTHFUNCPROC)(GLenum func)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t	typeref:typename:void (PFNGLDEPTHMASKPROC)(GLboolean flag)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (PFNGLDEPTHRANGEARRAYVPROC)(GLuint first,GLsizei count,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (PFNGLDEPTHRANGEFPROC)(GLfloat n,GLfloat f)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index,GLdouble n,GLdouble f)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t	typeref:typename:void (PFNGLDEPTHRANGEPROC)(GLdouble near,GLdouble far)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (PFNGLDETACHSHADERPROC)(GLuint program,GLuint shader)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (PFNGLDISABLEIPROC)(GLenum target,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (PFNGLDISABLEPROC)(GLenum cap)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	t	typeref:typename:void (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode,const void * indirect)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (PFNGLDRAWARRAYSPROC)(GLenum mode,GLint first,GLsizei count)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);$/;"	t	typeref:typename:void (PFNGLDRAWBUFFERPROC)(GLenum buf)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (PFNGLDRAWBUFFERSPROC)(GLsizei n,const GLenum * bufs)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode,GLenum type,const void * indirect)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const v/;"	t	typeref:typename:void (PFNGLDRAWELEMENTSPROC)(GLenum mode,GLsizei count,GLenum type,const void * indices)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode,GLuint id,GLsizei instancecount)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode,GLuint id)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode,GLuint id,GLuint stream)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (PFNGLENABLEIPROC)(GLenum target,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (PFNGLENABLEPROC)(GLenum cap)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (PFNGLENDCONDITIONALRENDERPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (PFNGLENDQUERYINDEXEDPROC)(GLenum target,GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (PFNGLENDQUERYPROC)(GLenum target)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (PFNGLENDTRANSFORMFEEDBACKPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t	typeref:typename:void (PFNGLFINISHPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target,GLintptr offset,GLsizeiptr length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t	typeref:typename:void (PFNGLFLUSHPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target,GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (PFNGLFRONTFACEPROC)(GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (PFNGLGENBUFFERSPROC)(GLsizei n,GLuint * buffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (PFNGLGENERATEMIPMAPPROC)(GLenum target)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t	typeref:typename:void (PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (PFNGLGENFRAMEBUFFERSPROC)(GLsizei n,GLuint * framebuffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n,GLuint * pipelines)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (PFNGLGENQUERIESPROC)(GLsizei n,GLuint * ids)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (PFNGLGENRENDERBUFFERSPROC)(GLsizei n,GLuint * renderbuffers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (PFNGLGENSAMPLERSPROC)(GLsizei count,GLuint * samplers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (PFNGLGENTEXTURESPROC)(GLsizei n,GLuint * textures)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n,GLuint * ids)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (PFNGLGENVERTEXARRAYSPROC)(GLsizei n,GLuint * arrays)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (PFNGLGETACTIVEATTRIBPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (PFNGLGETACTIVEUNIFORMPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (PFNGLGETATTACHEDSHADERSPROC)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (PFNGLGETBOOLEANI_VPROC)(GLenum target,GLuint index,GLboolean * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);$/;"	t	typeref:typename:void (PFNGLGETBOOLEANVPROC)(GLenum pname,GLboolean * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target,GLenum pname,GLint64 * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	t	typeref:typename:void (PFNGLGETBUFFERPOINTERVPROC)(GLenum target,GLenum pname,void ** params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (PFNGLGETBUFFERSUBDATAPROC)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t	typeref:typename:void (PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target,GLint level,void * img)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsize/;"	t	typeref:typename:void (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture,GLint level,GLsizei bufSize,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLi/;"	t	typeref:typename:void (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (PFNGLGETDOUBLEI_VPROC)(GLenum target,GLuint index,GLdouble * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);$/;"	t	typeref:typename:void (PFNGLGETDOUBLEVPROC)(GLenum pname,GLdouble * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (PFNGLGETFLOATI_VPROC)(GLenum target,GLuint index,GLfloat * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);$/;"	t	typeref:typename:void (PFNGLGETFLOATVPROC)(GLenum pname,GLfloat * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (PFNGLGETINTEGER64I_VPROC)(GLenum target,GLuint index,GLint64 * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t	typeref:typename:void (PFNGLGETINTEGER64VPROC)(GLenum pname,GLint64 * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (PFNGLGETINTEGERI_VPROC)(GLenum target,GLuint index,GLint * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);$/;"	t	typeref:typename:void (PFNGLGETINTEGERVPROC)(GLenum pname,GLint * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (PFNGLGETINTERNALFORMATI64VPROC)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (PFNGLGETINTERNALFORMATIVPROC)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (PFNGLGETMULTISAMPLEFVPROC)(GLenum pname,GLuint index,GLfloat * val)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLin/;"	t	typeref:typename:void (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer,GLenum pname,GLint64 * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint /;"	t	typeref:typename:void (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **pa/;"	t	typeref:typename:void (PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer,GLenum pname,void ** params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, /;"	t	typeref:typename:void (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pna/;"	t	typeref:typename:void (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer,GLenum pname,GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum p/;"	t	typeref:typename:void (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (PFNGLGETNAMEDSTRINGARBPROC)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (PFNGLGETNAMEDSTRINGIVARBPROC)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum target,GLint lod,GLsizei bufSize,void * img)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufS/;"	t	typeref:typename:void (PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target,GLint lod,GLsizei bufSize,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (PFNGLGETNTEXIMAGEARBPROC)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenu/;"	t	typeref:typename:void (PFNGLGETNTEXIMAGEPROC)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (PFNGLGETNUNIFORMDVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (PFNGLGETNUNIFORMDVPROC)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (PFNGLGETNUNIFORMFVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (PFNGLGETNUNIFORMFVPROC)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (PFNGLGETNUNIFORMIVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (PFNGLGETNUNIFORMIVPROC)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (PFNGLGETNUNIFORMUIVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSiz/;"	t	typeref:typename:void (PFNGLGETNUNIFORMUIVPROC)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (PFNGLGETOBJECTLABELPROC)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (PFNGLGETOBJECTPTRLABELPROC)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t	typeref:typename:void (PFNGLGETPOINTERVPROC)(GLenum pname,void ** params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (PFNGLGETPROGRAMBINARYPROC)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (PFNGLGETPROGRAMINFOLOGPROC)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (PFNGLGETPROGRAMIVPROC)(GLuint program,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pna/;"	t	typeref:typename:void (PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname/;"	t	typeref:typename:void (PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pn/;"	t	typeref:typename:void (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pnam/;"	t	typeref:typename:void (PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (PFNGLGETQUERYINDEXEDIVPROC)(GLenum target,GLuint index,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (PFNGLGETQUERYIVPROC)(GLenum target,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (PFNGLGETQUERYOBJECTI64VPROC)(GLuint id,GLenum pname,GLint64 * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (PFNGLGETQUERYOBJECTIVPROC)(GLuint id,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id,GLenum pname,GLuint64 * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (PFNGLGETQUERYOBJECTUIVPROC)(GLuint id,GLenum pname,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler,GLenum pname,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler,GLenum pname,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (PFNGLGETSHADERINFOLOGPROC)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (PFNGLGETSHADERIVPROC)(GLuint shader,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (PFNGLGETSHADERSOURCEPROC)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (PFNGLGETSYNCIVPROC)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum/;"	t	typeref:typename:void (PFNGLGETTEXIMAGEPROC)(GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target,GLint level,GLenum pname,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target,GLint level,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *param/;"	t	typeref:typename:void (PFNGLGETTEXPARAMETERFVPROC)(GLenum target,GLenum pname,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (PFNGLGETTEXPARAMETERIIVPROC)(GLenum target,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target,GLenum pname,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params)/;"	t	typeref:typename:void (PFNGLGETTEXPARAMETERIVPROC)(GLenum target,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, G/;"	t	typeref:typename:void (PFNGLGETTEXTUREIMAGEPROC)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenu/;"	t	typeref:typename:void (PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture,GLint level,GLenum pname,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenu/;"	t	typeref:typename:void (PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture,GLint level,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat */;"	t	typeref:typename:void (PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture,GLenum pname,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *p/;"	t	typeref:typename:void (PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint /;"	t	typeref:typename:void (PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture,GLenum pname,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *pa/;"	t	typeref:typename:void (PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset/;"	t	typeref:typename:void (PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint in/;"	t	typeref:typename:void (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb,GLenum pname,GLuint index,GLint64 * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param/;"	t	typeref:typename:void (PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb,GLenum pname,GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint inde/;"	t	typeref:typename:void (PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb,GLenum pname,GLuint index,GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (PFNGLGETUNIFORMDVPROC)(GLuint program,GLint location,GLdouble * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (PFNGLGETUNIFORMFVPROC)(GLuint program,GLint location,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (PFNGLGETUNIFORMINDICESPROC)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (PFNGLGETUNIFORMIVPROC)(GLuint program,GLint location,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype,GLint location,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (PFNGLGETUNIFORMUIVPROC)(GLuint program,GLint location,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum /;"	t	typeref:typename:void (PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj,GLuint index,GLenum pname,GLint64 * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pn/;"	t	typeref:typename:void (PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t	typeref:typename:void (PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj,GLenum pname,GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBDVPROC)(GLuint index,GLenum pname,GLdouble * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBFVPROC)(GLuint index,GLenum pname,GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index,GLenum pname,GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBIVPROC)(GLuint index,GLenum pname,GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index,GLenum pname,GLdouble * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBLUI64VARBPROC)(GLuint index,GLenum pname,GLuint64EXT * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	t	typeref:typename:void (PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index,GLenum pname,void ** pointer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (PFNGLHINTPROC)(GLenum target,GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei nu/;"	t	typeref:typename:void (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei/;"	t	typeref:typename:void (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture,GLint level)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t	typeref:typename:void (PFNGLLINEWIDTHPROC)(GLfloat width)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (PFNGLLINKPROGRAMPROC)(GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t	typeref:typename:void (PFNGLLOGICOPPROC)(GLenum opcode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)(GLuint64 handle)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle,GLenum access)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)(GLuint64 handle)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (PFNGLMEMORYBARRIERPROC)(GLbitfield barriers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (PFNGLMINSAMPLESHADINGARBPROC)(GLfloat value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (PFNGLMINSAMPLESHADINGPROC)(GLfloat value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirec/;"	t	typeref:typename:void (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (PFNGLMULTIDRAWARRAYSPROC)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, G/;"	t	typeref:typename:void (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *d/;"	t	typeref:typename:void (PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, /;"	t	typeref:typename:void (PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, /;"	t	typeref:typename:void (PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr/;"	t	typeref:typename:void (PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer,GLenum buf)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, co/;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, /;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer,GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer,GLenum src)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment/;"	t	typeref:typename:void (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsi/;"	t	typeref:typename:void (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internal/;"	t	typeref:typename:void (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (PFNGLNAMEDSTRINGARBPROC)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (PFNGLOBJECTLABELPROC)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (PFNGLOBJECTPTRLABELPROC)(const void * ptr,GLsizei length,const GLchar * label)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (PFNGLPATCHPARAMETERFVPROC)(GLenum pname,const GLfloat * values)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (PFNGLPATCHPARAMETERIPROC)(GLenum pname,GLint value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (PFNGLPAUSETRANSFORMFEEDBACKPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (PFNGLPIXELSTOREFPROC)(GLenum pname,GLfloat param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (PFNGLPIXELSTOREIPROC)(GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (PFNGLPOINTPARAMETERFPROC)(GLenum pname,GLfloat param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (PFNGLPOINTPARAMETERFVPROC)(GLenum pname,const GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (PFNGLPOINTPARAMETERIPROC)(GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (PFNGLPOINTPARAMETERIVPROC)(GLenum pname,const GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t	typeref:typename:void (PFNGLPOINTSIZEPROC)(GLfloat size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (PFNGLPOLYGONMODEPROC)(GLenum face,GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (PFNGLPOLYGONOFFSETPROC)(GLfloat factor,GLfloat units)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (PFNGLPOPDEBUGGROUPPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	t	typeref:typename:void (PFNGLPROGRAMBINARYPROC)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (PFNGLPROGRAMPARAMETERIPROC)(GLuint program,GLenum pname,GLint value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1DPROC)(GLuint program,GLint location,GLdouble v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1FPROC)(GLuint program,GLint location,GLfloat v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1IPROC)(GLuint program,GLint location,GLint v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program,GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program,GLint location,GLuint v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2DPROC)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2FPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2IPROC)(GLuint program,GLint location,GLint v0,GLint v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program,GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program,GLint location,GLuint v0,GLuint v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3DPROC)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3FPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3IPROC)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program,GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4DPROC)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4FPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4IPROC)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program,GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)(GLuint program,GLint location,GLuint64 value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (PFNGLPROVOKINGVERTEXPROC)(GLenum mode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (PFNGLPUSHDEBUGGROUPPROC)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (PFNGLQUERYCOUNTERPROC)(GLuint id,GLenum target)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);$/;"	t	typeref:typename:void (PFNGLREADBUFFERPROC)(GLenum src)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (PFNGLREADNPIXELSARBPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, /;"	t	typeref:typename:void (PFNGLREADNPIXELSPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, G/;"	t	typeref:typename:void (PFNGLREADPIXELSPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (PFNGLRELEASESHADERCOMPILERPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (PFNGLRESUMETRANSFORMFEEDBACKPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (PFNGLSAMPLECOVERAGEPROC)(GLfloat value,GLboolean invert)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t	typeref:typename:void (PFNGLSAMPLEMASKIPROC)(GLuint maskNumber,GLbitfield mask)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler,GLenum pname,GLfloat param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler,GLenum pname,const GLfloat * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler,GLenum pname,const GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler,GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler,GLenum pname,const GLuint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler,GLenum pname,const GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (PFNGLSCISSORARRAYVPROC)(GLuint first,GLsizei count,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (PFNGLSCISSORINDEXEDPROC)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLSCISSORINDEXEDVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (PFNGLSCISSORPROC)(GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (PFNGLSHADERBINARYPROC)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	t	typeref:typename:void (PFNGLSHADERSOURCEPROC)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (PFNGLSTENCILFUNCPROC)(GLenum func,GLint ref,GLuint mask)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face,GLenum func,GLint ref,GLuint mask)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t	typeref:typename:void (PFNGLSTENCILMASKPROC)(GLuint mask)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (PFNGLSTENCILMASKSEPARATEPROC)(GLenum face,GLuint mask)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t	typeref:typename:void (PFNGLSTENCILOPPROC)(GLenum fail,GLenum zfail,GLenum zpass)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (PFNGLSTENCILOPSEPARATEPROC)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (PFNGLTEXBUFFERPROC)(GLenum target,GLenum internalformat,GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (PFNGLTEXBUFFERRANGEPROC)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (PFNGLTEXIMAGE1DPROC)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (PFNGLTEXIMAGE2DPROC)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (PFNGLTEXIMAGE3DPROC)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (PFNGLTEXPAGECOMMITMENTARBPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (PFNGLTEXPARAMETERFPROC)(GLenum target,GLenum pname,GLfloat param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *pa/;"	t	typeref:typename:void (PFNGLTEXPARAMETERFVPROC)(GLenum target,GLenum pname,const GLfloat * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (PFNGLTEXPARAMETERIIVPROC)(GLenum target,GLenum pname,const GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t	typeref:typename:void (PFNGLTEXPARAMETERIPROC)(GLenum target,GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (PFNGLTEXPARAMETERIUIVPROC)(GLenum target,GLenum pname,const GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *para/;"	t	typeref:typename:void (PFNGLTEXPARAMETERIVPROC)(GLenum target,GLenum pname,const GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (PFNGLTEXSTORAGE1DPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (PFNGLTEXSTORAGE2DPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (PFNGLTEXSTORAGE3DPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsi/;"	t	typeref:typename:void (PFNGLTEXSUBIMAGE1DPROC)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (PFNGLTEXSUBIMAGE2DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (PFNGLTEXSUBIMAGE3DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t	typeref:typename:void (PFNGLTEXTUREBARRIERPROC)(void)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (PFNGLTEXTUREBUFFERPROC)(GLuint texture,GLenum internalformat,GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLu/;"	t	typeref:typename:void (PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param/;"	t	typeref:typename:void (PFNGLTEXTUREPARAMETERFPROC)(GLuint texture,GLenum pname,GLfloat param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloa/;"	t	typeref:typename:void (PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture,GLenum pname,const GLfloat * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint/;"	t	typeref:typename:void (PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture,GLenum pname,const GLint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t	typeref:typename:void (PFNGLTEXTUREPARAMETERIPROC)(GLuint texture,GLenum pname,GLint param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLui/;"	t	typeref:typename:void (PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture,GLenum pname,const GLuint * params)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint /;"	t	typeref:typename:void (PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture,GLenum pname,const GLint * param)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (PFNGLTEXTURESTORAGE1DPROC)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, /;"	t	typeref:typename:void (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (PFNGLTEXTURESTORAGE2DPROC)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, /;"	t	typeref:typename:void (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (PFNGLTEXTURESTORAGE3DPROC)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (PFNGLTEXTUREVIEWPROC)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint /;"	t	typeref:typename:void (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb,GLuint index,GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint/;"	t	typeref:typename:void (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (PFNGLUNIFORM1DPROC)(GLint location,GLdouble x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (PFNGLUNIFORM1DVPROC)(GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (PFNGLUNIFORM1FPROC)(GLint location,GLfloat v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (PFNGLUNIFORM1FVPROC)(GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (PFNGLUNIFORM1IPROC)(GLint location,GLint v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (PFNGLUNIFORM1IVPROC)(GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (PFNGLUNIFORM1UIPROC)(GLint location,GLuint v0)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (PFNGLUNIFORM1UIVPROC)(GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (PFNGLUNIFORM2DPROC)(GLint location,GLdouble x,GLdouble y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (PFNGLUNIFORM2DVPROC)(GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (PFNGLUNIFORM2FPROC)(GLint location,GLfloat v0,GLfloat v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (PFNGLUNIFORM2FVPROC)(GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (PFNGLUNIFORM2IPROC)(GLint location,GLint v0,GLint v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (PFNGLUNIFORM2IVPROC)(GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (PFNGLUNIFORM2UIPROC)(GLint location,GLuint v0,GLuint v1)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (PFNGLUNIFORM2UIVPROC)(GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (PFNGLUNIFORM3DPROC)(GLint location,GLdouble x,GLdouble y,GLdouble z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (PFNGLUNIFORM3DVPROC)(GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (PFNGLUNIFORM3FPROC)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (PFNGLUNIFORM3FVPROC)(GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (PFNGLUNIFORM3IPROC)(GLint location,GLint v0,GLint v1,GLint v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (PFNGLUNIFORM3IVPROC)(GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (PFNGLUNIFORM3UIPROC)(GLint location,GLuint v0,GLuint v1,GLuint v2)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (PFNGLUNIFORM3UIVPROC)(GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (PFNGLUNIFORM4DPROC)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (PFNGLUNIFORM4DVPROC)(GLint location,GLsizei count,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (PFNGLUNIFORM4FPROC)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (PFNGLUNIFORM4FVPROC)(GLint location,GLsizei count,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (PFNGLUNIFORM4IPROC)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (PFNGLUNIFORM4IVPROC)(GLint location,GLsizei count,const GLint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (PFNGLUNIFORM4UIPROC)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (PFNGLUNIFORM4UIVPROC)(GLint location,GLsizei count,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (PFNGLUNIFORMHANDLEUI64ARBPROC)(GLint location,GLuint64 value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	t	typeref:typename:void (PFNGLUNIFORMHANDLEUI64VARBPROC)(GLint location,GLsizei count,const GLuint64 * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX2DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX2FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX3DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX3FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX4DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX4FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype,GLsizei count,const GLuint * indices)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (PFNGLUSEPROGRAMPROC)(GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline,GLbitfield stages,GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (PFNGLVALIDATEPROGRAMPROC)(GLuint program)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLi/;"	t	typeref:typename:void (PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, /;"	t	typeref:typename:void (PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t	typeref:typename:void (PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj,GLuint buffer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GL/;"	t	typeref:typename:void (PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei /;"	t	typeref:typename:void (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB1DPROC)(GLuint index,GLdouble x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB1DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB1FPROC)(GLuint index,GLfloat x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB1FVPROC)(GLuint index,const GLfloat * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB1SPROC)(GLuint index,GLshort x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB1SVPROC)(GLuint index,const GLshort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB2DPROC)(GLuint index,GLdouble x,GLdouble y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB2DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB2FPROC)(GLuint index,GLfloat x,GLfloat y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB2FVPROC)(GLuint index,const GLfloat * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB2SPROC)(GLuint index,GLshort x,GLshort y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB2SVPROC)(GLuint index,const GLshort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB3DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB3DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB3FPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB3FVPROC)(GLuint index,const GLfloat * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB3SPROC)(GLuint index,GLshort x,GLshort y,GLshort z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB3SVPROC)(GLuint index,const GLshort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4BVPROC)(GLuint index,const GLbyte * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4FPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4FVPROC)(GLuint index,const GLfloat * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4IVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NBVPROC)(GLuint index,const GLbyte * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NIVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NSVPROC)(GLuint index,const GLshort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NUBPROC)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index,const GLubyte * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index,const GLuint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index,const GLushort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4SPROC)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4SVPROC)(GLuint index,const GLshort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4UBVPROC)(GLuint index,const GLubyte * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4UIVPROC)(GLuint index,const GLuint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIB4USVPROC)(GLuint index,const GLushort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex,GLuint bindingindex)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index,GLuint divisor)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI1IPROC)(GLuint index,GLint x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI1IVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI1UIPROC)(GLuint index,GLuint x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index,const GLuint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI2IPROC)(GLuint index,GLint x,GLint y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI2IVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI2UIPROC)(GLuint index,GLuint x,GLuint y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index,const GLuint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI3IPROC)(GLuint index,GLint x,GLint y,GLint z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI3IVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI3UIPROC)(GLuint index,GLuint x,GLuint y,GLuint z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index,const GLuint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4BVPROC)(GLuint index,const GLbyte * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4IPROC)(GLuint index,GLint x,GLint y,GLint z,GLint w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4IVPROC)(GLuint index,const GLint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4SVPROC)(GLuint index,const GLshort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index,const GLubyte * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4UIPROC)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index,const GLuint * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBI4USVPROC)(GLuint index,const GLushort * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL1DPROC)(GLuint index,GLdouble x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL1DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL1UI64ARBPROC)(GLuint index,GLuint64EXT x)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL1UI64VARBPROC)(GLuint index,const GLuint64EXT * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL2DPROC)(GLuint index,GLdouble x,GLdouble y)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL2DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL3DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL3DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL4DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBL4DVPROC)(GLuint index,const GLdouble * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP1UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP2UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP3UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP4UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex,GLuint divisor)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (PFNGLVIEWPORTARRAYVPROC)(GLuint first,GLsizei count,const GLfloat * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (PFNGLVIEWPORTINDEXEDFPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index,const GLfloat * v)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (PFNGLVIEWPORTPROC)(GLint x,GLint y,GLsizei width,GLsizei height)
APIENTRYP	include/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (PFNGLWAITSYNCPROC)(GLsync sync,GLbitfield flags,GLuint64 timeout)
APIENTRYP	include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (PFNGLMAPBUFFERPROC)(GLenum target,GLenum access)
APIENTRYP	include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	t	typeref:typename:void * (PFNGLMAPBUFFERRANGEPROC)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
APIENTRYP	include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer,GLenum access)
APIENTRYP	include/GL/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeip/;"	t	typeref:typename:void * (PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
Adam7_deinterlace	src/lodepng.cpp	/^static void Adam7_deinterlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned /;"	f	typeref:typename:void	file:
Adam7_getpassvalues	src/lodepng.cpp	/^static void Adam7_getpassvalues(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8]/;"	f	typeref:typename:void	file:
Adam7_interlace	src/lodepng.cpp	/^static void Adam7_interlace(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,/;"	f	typeref:typename:void	file:
AmbientLightDown	include/controls.h	/^    AmbientLightDown,$/;"	e	enum:ControlKeys
AmbientLightUp	include/controls.h	/^    AmbientLightUp,$/;"	e	enum:ControlKeys
AssignedKeyCount	include/controls.h	/^    AssignedKeyCount$/;"	e	enum:ControlKeys
B	include/glm/gtx/simd_vec4.hpp	/^		B = 2,$/;"	e	enum:glm::comp
BPMLists	src/lodepng.cpp	/^typedef struct BPMLists$/;"	s	file:
BPMLists	src/lodepng.cpp	/^} BPMLists;$/;"	t	typeref:struct:BPMLists	file:
BPMNode	src/lodepng.cpp	/^typedef struct BPMNode$/;"	s	file:
BPMNode	src/lodepng.cpp	/^} BPMNode;$/;"	t	typeref:struct:BPMNode	file:
Backward	include/controls.h	/^    Backward,$/;"	e	enum:ControlKeys
CAMERA_H	include/camera.h	/^#define CAMERA_H$/;"	d
CERROR_BREAK	src/lodepng.cpp	/^#define CERROR_BREAK(/;"	d	file:
CERROR_RETURN	src/lodepng.cpp	/^#define CERROR_RETURN(/;"	d	file:
CERROR_RETURN_ERROR	src/lodepng.cpp	/^#define CERROR_RETURN_ERROR(/;"	d	file:
CERROR_TRY_RETURN	src/lodepng.cpp	/^#define CERROR_TRY_RETURN(/;"	d	file:
CLCL_ORDER	src/lodepng.cpp	/^static const unsigned CLCL_ORDER[NUM_CODE_LENGTH_CODES]$/;"	v	typeref:typename:const unsigned[]	file:
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/chris\/Projects\/opengl-tutorial-solutions\/18-diffuse-lighting\/buil/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/chris\/Projects\/opengl-tutorial-solutions\/18-diffuse-lighting$/;"	m
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CONTROLS_H	include/controls.h	/^#define CONTROLS_H$/;"	d
Camera	include/camera.h	/^class Camera$/;"	c
Camera	src/camera.cpp	/^Camera::Camera(glm::mat4 defaultViewMatrix) :$/;"	f	class:Camera
ColorTree	src/lodepng.cpp	/^struct ColorTree$/;"	s	file:
ColorTree	src/lodepng.cpp	/^typedef struct ColorTree ColorTree;$/;"	t	typeref:struct:ColorTree	file:
ControlKeys	include/controls.h	/^enum class ControlKeys : int$/;"	g
Controls	include/controls.h	/^        Controls() :$/;"	f	class:Controls
Controls	include/controls.h	/^class Controls$/;"	c
DEC	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DEFAULT_WINDOWSIZE	src/lodepng.cpp	/^#define DEFAULT_WINDOWSIZE /;"	d	file:
DIRECTIONAL_H	include/lights/directional.h	/^#define DIRECTIONAL_H$/;"	d
DISTANCEBASE	src/lodepng.cpp	/^static const unsigned DISTANCEBASE[30]$/;"	v	typeref:typename:const unsigned[30]	file:
DISTANCEEXTRA	src/lodepng.cpp	/^static const unsigned DISTANCEEXTRA[30]$/;"	v	typeref:typename:const unsigned[30]	file:
Data	include/glm/gtx/simd_mat4.hpp	/^		fvec4SIMD Data[4];$/;"	v	namespace:glm::detail	typeref:typename:fvec4SIMD[4]
Data	include/glm/gtx/simd_quat.hpp	/^			__m128 Data;$/;"	m	union:glm::detail::__anonf0ac7c26010a	typeref:typename:__m128
Data	include/glm/gtx/simd_quat.hpp	/^		__m128 Data;$/;"	v	namespace:glm::detail	typeref:typename:__m128
Data	include/glm/gtx/simd_vec4.hpp	/^			__m128 Data;$/;"	m	union:glm::detail::__anonbe76097d010a	typeref:typename:__m128
Data	include/glm/gtx/simd_vec4.hpp	/^		__m128 Data;$/;"	v	namespace:glm::detail	typeref:typename:__m128
DirectionalLight	include/lights/directional.h	/^struct DirectionalLight$/;"	s
DirectionalLightList	include/lights/directional.h	/^class DirectionalLightList$/;"	c
Down	include/controls.h	/^    Down,$/;"	e	enum:ControlKeys
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
ERROR_BREAK	src/lodepng.cpp	/^#define ERROR_BREAK(/;"	d	file:
FIRST_LENGTH_CODE_INDEX	src/lodepng.cpp	/^#define FIRST_LENGTH_CODE_INDEX /;"	d	file:
File	include/utilities.h	/^    namespace File$/;"	n	namespace:Utilities
File	src/utilities.cpp	/^    namespace File$/;"	n	namespace:Utilities	file:
Forward	include/controls.h	/^    Forward,$/;"	e	enum:ControlKeys
G	include/glm/gtx/simd_vec4.hpp	/^		G = 1,$/;"	e	enum:glm::comp
GL3WglProc	include/GL/gl3w.h	/^typedef void (*GL3WglProc)(void);$/;"	t	typeref:typename:void (*)(void)
GLAPI	include/GL/glcorearb.h	/^#define GLAPI /;"	d
GLEXT_64_TYPES_DEFINED	include/GL/glcorearb.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLM_ALIGN	include/glm/detail/setup.hpp	/^#	define GLM_ALIGN$/;"	d
GLM_ALIGN	include/glm/detail/setup.hpp	/^#	define GLM_ALIGN(/;"	d
GLM_ALIGNED_STRUCT	include/glm/detail/setup.hpp	/^#	define GLM_ALIGNED_STRUCT(/;"	d
GLM_ALIGNED_TYPEDEF	include/glm/detail/setup.hpp	/^#	define GLM_ALIGNED_TYPEDEF(/;"	d
GLM_ARCH	include/glm/detail/setup.hpp	/^#		define GLM_ARCH /;"	d
GLM_ARCH	include/glm/detail/setup.hpp	/^#	define GLM_ARCH /;"	d
GLM_ARCH_ARM	include/glm/detail/setup.hpp	/^#define GLM_ARCH_ARM	/;"	d
GLM_ARCH_AVX	include/glm/detail/setup.hpp	/^#define GLM_ARCH_AVX	/;"	d
GLM_ARCH_AVX2	include/glm/detail/setup.hpp	/^#define GLM_ARCH_AVX2	/;"	d
GLM_ARCH_PURE	include/glm/detail/setup.hpp	/^#define GLM_ARCH_PURE	/;"	d
GLM_ARCH_SSE2	include/glm/detail/setup.hpp	/^#define GLM_ARCH_SSE2	/;"	d
GLM_ARCH_SSE3	include/glm/detail/setup.hpp	/^#define GLM_ARCH_SSE3	/;"	d
GLM_ARCH_SSE4	include/glm/detail/setup.hpp	/^#define GLM_ARCH_SSE4	/;"	d
GLM_ARCH_X86	include/glm/detail/setup.hpp	/^#define GLM_ARCH_X86	/;"	d
GLM_COMPILER	include/glm/detail/setup.hpp	/^#			define GLM_COMPILER /;"	d
GLM_COMPILER	include/glm/detail/setup.hpp	/^#		define GLM_COMPILER /;"	d
GLM_COMPILER	include/glm/detail/setup.hpp	/^#	define GLM_COMPILER /;"	d
GLM_COMPILER_APPLE_CLANG	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG	/;"	d
GLM_COMPILER_APPLE_CLANG40	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG40	/;"	d
GLM_COMPILER_APPLE_CLANG41	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG41	/;"	d
GLM_COMPILER_APPLE_CLANG42	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG42	/;"	d
GLM_COMPILER_APPLE_CLANG50	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG50	/;"	d
GLM_COMPILER_APPLE_CLANG51	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG51	/;"	d
GLM_COMPILER_APPLE_CLANG60	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG60	/;"	d
GLM_COMPILER_CUDA	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA	/;"	d
GLM_COMPILER_CUDA40	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA40	/;"	d
GLM_COMPILER_CUDA41	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA41	/;"	d
GLM_COMPILER_CUDA42	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA42	/;"	d
GLM_COMPILER_CUDA50	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA50	/;"	d
GLM_COMPILER_CUDA60	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA60	/;"	d
GLM_COMPILER_CUDA65	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA65	/;"	d
GLM_COMPILER_GCC	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC	/;"	d
GLM_COMPILER_GCC44	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC44	/;"	d
GLM_COMPILER_GCC45	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC45	/;"	d
GLM_COMPILER_GCC46	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC46	/;"	d
GLM_COMPILER_GCC47	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC47	/;"	d
GLM_COMPILER_GCC48	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC48	/;"	d
GLM_COMPILER_GCC49	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC49	/;"	d
GLM_COMPILER_GCC50	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC50	/;"	d
GLM_COMPILER_INTEL	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL	/;"	d
GLM_COMPILER_INTEL12	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL12	/;"	d
GLM_COMPILER_INTEL12_1	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL12_1	/;"	d
GLM_COMPILER_INTEL13	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL13	/;"	d
GLM_COMPILER_INTEL14	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL14	/;"	d
GLM_COMPILER_INTEL15	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL15	/;"	d
GLM_COMPILER_LLVM	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM	/;"	d
GLM_COMPILER_LLVM32	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM32	/;"	d
GLM_COMPILER_LLVM33	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM33	/;"	d
GLM_COMPILER_LLVM34	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM34	/;"	d
GLM_COMPILER_LLVM35	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM35	/;"	d
GLM_COMPILER_UNKNOWN	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_UNKNOWN	/;"	d
GLM_COMPILER_VC	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_VC	/;"	d
GLM_COMPILER_VC2010	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2010	/;"	d
GLM_COMPILER_VC2012	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2012	/;"	d
GLM_COMPILER_VC2013	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2013	/;"	d
GLM_COMPILER_VC2015	include/glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2015	/;"	d
GLM_CONSTEXPR	include/glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR /;"	d
GLM_CONSTEXPR	include/glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR$/;"	d
GLM_COUNTOF	include/glm/detail/setup.hpp	/^#	define GLM_COUNTOF(/;"	d
GLM_CUDA_FUNC_DECL	include/glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL /;"	d
GLM_CUDA_FUNC_DECL	include/glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL$/;"	d
GLM_CUDA_FUNC_DEF	include/glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF /;"	d
GLM_CUDA_FUNC_DEF	include/glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF$/;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_ACCESS_CONTROL_SFINAE$/;"	d
GLM_CXX11_ALIAS_TEMPLATE	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIAS_TEMPLATE$/;"	d
GLM_CXX11_ALIGNAS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIGNAS$/;"	d
GLM_CXX11_ATTRIBUTES	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_ATTRIBUTES$/;"	d
GLM_CXX11_AUTO_TYPE	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_AUTO_TYPE$/;"	d
GLM_CXX11_CONSTEXPR	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_CONSTEXPR$/;"	d
GLM_CXX11_DECLTYPE	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_DECLTYPE$/;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULTED_FUNCTIONS$/;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS$/;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_DELEGATING_CONSTRUCTORS$/;"	d
GLM_CXX11_DELETED_FUNCTIONS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_DELETED_FUNCTIONS$/;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_EXPLICIT_CONVERSIONS$/;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_GENERALIZED_INITIALIZERS$/;"	d
GLM_CXX11_IMPLICIT_MOVES	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_IMPLICIT_MOVES$/;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_INHERITING_CONSTRUCTORS$/;"	d
GLM_CXX11_INLINE_NAMESPACES	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_INLINE_NAMESPACES$/;"	d
GLM_CXX11_LAMBDAS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_LAMBDAS$/;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS$/;"	d
GLM_CXX11_NOEXCEPT	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_NOEXCEPT$/;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_NONSTATIC_MEMBER_INIT$/;"	d
GLM_CXX11_NULLPTR	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_NULLPTR$/;"	d
GLM_CXX11_OVERRIDE_CONTROL	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_OVERRIDE_CONTROL$/;"	d
GLM_CXX11_RANGE_FOR	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_RANGE_FOR$/;"	d
GLM_CXX11_RAW_STRING_LITERALS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_RAW_STRING_LITERALS$/;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS$/;"	d
GLM_CXX11_RVALUE_REFERENCES	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_RVALUE_REFERENCES$/;"	d
GLM_CXX11_STATIC_ASSERT	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_STATIC_ASSERT$/;"	d
GLM_CXX11_STRONG_ENUMS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_STRONG_ENUMS$/;"	d
GLM_CXX11_TRAILING_RETURN	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_TRAILING_RETURN$/;"	d
GLM_CXX11_UNICODE_LITERALS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_UNICODE_LITERALS$/;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_UNRESTRICTED_UNIONS$/;"	d
GLM_CXX11_USER_LITERALS	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_USER_LITERALS$/;"	d
GLM_CXX11_VARIADIC_TEMPLATES	include/glm/detail/_features.hpp	/^#		define GLM_CXX11_VARIADIC_TEMPLATES$/;"	d
GLM_CXX98_EXCEPTIONS	include/glm/detail/_features.hpp	/^#		define GLM_CXX98_EXCEPTIONS$/;"	d
GLM_CXX98_RTTI	include/glm/detail/_features.hpp	/^#		define GLM_CXX98_RTTI$/;"	d
GLM_DEPRECATED	include/glm/detail/setup.hpp	/^#	define GLM_DEPRECATED /;"	d
GLM_DEPRECATED	include/glm/detail/setup.hpp	/^#	define GLM_DEPRECATED$/;"	d
GLM_EXTRACT_WORDS	include/glm/gtc/ulp.inl	/^#define GLM_EXTRACT_WORDS(/;"	d	file:
GLM_FORCE_PURE	include/glm/detail/setup.hpp	/^#			define GLM_FORCE_PURE$/;"	d
GLM_FUNC_DECL	include/glm/detail/setup.hpp	/^#define GLM_FUNC_DECL /;"	d
GLM_FUNC_QUALIFIER	include/glm/detail/setup.hpp	/^#define GLM_FUNC_QUALIFIER /;"	d
GLM_GET_FLOAT_WORD	include/glm/gtc/ulp.inl	/^#define GLM_GET_FLOAT_WORD(/;"	d	file:
GLM_HAS_ANONYMOUS_UNION	include/glm/detail/setup.hpp	/^#define GLM_HAS_ANONYMOUS_UNION /;"	d
GLM_HAS_ASSIGNABLE	include/glm/detail/setup.hpp	/^#	define GLM_HAS_ASSIGNABLE /;"	d
GLM_HAS_BITSCAN_WINDOWS	include/glm/detail/setup.hpp	/^#	define GLM_HAS_BITSCAN_WINDOWS /;"	d
GLM_HAS_CONSTEXPR	include/glm/detail/setup.hpp	/^#	define GLM_HAS_CONSTEXPR /;"	d
GLM_HAS_CONSTEXPR_PARTIAL	include/glm/detail/setup.hpp	/^#	define GLM_HAS_CONSTEXPR_PARTIAL /;"	d
GLM_HAS_CXX11_STL	include/glm/detail/setup.hpp	/^#	define GLM_HAS_CXX11_STL /;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	include/glm/detail/setup.hpp	/^#	define GLM_HAS_DEFAULTED_FUNCTIONS /;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	include/glm/detail/setup.hpp	/^#	define GLM_HAS_EXPLICIT_CONVERSION_OPERATORS /;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	include/glm/detail/setup.hpp	/^#	define GLM_HAS_EXTENDED_INTEGER_TYPE /;"	d
GLM_HAS_INITIALIZER_LISTS	include/glm/detail/setup.hpp	/^#	define GLM_HAS_INITIALIZER_LISTS /;"	d
GLM_HAS_MAKE_SIGNED	include/glm/detail/setup.hpp	/^#	define GLM_HAS_MAKE_SIGNED /;"	d
GLM_HAS_OPENMP	include/glm/detail/setup.hpp	/^#			define GLM_HAS_OPENMP /;"	d
GLM_HAS_RANGE_FOR	include/glm/detail/setup.hpp	/^#	define GLM_HAS_RANGE_FOR /;"	d
GLM_HAS_RVALUE_REFERENCES	include/glm/detail/setup.hpp	/^#	define GLM_HAS_RVALUE_REFERENCES /;"	d
GLM_HAS_STATIC_ASSERT	include/glm/detail/setup.hpp	/^#	define GLM_HAS_STATIC_ASSERT /;"	d
GLM_HAS_TEMPLATE_ALIASES	include/glm/detail/setup.hpp	/^#	define GLM_HAS_TEMPLATE_ALIASES /;"	d
GLM_HAS_TRIVIAL_QUERIES	include/glm/detail/setup.hpp	/^#define GLM_HAS_TRIVIAL_QUERIES /;"	d
GLM_HAS_UNRESTRICTED_UNIONS	include/glm/detail/setup.hpp	/^#	define GLM_HAS_UNRESTRICTED_UNIONS /;"	d
GLM_IMPLEMENT_SCAL_MULT	include/glm/gtx/scalar_multiplication.hpp	/^#define GLM_IMPLEMENT_SCAL_MULT(/;"	d
GLM_INLINE	include/glm/detail/setup.hpp	/^#		define GLM_INLINE /;"	d
GLM_INLINE	include/glm/detail/setup.hpp	/^#	define GLM_INLINE /;"	d
GLM_INSERT_WORDS	include/glm/gtc/ulp.inl	/^#define GLM_INSERT_WORDS(/;"	d	file:
GLM_LANG	include/glm/detail/setup.hpp	/^#				define GLM_LANG /;"	d
GLM_LANG	include/glm/detail/setup.hpp	/^#			define GLM_LANG /;"	d
GLM_LANG	include/glm/detail/setup.hpp	/^#	define GLM_LANG /;"	d
GLM_LANG_CXX03	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX03	/;"	d
GLM_LANG_CXX03_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX03_FLAG	/;"	d
GLM_LANG_CXX0X	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X	/;"	d
GLM_LANG_CXX0X_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X_FLAG	/;"	d
GLM_LANG_CXX11	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX11	/;"	d
GLM_LANG_CXX11_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX11_FLAG	/;"	d
GLM_LANG_CXX14	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX14	/;"	d
GLM_LANG_CXX14_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX14_FLAG	/;"	d
GLM_LANG_CXX1Y	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Y	/;"	d
GLM_LANG_CXX1Y_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Y_FLAG	/;"	d
GLM_LANG_CXX1Z	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Z	/;"	d
GLM_LANG_CXX1Z_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Z_FLAG	/;"	d
GLM_LANG_CXX98	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX98	/;"	d
GLM_LANG_CXX98_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXX98_FLAG	/;"	d
GLM_LANG_CXXGNU	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU	/;"	d
GLM_LANG_CXXGNU_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU_FLAG	/;"	d
GLM_LANG_CXXMS	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS	/;"	d
GLM_LANG_CXXMS_FLAG	include/glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS_FLAG	/;"	d
GLM_MESSAGES	include/glm/detail/dummy.cpp	/^#define GLM_MESSAGES$/;"	d	file:
GLM_MESSAGE_ARCH_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_ARCH_DISPLAYED$/;"	d
GLM_MESSAGE_COMPILER_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_COMPILER_DISPLAYED$/;"	d
GLM_MESSAGE_CORE_INCLUDED_DISPLAYED	include/glm/glm.hpp	/^#	define GLM_MESSAGE_CORE_INCLUDED_DISPLAYED$/;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	include/glm/ext.hpp	/^#	define GLM_MESSAGE_EXT_INCLUDED_DISPLAYED$/;"	d
GLM_MESSAGE_FORCE_SIZE_T_LENGTH	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_FORCE_SIZE_T_LENGTH$/;"	d
GLM_MESSAGE_LANG_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_LANG_DISPLAYED$/;"	d
GLM_MESSAGE_MODEL_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_MODEL_DISPLAYED$/;"	d
GLM_MESSAGE_PLATFORM_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_PLATFORM_DISPLAYED$/;"	d
GLM_MESSAGE_SWIZZLE_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_SWIZZLE_DISPLAYED$/;"	d
GLM_MESSAGE_VERSION_DISPLAYED	include/glm/detail/setup.hpp	/^#	define GLM_MESSAGE_VERSION_DISPLAYED$/;"	d
GLM_MODEL	include/glm/detail/setup.hpp	/^#		define GLM_MODEL	/;"	d
GLM_MODEL	include/glm/detail/setup.hpp	/^#	define GLM_MODEL	/;"	d
GLM_MODEL_32	include/glm/detail/setup.hpp	/^#define GLM_MODEL_32	/;"	d
GLM_MODEL_64	include/glm/detail/setup.hpp	/^#define GLM_MODEL_64	/;"	d
GLM_MUTABLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_MUTABLE$/;"	d
GLM_NEVER_INLINE	include/glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE /;"	d
GLM_NEVER_INLINE	include/glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE$/;"	d
GLM_NEVER_INLINE	include/glm/detail/setup.hpp	/^#	define GLM_NEVER_INLINE$/;"	d
GLM_NOT_BUGGY_VC32BITS	include/glm/detail/type_vec4.hpp	/^#	define GLM_NOT_BUGGY_VC32BITS /;"	d
GLM_PLATFORM	include/glm/detail/setup.hpp	/^#	define GLM_PLATFORM /;"	d
GLM_PLATFORM_ANDROID	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_ANDROID	/;"	d
GLM_PLATFORM_APPLE	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_APPLE	/;"	d
GLM_PLATFORM_CHROME_NACL	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_CHROME_NACL	/;"	d
GLM_PLATFORM_LINUX	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_LINUX	/;"	d
GLM_PLATFORM_QNXNTO	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_QNXNTO	/;"	d
GLM_PLATFORM_UNIX	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_UNIX	/;"	d
GLM_PLATFORM_UNKNOWN	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_UNKNOWN	/;"	d
GLM_PLATFORM_WINCE	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_WINCE	/;"	d
GLM_PLATFORM_WINDOWS	include/glm/detail/setup.hpp	/^#define GLM_PLATFORM_WINDOWS	/;"	d
GLM_RESTRICT	include/glm/detail/setup.hpp	/^#	define GLM_RESTRICT /;"	d
GLM_RESTRICT	include/glm/detail/setup.hpp	/^#	define GLM_RESTRICT$/;"	d
GLM_RESTRICT_VAR	include/glm/detail/setup.hpp	/^#	define GLM_RESTRICT_VAR /;"	d
GLM_RESTRICT_VAR	include/glm/detail/setup.hpp	/^#	define GLM_RESTRICT_VAR$/;"	d
GLM_SET_FLOAT_WORD	include/glm/gtc/ulp.inl	/^#define GLM_SET_FLOAT_WORD(/;"	d	file:
GLM_STATIC_ASSERT	include/glm/detail/setup.hpp	/^#	define GLM_STATIC_ASSERT(/;"	d
GLM_STATIC_ASSERT_NULL	include/glm/detail/setup.hpp	/^#	define GLM_STATIC_ASSERT_NULL$/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	include/glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP(/;"	d
GLM_TEMPLATE_GENTYPE	include/glm/detail/dummy.cpp	/^#define GLM_TEMPLATE_GENTYPE /;"	d	file:
GLM_VAR_USED	include/glm/detail/setup.hpp	/^#	define GLM_VAR_USED /;"	d
GLM_VAR_USED	include/glm/detail/setup.hpp	/^#	define GLM_VAR_USED$/;"	d
GLM_VERSION	include/glm/detail/setup.hpp	/^#define GLM_VERSION	/;"	d
GLM_VERSION_MAJOR	include/glm/detail/setup.hpp	/^#define GLM_VERSION_MAJOR	/;"	d
GLM_VERSION_MINOR	include/glm/detail/setup.hpp	/^#define GLM_VERSION_MINOR	/;"	d
GLM_VERSION_PATCH	include/glm/detail/setup.hpp	/^#define GLM_VERSION_PATCH	/;"	d
GLM_VERSION_REVISION	include/glm/detail/setup.hpp	/^#define GLM_VERSION_REVISION	/;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	include/GL/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	include/GL/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	include/GL/glcorearb.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_RESOURCES	include/GL/glcorearb.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_SUBROUTINES	include/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	include/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	include/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	include/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	include/GL/glcorearb.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	include/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	include/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	include/GL/glcorearb.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	include/GL/glcorearb.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALL_BARRIER_BITS	include/GL/glcorearb.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_SHADER_BITS	include/GL/glcorearb.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALPHA	include/GL/glcorearb.h	/^#define GL_ALPHA /;"	d
GL_ALREADY_SIGNALED	include/GL/glcorearb.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS	include/GL/glcorearb.h	/^#define GL_ALWAYS /;"	d
GL_AND	include/GL/glcorearb.h	/^#define GL_AND /;"	d
GL_AND_INVERTED	include/GL/glcorearb.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	include/GL/glcorearb.h	/^#define GL_AND_REVERSE /;"	d
GL_ANY_SAMPLES_PASSED	include/GL/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	include/GL/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_ARB_ES2_compatibility	include/GL/glcorearb.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_1_compatibility	include/GL/glcorearb.h	/^#define GL_ARB_ES3_1_compatibility /;"	d
GL_ARB_ES3_compatibility	include/GL/glcorearb.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	include/GL/glcorearb.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	include/GL/glcorearb.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	include/GL/glcorearb.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	include/GL/glcorearb.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	include/GL/glcorearb.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	include/GL/glcorearb.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	include/GL/glcorearb.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	include/GL/glcorearb.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_clip_control	include/GL/glcorearb.h	/^#define GL_ARB_clip_control /;"	d
GL_ARB_compressed_texture_pixel_storage	include/GL/glcorearb.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	include/GL/glcorearb.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	include/GL/glcorearb.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conditional_render_inverted	include/GL/glcorearb.h	/^#define GL_ARB_conditional_render_inverted /;"	d
GL_ARB_conservative_depth	include/GL/glcorearb.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	include/GL/glcorearb.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	include/GL/glcorearb.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_cull_distance	include/GL/glcorearb.h	/^#define GL_ARB_cull_distance /;"	d
GL_ARB_debug_output	include/GL/glcorearb.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	include/GL/glcorearb.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	include/GL/glcorearb.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_derivative_control	include/GL/glcorearb.h	/^#define GL_ARB_derivative_control /;"	d
GL_ARB_direct_state_access	include/GL/glcorearb.h	/^#define GL_ARB_direct_state_access /;"	d
GL_ARB_draw_buffers_blend	include/GL/glcorearb.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	include/GL/glcorearb.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	include/GL/glcorearb.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_enhanced_layouts	include/GL/glcorearb.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	include/GL/glcorearb.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	include/GL/glcorearb.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	include/GL/glcorearb.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	include/GL/glcorearb.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_framebuffer_no_attachments	include/GL/glcorearb.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	include/GL/glcorearb.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	include/GL/glcorearb.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_get_program_binary	include/GL/glcorearb.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_get_texture_sub_image	include/GL/glcorearb.h	/^#define GL_ARB_get_texture_sub_image /;"	d
GL_ARB_gpu_shader5	include/GL/glcorearb.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	include/GL/glcorearb.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_half_float_vertex	include/GL/glcorearb.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	include/GL/glcorearb.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	include/GL/glcorearb.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_internalformat_query	include/GL/glcorearb.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	include/GL/glcorearb.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	include/GL/glcorearb.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	include/GL/glcorearb.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	include/GL/glcorearb.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_multi_bind	include/GL/glcorearb.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	include/GL/glcorearb.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_occlusion_query2	include/GL/glcorearb.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_pipeline_statistics_query	include/GL/glcorearb.h	/^#define GL_ARB_pipeline_statistics_query /;"	d
GL_ARB_program_interface_query	include/GL/glcorearb.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	include/GL/glcorearb.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	include/GL/glcorearb.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	include/GL/glcorearb.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	include/GL/glcorearb.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	include/GL/glcorearb.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_shading	include/GL/glcorearb.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	include/GL/glcorearb.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	include/GL/glcorearb.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	include/GL/glcorearb.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	include/GL/glcorearb.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counters	include/GL/glcorearb.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_bit_encoding	include/GL/glcorearb.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_draw_parameters	include/GL/glcorearb.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	include/GL/glcorearb.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	include/GL/glcorearb.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	include/GL/glcorearb.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_precision	include/GL/glcorearb.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	include/GL/glcorearb.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	include/GL/glcorearb.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	include/GL/glcorearb.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_image_samples	include/GL/glcorearb.h	/^#define GL_ARB_shader_texture_image_samples /;"	d
GL_ARB_shading_language_420pack	include/GL/glcorearb.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	include/GL/glcorearb.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	include/GL/glcorearb.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_sparse_buffer	include/GL/glcorearb.h	/^#define GL_ARB_sparse_buffer /;"	d
GL_ARB_sparse_texture	include/GL/glcorearb.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_stencil_texturing	include/GL/glcorearb.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	include/GL/glcorearb.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	include/GL/glcorearb.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_barrier	include/GL/glcorearb.h	/^#define GL_ARB_texture_barrier /;"	d
GL_ARB_texture_buffer_object_rgb32	include/GL/glcorearb.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	include/GL/glcorearb.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression_bptc	include/GL/glcorearb.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	include/GL/glcorearb.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map_array	include/GL/glcorearb.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_gather	include/GL/glcorearb.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	include/GL/glcorearb.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_multisample	include/GL/glcorearb.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_query_levels	include/GL/glcorearb.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	include/GL/glcorearb.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rg	include/GL/glcorearb.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	include/GL/glcorearb.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	include/GL/glcorearb.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	include/GL/glcorearb.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	include/GL/glcorearb.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	include/GL/glcorearb.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	include/GL/glcorearb.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	include/GL/glcorearb.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	include/GL/glcorearb.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	include/GL/glcorearb.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	include/GL/glcorearb.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transform_feedback_overflow_query	include/GL/glcorearb.h	/^#define GL_ARB_transform_feedback_overflow_query /;"	d
GL_ARB_uniform_buffer_object	include/GL/glcorearb.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	include/GL/glcorearb.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	include/GL/glcorearb.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	include/GL/glcorearb.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	include/GL/glcorearb.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	include/GL/glcorearb.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	include/GL/glcorearb.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	include/GL/glcorearb.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARRAY_BUFFER	include/GL/glcorearb.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_SIZE	include/GL/glcorearb.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	include/GL/glcorearb.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BUFFER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	include/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	include/GL/glcorearb.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_AUTO_GENERATE_MIPMAP	include/GL/glcorearb.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_BACK	include/GL/glcorearb.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	include/GL/glcorearb.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_RIGHT	include/GL/glcorearb.h	/^#define GL_BACK_RIGHT /;"	d
GL_BGR	include/GL/glcorearb.h	/^#define GL_BGR /;"	d
GL_BGRA	include/GL/glcorearb.h	/^#define GL_BGRA /;"	d
GL_BGRA_INTEGER	include/GL/glcorearb.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGR_INTEGER	include/GL/glcorearb.h	/^#define GL_BGR_INTEGER /;"	d
GL_BLEND	include/GL/glcorearb.h	/^#define GL_BLEND /;"	d
GL_BLEND_COLOR	include/GL/glcorearb.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_DST	include/GL/glcorearb.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	include/GL/glcorearb.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_RGB	include/GL/glcorearb.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_EQUATION	include/GL/glcorearb.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	include/GL/glcorearb.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_RGB	include/GL/glcorearb.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_SRC	include/GL/glcorearb.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	include/GL/glcorearb.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_RGB	include/GL/glcorearb.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLOCK_INDEX	include/GL/glcorearb.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE	include/GL/glcorearb.h	/^#define GL_BLUE /;"	d
GL_BLUE_INTEGER	include/GL/glcorearb.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BOOL	include/GL/glcorearb.h	/^#define GL_BOOL /;"	d
GL_BOOL_VEC2	include/GL/glcorearb.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC3	include/GL/glcorearb.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC4	include/GL/glcorearb.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BUFFER	include/GL/glcorearb.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	include/GL/glcorearb.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_FLAGS	include/GL/glcorearb.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	include/GL/glcorearb.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	include/GL/glcorearb.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_MAPPED	include/GL/glcorearb.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAP_LENGTH	include/GL/glcorearb.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	include/GL/glcorearb.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	include/GL/glcorearb.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_STORAGE_FLAGS	include/GL/glcorearb.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_USAGE	include/GL/glcorearb.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_VARIABLE	include/GL/glcorearb.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BYTE	include/GL/glcorearb.h	/^#define GL_BYTE /;"	d
GL_CAVEAT_SUPPORT	include/GL/glcorearb.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CCW	include/GL/glcorearb.h	/^#define GL_CCW /;"	d
GL_CLAMP_READ_COLOR	include/GL/glcorearb.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_TO_BORDER	include/GL/glcorearb.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_EDGE	include/GL/glcorearb.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLEAR	include/GL/glcorearb.h	/^#define GL_CLEAR /;"	d
GL_CLEAR_BUFFER	include/GL/glcorearb.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	include/GL/glcorearb.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_STORAGE_BIT	include/GL/glcorearb.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	include/GL/glcorearb.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES_ARB /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	include/GL/glcorearb.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB /;"	d
GL_CLIP_DEPTH_MODE	include/GL/glcorearb.h	/^#define GL_CLIP_DEPTH_MODE /;"	d
GL_CLIP_DISTANCE0	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	include/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_ORIGIN	include/GL/glcorearb.h	/^#define GL_CLIP_ORIGIN /;"	d
GL_COLOR	include/GL/glcorearb.h	/^#define GL_COLOR /;"	d
GL_COLOR_ATTACHMENT0	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT1	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT11	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT12	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT13	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT14	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT15	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT16	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT16 /;"	d
GL_COLOR_ATTACHMENT17	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT17 /;"	d
GL_COLOR_ATTACHMENT18	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT18 /;"	d
GL_COLOR_ATTACHMENT19	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT19 /;"	d
GL_COLOR_ATTACHMENT2	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT20	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT20 /;"	d
GL_COLOR_ATTACHMENT21	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT21 /;"	d
GL_COLOR_ATTACHMENT22	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT22 /;"	d
GL_COLOR_ATTACHMENT23	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT23 /;"	d
GL_COLOR_ATTACHMENT24	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT24 /;"	d
GL_COLOR_ATTACHMENT25	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT25 /;"	d
GL_COLOR_ATTACHMENT26	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT26 /;"	d
GL_COLOR_ATTACHMENT27	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT27 /;"	d
GL_COLOR_ATTACHMENT28	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT28 /;"	d
GL_COLOR_ATTACHMENT29	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT29 /;"	d
GL_COLOR_ATTACHMENT3	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT30	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT30 /;"	d
GL_COLOR_ATTACHMENT31	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT31 /;"	d
GL_COLOR_ATTACHMENT4	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT5	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT6	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT7	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT8	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT9	include/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_BUFFER_BIT	include/GL/glcorearb.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_CLEAR_VALUE	include/GL/glcorearb.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_COMPONENTS	include/GL/glcorearb.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	include/GL/glcorearb.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_LOGIC_OP	include/GL/glcorearb.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_RENDERABLE	include/GL/glcorearb.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_WRITEMASK	include/GL/glcorearb.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMMAND_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMPARE_REF_TO_TEXTURE	include/GL/glcorearb.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPATIBLE_SUBROUTINES	include/GL/glcorearb.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE_STATUS	include/GL/glcorearb.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_R11_EAC	include/GL/glcorearb.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_RGTC1	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RG	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RG_RGTC2	include/GL/glcorearb.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SRGB	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	include/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	include/GL/glcorearb.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPUTE_SHADER	include/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	include/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	include/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS_ARB /;"	d
GL_COMPUTE_SUBROUTINE	include/GL/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	include/GL/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	include/GL/glcorearb.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	include/GL/glcorearb.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_CONDITION_SATISFIED	include/GL/glcorearb.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONSTANT_ALPHA	include/GL/glcorearb.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_COLOR	include/GL/glcorearb.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	include/GL/glcorearb.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	include/GL/glcorearb.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	include/GL/glcorearb.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	include/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	include/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	include/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	include/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	include/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_LOST	include/GL/glcorearb.h	/^#define GL_CONTEXT_LOST /;"	d
GL_CONTEXT_PROFILE_MASK	include/GL/glcorearb.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	include/GL/glcorearb.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	include/GL/glcorearb.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	d
GL_CONTEXT_ROBUST_ACCESS	include/GL/glcorearb.h	/^#define GL_CONTEXT_ROBUST_ACCESS /;"	d
GL_COPY	include/GL/glcorearb.h	/^#define GL_COPY /;"	d
GL_COPY_INVERTED	include/GL/glcorearb.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_READ_BUFFER	include/GL/glcorearb.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	include/GL/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_CULL_FACE	include/GL/glcorearb.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	include/GL/glcorearb.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CURRENT_PROGRAM	include/GL/glcorearb.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	include/GL/glcorearb.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_VERTEX_ATTRIB	include/GL/glcorearb.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CW	include/GL/glcorearb.h	/^#define GL_CW /;"	d
GL_DEBUG_CALLBACK_FUNCTION	include/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	include/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	include/GL/glcorearb.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	include/GL/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	include/GL/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	include/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	include/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	include/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	include/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECR	include/GL/glcorearb.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	include/GL/glcorearb.h	/^#define GL_DECR_WRAP /;"	d
GL_DELETE_STATUS	include/GL/glcorearb.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPTH	include/GL/glcorearb.h	/^#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	include/GL/glcorearb.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8	include/GL/glcorearb.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH_ATTACHMENT	include/GL/glcorearb.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_BUFFER_BIT	include/GL/glcorearb.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_CLAMP	include/GL/glcorearb.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLEAR_VALUE	include/GL/glcorearb.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	include/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	include/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT24	include/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT32	include/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	include/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENTS	include/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_FUNC	include/GL/glcorearb.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	include/GL/glcorearb.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RENDERABLE	include/GL/glcorearb.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_STENCIL	include/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	include/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	include/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_TEST	include/GL/glcorearb.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_WRITEMASK	include/GL/glcorearb.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DISPATCH_INDIRECT_BUFFER	include/GL/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DITHER	include/GL/glcorearb.h	/^#define GL_DITHER /;"	d
GL_DONT_CARE	include/GL/glcorearb.h	/^#define GL_DONT_CARE /;"	d
GL_DOUBLE	include/GL/glcorearb.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	include/GL/glcorearb.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DOUBLE_MAT2	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2x3	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x4	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT3	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3x2	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x4	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT4	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4x2	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x3	include/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_VEC2	include/GL/glcorearb.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC3	include/GL/glcorearb.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC4	include/GL/glcorearb.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DRAW_BUFFER	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER1	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER11	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER12	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER13	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER14	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER15	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER2	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER3	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER4	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER5	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER6	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER7	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER8	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER9	include/GL/glcorearb.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_FRAMEBUFFER	include/GL/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_BUFFER	include/GL/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DST_ALPHA	include/GL/glcorearb.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_COLOR	include/GL/glcorearb.h	/^#define GL_DST_COLOR /;"	d
GL_DYNAMIC_COPY	include/GL/glcorearb.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_DRAW	include/GL/glcorearb.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_READ	include/GL/glcorearb.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_STORAGE_BIT	include/GL/glcorearb.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BUFFER	include/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_EQUAL	include/GL/glcorearb.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	include/GL/glcorearb.h	/^#define GL_EQUIV /;"	d
GL_EXTENSIONS	include/GL/glcorearb.h	/^#define GL_EXTENSIONS /;"	d
GL_FALSE	include/GL/glcorearb.h	/^#define GL_FALSE /;"	d
GL_FALSE	include/glm/detail/dummy.cpp	/^#define GL_FALSE /;"	d	file:
GL_FASTEST	include/GL/glcorearb.h	/^#define GL_FASTEST /;"	d
GL_FILL	include/GL/glcorearb.h	/^#define GL_FILL /;"	d
GL_FILTER	include/GL/glcorearb.h	/^#define GL_FILTER /;"	d
GL_FIRST_VERTEX_CONVENTION	include/GL/glcorearb.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIXED	include/GL/glcorearb.h	/^#define GL_FIXED /;"	d
GL_FIXED_ONLY	include/GL/glcorearb.h	/^#define GL_FIXED_ONLY /;"	d
GL_FLOAT	include/GL/glcorearb.h	/^#define GL_FLOAT /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	include/GL/glcorearb.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_MAT2	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2x3	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3x2	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4x2	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	include/GL/glcorearb.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_VEC2	include/GL/glcorearb.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC3	include/GL/glcorearb.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC4	include/GL/glcorearb.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FRACTIONAL_EVEN	include/GL/glcorearb.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	include/GL/glcorearb.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	include/GL/glcorearb.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_SHADER	include/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_BIT	include/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	include/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	include/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	include/GL/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	include/GL/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	include/GL/glcorearb.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BLEND	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_DEFAULT	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_RENDERABLE	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SRGB	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_UNDEFINED	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	include/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRONT	include/GL/glcorearb.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	include/GL/glcorearb.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	include/GL/glcorearb.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_LEFT	include/GL/glcorearb.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	include/GL/glcorearb.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FULL_SUPPORT	include/GL/glcorearb.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	include/GL/glcorearb.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_REVERSE_SUBTRACT	include/GL/glcorearb.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	include/GL/glcorearb.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_GEOMETRY_INPUT_TYPE	include/GL/glcorearb.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE	include/GL/glcorearb.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_SHADER	include/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_BIT	include/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	include/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	include/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB /;"	d
GL_GEOMETRY_SUBROUTINE	include/GL/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	include/GL/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	include/GL/glcorearb.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	include/GL/glcorearb.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEQUAL	include/GL/glcorearb.h	/^#define GL_GEQUAL /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	include/GL/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	include/GL/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GREATER	include/GL/glcorearb.h	/^#define GL_GREATER /;"	d
GL_GREEN	include/GL/glcorearb.h	/^#define GL_GREEN /;"	d
GL_GREEN_INTEGER	include/GL/glcorearb.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GUILTY_CONTEXT_RESET	include/GL/glcorearb.h	/^#define GL_GUILTY_CONTEXT_RESET /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	include/GL/glcorearb.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_FLOAT	include/GL/glcorearb.h	/^#define GL_HALF_FLOAT /;"	d
GL_HIGH_FLOAT	include/GL/glcorearb.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	include/GL/glcorearb.h	/^#define GL_HIGH_INT /;"	d
GL_IMAGE_1D	include/GL/glcorearb.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_2D	include/GL/glcorearb.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_RECT	include/GL/glcorearb.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_3D	include/GL/glcorearb.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_BINDING_ACCESS	include/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_FORMAT	include/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_LAYER	include/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	include/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LEVEL	include/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_NAME	include/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BUFFER	include/GL/glcorearb.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_CLASS_10_10_10_2	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	include/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	include/GL/glcorearb.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	include/GL/glcorearb.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	include/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	include/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	include/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_PIXEL_FORMAT	include/GL/glcorearb.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	include/GL/glcorearb.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_TEXEL_SIZE	include/GL/glcorearb.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	include/GL/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	include/GL/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_INCR	include/GL/glcorearb.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	include/GL/glcorearb.h	/^#define GL_INCR_WRAP /;"	d
GL_INFO_LOG_LENGTH	include/GL/glcorearb.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INNOCENT_CONTEXT_RESET	include/GL/glcorearb.h	/^#define GL_INNOCENT_CONTEXT_RESET /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	include/GL/glcorearb.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INT	include/GL/glcorearb.h	/^#define GL_INT /;"	d
GL_INTERLEAVED_ATTRIBS	include/GL/glcorearb.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	include/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INT_2_10_10_10_REV	include/GL/glcorearb.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_2D	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_RECT	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_3D	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_BUFFER	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_CUBE	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_1D	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_2D	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_3D	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_BUFFER	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_CUBE	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	include/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_VEC2	include/GL/glcorearb.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC3	include/GL/glcorearb.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC4	include/GL/glcorearb.h	/^#define GL_INT_VEC4 /;"	d
GL_INVALID_ENUM	include/GL/glcorearb.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	include/GL/glcorearb.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_INDEX	include/GL/glcorearb.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	include/GL/glcorearb.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	include/GL/glcorearb.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVERT	include/GL/glcorearb.h	/^#define GL_INVERT /;"	d
GL_ISOLINES	include/GL/glcorearb.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	include/GL/glcorearb.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	include/GL/glcorearb.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_KEEP	include/GL/glcorearb.h	/^#define GL_KEEP /;"	d
GL_KHR_context_flush_control	include/GL/glcorearb.h	/^#define GL_KHR_context_flush_control /;"	d
GL_KHR_debug	include/GL/glcorearb.h	/^#define GL_KHR_debug /;"	d
GL_KHR_no_error	include/GL/glcorearb.h	/^#define GL_KHR_no_error /;"	d
GL_KHR_robust_buffer_access_behavior	include/GL/glcorearb.h	/^#define GL_KHR_robust_buffer_access_behavior /;"	d
GL_KHR_robustness	include/GL/glcorearb.h	/^#define GL_KHR_robustness /;"	d
GL_KHR_texture_compression_astc_hdr	include/GL/glcorearb.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	include/GL/glcorearb.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_LAST_VERTEX_CONVENTION	include/GL/glcorearb.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAYER_PROVOKING_VERTEX	include/GL/glcorearb.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LEFT	include/GL/glcorearb.h	/^#define GL_LEFT /;"	d
GL_LEQUAL	include/GL/glcorearb.h	/^#define GL_LEQUAL /;"	d
GL_LESS	include/GL/glcorearb.h	/^#define GL_LESS /;"	d
GL_LINE	include/GL/glcorearb.h	/^#define GL_LINE /;"	d
GL_LINEAR	include/GL/glcorearb.h	/^#define GL_LINEAR /;"	d
GL_LINEAR_MIPMAP_LINEAR	include/GL/glcorearb.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	include/GL/glcorearb.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	include/GL/glcorearb.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	include/GL/glcorearb.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINE_LOOP	include/GL/glcorearb.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_SMOOTH	include/GL/glcorearb.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	include/GL/glcorearb.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STRIP	include/GL/glcorearb.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	include/GL/glcorearb.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_WIDTH	include/GL/glcorearb.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_GRANULARITY	include/GL/glcorearb.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	include/GL/glcorearb.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	include/GL/glcorearb.h	/^#define GL_LINK_STATUS /;"	d
GL_LOCATION	include/GL/glcorearb.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	include/GL/glcorearb.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	include/GL/glcorearb.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOGIC_OP_MODE	include/GL/glcorearb.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOSE_CONTEXT_ON_RESET	include/GL/glcorearb.h	/^#define GL_LOSE_CONTEXT_ON_RESET /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	include/GL/glcorearb.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	include/GL/glcorearb.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	include/GL/glcorearb.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	include/GL/glcorearb.h	/^#define GL_LOW_INT /;"	d
GL_MAJOR_VERSION	include/GL/glcorearb.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	include/GL/glcorearb.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP_COHERENT_BIT	include/GL/glcorearb.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	include/GL/glcorearb.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	include/GL/glcorearb.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	include/GL/glcorearb.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_PERSISTENT_BIT	include/GL/glcorearb.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	include/GL/glcorearb.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	include/GL/glcorearb.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	include/GL/glcorearb.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATRIX_STRIDE	include/GL/glcorearb.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAX	include/GL/glcorearb.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	include/GL/glcorearb.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	include/GL/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_CLIP_DISTANCES	include/GL/glcorearb.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COLOR_ATTACHMENTS	include/GL/glcorearb.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	include/GL/glcorearb.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CULL_DISTANCES	include/GL/glcorearb.h	/^#define GL_MAX_CULL_DISTANCES /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	include/GL/glcorearb.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	include/GL/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	include/GL/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	include/GL/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	include/GL/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEPTH	include/GL/glcorearb.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	include/GL/glcorearb.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	include/GL/glcorearb.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_VERTICES	include/GL/glcorearb.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENT_INDEX	include/GL/glcorearb.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	include/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	include/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	include/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	include/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	include/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_HEIGHT	include/GL/glcorearb.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	include/GL/glcorearb.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_INTEGER_SAMPLES	include/GL/glcorearb.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	include/GL/glcorearb.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	include/GL/glcorearb.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_NAME_LENGTH	include/GL/glcorearb.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	include/GL/glcorearb.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	include/GL/glcorearb.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_PATCH_VERTICES	include/GL/glcorearb.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	include/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	include/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	include/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	include/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_SAMPLES	include/GL/glcorearb.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLE_MASK_WORDS	include/GL/glcorearb.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	include/GL/glcorearb.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	include/GL/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	include/GL/glcorearb.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	include/GL/glcorearb.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	include/GL/glcorearb.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SUBROUTINES	include/GL/glcorearb.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	include/GL/glcorearb.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	include/GL/glcorearb.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_LOD_BIAS	include/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	include/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	include/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	include/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	include/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_FLOATS	include/GL/glcorearb.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_VECTORS	include/GL/glcorearb.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_STREAMS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	include/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VIEWPORTS	include/GL/glcorearb.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORT_DIMS	include/GL/glcorearb.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_WIDTH	include/GL/glcorearb.h	/^#define GL_MAX_WIDTH /;"	d
GL_MEDIUM_FLOAT	include/GL/glcorearb.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	include/GL/glcorearb.h	/^#define GL_MEDIUM_INT /;"	d
GL_MIN	include/GL/glcorearb.h	/^#define GL_MIN /;"	d
GL_MINOR_VERSION	include/GL/glcorearb.h	/^#define GL_MINOR_VERSION /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	include/GL/glcorearb.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	include/GL/glcorearb.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	include/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	include/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	include/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	include/GL/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	include/GL/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIPMAP	include/GL/glcorearb.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	include/GL/glcorearb.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	include/GL/glcorearb.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_MULTISAMPLE /;"	d
GL_NAMED_STRING_LENGTH_ARB	include/GL/glcorearb.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	include/GL/glcorearb.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	include/GL/glcorearb.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAND	include/GL/glcorearb.h	/^#define GL_NAND /;"	d
GL_NEAREST	include/GL/glcorearb.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	include/GL/glcorearb.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	include/GL/glcorearb.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEGATIVE_ONE_TO_ONE	include/GL/glcorearb.h	/^#define GL_NEGATIVE_ONE_TO_ONE /;"	d
GL_NEVER	include/GL/glcorearb.h	/^#define GL_NEVER /;"	d
GL_NICEST	include/GL/glcorearb.h	/^#define GL_NICEST /;"	d
GL_NONE	include/GL/glcorearb.h	/^#define GL_NONE /;"	d
GL_NOOP	include/GL/glcorearb.h	/^#define GL_NOOP /;"	d
GL_NOR	include/GL/glcorearb.h	/^#define GL_NOR /;"	d
GL_NOTEQUAL	include/GL/glcorearb.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	include/GL/glcorearb.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION	include/GL/glcorearb.h	/^#define GL_NO_RESET_NOTIFICATION /;"	d
GL_NO_RESET_NOTIFICATION_ARB	include/GL/glcorearb.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	include/GL/glcorearb.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	include/GL/glcorearb.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	include/GL/glcorearb.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_EXTENSIONS	include/GL/glcorearb.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	include/GL/glcorearb.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	include/GL/glcorearb.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	include/GL/glcorearb.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	include/GL/glcorearb.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_SPARSE_LEVELS_ARB	include/GL/glcorearb.h	/^#define GL_NUM_SPARSE_LEVELS_ARB /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	include/GL/glcorearb.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_OBJECT_TYPE	include/GL/glcorearb.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OFFSET	include/GL/glcorearb.h	/^#define GL_OFFSET /;"	d
GL_ONE	include/GL/glcorearb.h	/^#define GL_ONE /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_DST_ALPHA	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	include/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OR	include/GL/glcorearb.h	/^#define GL_OR /;"	d
GL_OR_INVERTED	include/GL/glcorearb.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	include/GL/glcorearb.h	/^#define GL_OR_REVERSE /;"	d
GL_OUT_OF_MEMORY	include/GL/glcorearb.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_PACK_ALIGNMENT	include/GL/glcorearb.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	include/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	include/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	include/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	include/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_HEIGHT	include/GL/glcorearb.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_LSB_FIRST	include/GL/glcorearb.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_ROW_LENGTH	include/GL/glcorearb.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_SKIP_IMAGES	include/GL/glcorearb.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_PIXELS	include/GL/glcorearb.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_ROWS	include/GL/glcorearb.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SWAP_BYTES	include/GL/glcorearb.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PARAMETER_BUFFER_ARB	include/GL/glcorearb.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	include/GL/glcorearb.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PATCHES	include/GL/glcorearb.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	include/GL/glcorearb.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	include/GL/glcorearb.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	include/GL/glcorearb.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_PACK_BUFFER	include/GL/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER	include/GL/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_POINT	include/GL/glcorearb.h	/^#define GL_POINT /;"	d
GL_POINTS	include/GL/glcorearb.h	/^#define GL_POINTS /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	include/GL/glcorearb.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_SIZE	include/GL/glcorearb.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_GRANULARITY	include/GL/glcorearb.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_RANGE	include/GL/glcorearb.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	include/GL/glcorearb.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POLYGON_MODE	include/GL/glcorearb.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_OFFSET_FACTOR	include/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FILL	include/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	include/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_POINT	include/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_UNITS	include/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	include/GL/glcorearb.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	include/GL/glcorearb.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_PRIMITIVES_GENERATED	include/GL/glcorearb.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_SUBMITTED_ARB	include/GL/glcorearb.h	/^#define GL_PRIMITIVES_SUBMITTED_ARB /;"	d
GL_PRIMITIVE_RESTART	include/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	include/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	include/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	include/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PROGRAM	include/GL/glcorearb.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_BINARY_FORMATS	include/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_LENGTH	include/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	include/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_INPUT	include/GL/glcorearb.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_OUTPUT	include/GL/glcorearb.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PIPELINE	include/GL/glcorearb.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	include/GL/glcorearb.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_POINT_SIZE	include/GL/glcorearb.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_SEPARABLE	include/GL/glcorearb.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROVOKING_VERTEX	include/GL/glcorearb.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROXY_TEXTURE_1D	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_3D	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE	include/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_QUADS	include/GL/glcorearb.h	/^#define GL_QUADS /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	include/GL/glcorearb.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUERY	include/GL/glcorearb.h	/^#define GL_QUERY /;"	d
GL_QUERY_BUFFER	include/GL/glcorearb.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BY_REGION_NO_WAIT	include/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	include/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_WAIT	include/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	include/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT_INVERTED /;"	d
GL_QUERY_COUNTER_BITS	include/GL/glcorearb.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_NO_WAIT	include/GL/glcorearb.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_INVERTED	include/GL/glcorearb.h	/^#define GL_QUERY_NO_WAIT_INVERTED /;"	d
GL_QUERY_RESULT	include/GL/glcorearb.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_AVAILABLE	include/GL/glcorearb.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_NO_WAIT	include/GL/glcorearb.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_TARGET	include/GL/glcorearb.h	/^#define GL_QUERY_TARGET /;"	d
GL_QUERY_WAIT	include/GL/glcorearb.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_INVERTED	include/GL/glcorearb.h	/^#define GL_QUERY_WAIT_INVERTED /;"	d
GL_R11F_G11F_B10F	include/GL/glcorearb.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R16	include/GL/glcorearb.h	/^#define GL_R16 /;"	d
GL_R16F	include/GL/glcorearb.h	/^#define GL_R16F /;"	d
GL_R16I	include/GL/glcorearb.h	/^#define GL_R16I /;"	d
GL_R16UI	include/GL/glcorearb.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	include/GL/glcorearb.h	/^#define GL_R16_SNORM /;"	d
GL_R32F	include/GL/glcorearb.h	/^#define GL_R32F /;"	d
GL_R32I	include/GL/glcorearb.h	/^#define GL_R32I /;"	d
GL_R32UI	include/GL/glcorearb.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	include/GL/glcorearb.h	/^#define GL_R3_G3_B2 /;"	d
GL_R8	include/GL/glcorearb.h	/^#define GL_R8 /;"	d
GL_R8I	include/GL/glcorearb.h	/^#define GL_R8I /;"	d
GL_R8UI	include/GL/glcorearb.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	include/GL/glcorearb.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	include/GL/glcorearb.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_READ_BUFFER	include/GL/glcorearb.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_FRAMEBUFFER	include/GL/glcorearb.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_ONLY	include/GL/glcorearb.h	/^#define GL_READ_ONLY /;"	d
GL_READ_PIXELS	include/GL/glcorearb.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	include/GL/glcorearb.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	include/GL/glcorearb.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_WRITE	include/GL/glcorearb.h	/^#define GL_READ_WRITE /;"	d
GL_RED	include/GL/glcorearb.h	/^#define GL_RED /;"	d
GL_RED_INTEGER	include/GL/glcorearb.h	/^#define GL_RED_INTEGER /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	include/GL/glcorearb.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	include/GL/glcorearb.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	include/GL/glcorearb.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	include/GL/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	include/GL/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	include/GL/glcorearb.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_RENDERBUFFER	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BLUE_SIZE	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_HEIGHT	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_RED_SIZE	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_SAMPLES	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_WIDTH	include/GL/glcorearb.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERER	include/GL/glcorearb.h	/^#define GL_RENDERER /;"	d
GL_REPEAT	include/GL/glcorearb.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	include/GL/glcorearb.h	/^#define GL_REPLACE /;"	d
GL_RESET_NOTIFICATION_STRATEGY	include/GL/glcorearb.h	/^#define GL_RESET_NOTIFICATION_STRATEGY /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	include/GL/glcorearb.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RG	include/GL/glcorearb.h	/^#define GL_RG /;"	d
GL_RG16	include/GL/glcorearb.h	/^#define GL_RG16 /;"	d
GL_RG16F	include/GL/glcorearb.h	/^#define GL_RG16F /;"	d
GL_RG16I	include/GL/glcorearb.h	/^#define GL_RG16I /;"	d
GL_RG16UI	include/GL/glcorearb.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	include/GL/glcorearb.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	include/GL/glcorearb.h	/^#define GL_RG32F /;"	d
GL_RG32I	include/GL/glcorearb.h	/^#define GL_RG32I /;"	d
GL_RG32UI	include/GL/glcorearb.h	/^#define GL_RG32UI /;"	d
GL_RG8	include/GL/glcorearb.h	/^#define GL_RG8 /;"	d
GL_RG8I	include/GL/glcorearb.h	/^#define GL_RG8I /;"	d
GL_RG8UI	include/GL/glcorearb.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	include/GL/glcorearb.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	include/GL/glcorearb.h	/^#define GL_RGB /;"	d
GL_RGB10	include/GL/glcorearb.h	/^#define GL_RGB10 /;"	d
GL_RGB10_A2	include/GL/glcorearb.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	include/GL/glcorearb.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB12	include/GL/glcorearb.h	/^#define GL_RGB12 /;"	d
GL_RGB16	include/GL/glcorearb.h	/^#define GL_RGB16 /;"	d
GL_RGB16F	include/GL/glcorearb.h	/^#define GL_RGB16F /;"	d
GL_RGB16I	include/GL/glcorearb.h	/^#define GL_RGB16I /;"	d
GL_RGB16UI	include/GL/glcorearb.h	/^#define GL_RGB16UI /;"	d
GL_RGB16_SNORM	include/GL/glcorearb.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB32F	include/GL/glcorearb.h	/^#define GL_RGB32F /;"	d
GL_RGB32I	include/GL/glcorearb.h	/^#define GL_RGB32I /;"	d
GL_RGB32UI	include/GL/glcorearb.h	/^#define GL_RGB32UI /;"	d
GL_RGB4	include/GL/glcorearb.h	/^#define GL_RGB4 /;"	d
GL_RGB5	include/GL/glcorearb.h	/^#define GL_RGB5 /;"	d
GL_RGB565	include/GL/glcorearb.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1	include/GL/glcorearb.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB8	include/GL/glcorearb.h	/^#define GL_RGB8 /;"	d
GL_RGB8I	include/GL/glcorearb.h	/^#define GL_RGB8I /;"	d
GL_RGB8UI	include/GL/glcorearb.h	/^#define GL_RGB8UI /;"	d
GL_RGB8_SNORM	include/GL/glcorearb.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	include/GL/glcorearb.h	/^#define GL_RGB9_E5 /;"	d
GL_RGBA	include/GL/glcorearb.h	/^#define GL_RGBA /;"	d
GL_RGBA12	include/GL/glcorearb.h	/^#define GL_RGBA12 /;"	d
GL_RGBA16	include/GL/glcorearb.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16F	include/GL/glcorearb.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16I	include/GL/glcorearb.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16UI	include/GL/glcorearb.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16_SNORM	include/GL/glcorearb.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	include/GL/glcorearb.h	/^#define GL_RGBA2 /;"	d
GL_RGBA32F	include/GL/glcorearb.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32I	include/GL/glcorearb.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32UI	include/GL/glcorearb.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA4	include/GL/glcorearb.h	/^#define GL_RGBA4 /;"	d
GL_RGBA8	include/GL/glcorearb.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8I	include/GL/glcorearb.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8UI	include/GL/glcorearb.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8_SNORM	include/GL/glcorearb.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_INTEGER	include/GL/glcorearb.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGB_INTEGER	include/GL/glcorearb.h	/^#define GL_RGB_INTEGER /;"	d
GL_RG_INTEGER	include/GL/glcorearb.h	/^#define GL_RG_INTEGER /;"	d
GL_RIGHT	include/GL/glcorearb.h	/^#define GL_RIGHT /;"	d
GL_SAMPLER	include/GL/glcorearb.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	include/GL/glcorearb.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_2D	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_3D	include/GL/glcorearb.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_BINDING	include/GL/glcorearb.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	include/GL/glcorearb.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_CUBE	include/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	include/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	include/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	include/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLES	include/GL/glcorearb.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_PASSED	include/GL/glcorearb.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	include/GL/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_ONE	include/GL/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_BUFFERS	include/GL/glcorearb.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_COVERAGE	include/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_INVERT	include/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_VALUE	include/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_MASK	include/GL/glcorearb.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_VALUE	include/GL/glcorearb.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_POSITION	include/GL/glcorearb.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_SHADING	include/GL/glcorearb.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	include/GL/glcorearb.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SCISSOR_BOX	include/GL/glcorearb.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_TEST	include/GL/glcorearb.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SEPARATE_ATTRIBS	include/GL/glcorearb.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SET	include/GL/glcorearb.h	/^#define GL_SET /;"	d
GL_SHADER	include/GL/glcorearb.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	include/GL/glcorearb.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_COMPILER	include/GL/glcorearb.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ATOMIC	include/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	include/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	include/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	include/GL/glcorearb.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_SOURCE_LENGTH	include/GL/glcorearb.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	include/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	include/GL/glcorearb.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	include/GL/glcorearb.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHORT	include/GL/glcorearb.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	include/GL/glcorearb.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_NORMALIZED	include/GL/glcorearb.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	include/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	include/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	include/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	include/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	include/GL/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	include/GL/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	include/GL/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	include/GL/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	include/GL/glcorearb.h	/^#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB /;"	d
GL_SPARSE_STORAGE_BIT_ARB	include/GL/glcorearb.h	/^#define GL_SPARSE_STORAGE_BIT_ARB /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	include/GL/glcorearb.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SRC1_ALPHA	include/GL/glcorearb.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	include/GL/glcorearb.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC_ALPHA	include/GL/glcorearb.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	include/GL/glcorearb.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_COLOR	include/GL/glcorearb.h	/^#define GL_SRC_COLOR /;"	d
GL_SRGB	include/GL/glcorearb.h	/^#define GL_SRGB /;"	d
GL_SRGB8	include/GL/glcorearb.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	include/GL/glcorearb.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB_ALPHA	include/GL/glcorearb.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_DECODE_ARB	include/GL/glcorearb.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_READ	include/GL/glcorearb.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	include/GL/glcorearb.h	/^#define GL_SRGB_WRITE /;"	d
GL_STACK_OVERFLOW	include/GL/glcorearb.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_UNDERFLOW	include/GL/glcorearb.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STATIC_COPY	include/GL/glcorearb.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_DRAW	include/GL/glcorearb.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_READ	include/GL/glcorearb.h	/^#define GL_STATIC_READ /;"	d
GL_STENCIL	include/GL/glcorearb.h	/^#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	include/GL/glcorearb.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_BACK_FAIL	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FUNC	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_REF	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	include/GL/glcorearb.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BUFFER_BIT	include/GL/glcorearb.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_CLEAR_VALUE	include/GL/glcorearb.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_COMPONENTS	include/GL/glcorearb.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_FAIL	include/GL/glcorearb.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	include/GL/glcorearb.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	include/GL/glcorearb.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	include/GL/glcorearb.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	include/GL/glcorearb.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX4	include/GL/glcorearb.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX8	include/GL/glcorearb.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	include/GL/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	include/GL/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	include/GL/glcorearb.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_RENDERABLE	include/GL/glcorearb.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_TEST	include/GL/glcorearb.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_VALUE_MASK	include/GL/glcorearb.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	include/GL/glcorearb.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	include/GL/glcorearb.h	/^#define GL_STEREO /;"	d
GL_STREAM_COPY	include/GL/glcorearb.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_DRAW	include/GL/glcorearb.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_READ	include/GL/glcorearb.h	/^#define GL_STREAM_READ /;"	d
GL_SUBPIXEL_BITS	include/GL/glcorearb.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SYNC_CL_EVENT_ARB	include/GL/glcorearb.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	include/GL/glcorearb.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	include/GL/glcorearb.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	include/GL/glcorearb.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	include/GL/glcorearb.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	include/GL/glcorearb.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	include/GL/glcorearb.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	include/GL/glcorearb.h	/^#define GL_SYNC_STATUS /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_SHADER	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES_ARB /;"	d
GL_TESS_CONTROL_SUBROUTINE	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	include/GL/glcorearb.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_SHADER	include/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	include/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	include/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB /;"	d
GL_TESS_EVALUATION_SUBROUTINE	include/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	include/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	include/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	include/GL/glcorearb.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	include/GL/glcorearb.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	include/GL/glcorearb.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	include/GL/glcorearb.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXTURE	include/GL/glcorearb.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	include/GL/glcorearb.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE1	include/GL/glcorearb.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	include/GL/glcorearb.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE11	include/GL/glcorearb.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE12	include/GL/glcorearb.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE13	include/GL/glcorearb.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE14	include/GL/glcorearb.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE15	include/GL/glcorearb.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE16	include/GL/glcorearb.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE17	include/GL/glcorearb.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE18	include/GL/glcorearb.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE19	include/GL/glcorearb.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE2	include/GL/glcorearb.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	include/GL/glcorearb.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE21	include/GL/glcorearb.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE22	include/GL/glcorearb.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE23	include/GL/glcorearb.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE24	include/GL/glcorearb.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE25	include/GL/glcorearb.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE26	include/GL/glcorearb.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE27	include/GL/glcorearb.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE28	include/GL/glcorearb.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE29	include/GL/glcorearb.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE3	include/GL/glcorearb.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	include/GL/glcorearb.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE31	include/GL/glcorearb.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE4	include/GL/glcorearb.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE5	include/GL/glcorearb.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE6	include/GL/glcorearb.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE7	include/GL/glcorearb.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE8	include/GL/glcorearb.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE9	include/GL/glcorearb.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE_1D	include/GL/glcorearb.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_2D	include/GL/glcorearb.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_3D	include/GL/glcorearb.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_ALPHA_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_TYPE	include/GL/glcorearb.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_BASE_LEVEL	include/GL/glcorearb.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BINDING_1D	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE	include/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BLUE_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_TYPE	include/GL/glcorearb.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BORDER_COLOR	include/GL/glcorearb.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BUFFER	include/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	include/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_OFFSET	include/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	include/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_COMPARE_FUNC	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_MODE	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPRESSED	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSION_HINT	include/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_CUBE_MAP	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	include/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEPTH	include/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_TYPE	include/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	include/GL/glcorearb.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_GATHER	include/GL/glcorearb.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	include/GL/glcorearb.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GREEN_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_TYPE	include/GL/glcorearb.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_HEIGHT	include/GL/glcorearb.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_IMAGE_FORMAT	include/GL/glcorearb.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	include/GL/glcorearb.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	include/GL/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	include/GL/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INTERNAL_FORMAT	include/GL/glcorearb.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_LOD_BIAS	include/GL/glcorearb.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_MAG_FILTER	include/GL/glcorearb.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAX_LEVEL	include/GL/glcorearb.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LOD	include/GL/glcorearb.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MIN_FILTER	include/GL/glcorearb.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	include/GL/glcorearb.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_RECTANGLE	include/GL/glcorearb.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RED_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_TYPE	include/GL/glcorearb.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_SAMPLES	include/GL/glcorearb.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADOW	include/GL/glcorearb.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SPARSE_ARB	include/GL/glcorearb.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_STENCIL_SIZE	include/GL/glcorearb.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_SWIZZLE_A	include/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_B	include/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_G	include/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_R	include/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	include/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_TARGET	include/GL/glcorearb.h	/^#define GL_TEXTURE_TARGET /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_VIEW	include/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	include/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	include/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	include/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	include/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WIDTH	include/GL/glcorearb.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WRAP_R	include/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_S	include/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	include/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TIMEOUT_EXPIRED	include/GL/glcorearb.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	include/GL/glcorearb.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	include/GL/glcorearb.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	include/GL/glcorearb.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	include/GL/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	include/GL/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	include/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRIANGLES	include/GL/glcorearb.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	include/GL/glcorearb.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLE_FAN	include/GL/glcorearb.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_STRIP	include/GL/glcorearb.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	include/GL/glcorearb.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRUE	include/GL/glcorearb.h	/^#define GL_TRUE /;"	d
GL_TYPE	include/GL/glcorearb.h	/^#define GL_TYPE /;"	d
GL_UNDEFINED_VERTEX	include/GL/glcorearb.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	include/GL/glcorearb.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ARRAY_STRIDE	include/GL/glcorearb.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	include/GL/glcorearb.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BLOCK	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	include/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	include/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	include/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	include/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	include/GL/glcorearb.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	include/GL/glcorearb.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	include/GL/glcorearb.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	include/GL/glcorearb.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	include/GL/glcorearb.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	include/GL/glcorearb.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET	include/GL/glcorearb.h	/^#define GL_UNKNOWN_CONTEXT_RESET /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	include/GL/glcorearb.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_ALIGNMENT	include/GL/glcorearb.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	include/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	include/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	include/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	include/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_IMAGE_HEIGHT	include/GL/glcorearb.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_LSB_FIRST	include/GL/glcorearb.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_ROW_LENGTH	include/GL/glcorearb.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_SKIP_IMAGES	include/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_PIXELS	include/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_ROWS	include/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SWAP_BYTES	include/GL/glcorearb.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	include/GL/glcorearb.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE	include/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	include/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_INT	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT64_ARB	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10_10_10_2	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_24_8	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_VEC2	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC3	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC4	include/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_NORMALIZED	include/GL/glcorearb.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_SHORT	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_6_5	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	include/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UPPER_LEFT	include/GL/glcorearb.h	/^#define GL_UPPER_LEFT /;"	d
GL_VALIDATE_STATUS	include/GL/glcorearb.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VENDOR	include/GL/glcorearb.h	/^#define GL_VENDOR /;"	d
GL_VERSION	include/GL/glcorearb.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_0	include/GL/glcorearb.h	/^#define GL_VERSION_1_0 /;"	d
GL_VERSION_1_1	include/GL/glcorearb.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	include/GL/glcorearb.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	include/GL/glcorearb.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	include/GL/glcorearb.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	include/GL/glcorearb.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	include/GL/glcorearb.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	include/GL/glcorearb.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	include/GL/glcorearb.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	include/GL/glcorearb.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	include/GL/glcorearb.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	include/GL/glcorearb.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	include/GL/glcorearb.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	include/GL/glcorearb.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	include/GL/glcorearb.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	include/GL/glcorearb.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	include/GL/glcorearb.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERSION_4_5	include/GL/glcorearb.h	/^#define GL_VERSION_4_5 /;"	d
GL_VERTEX_ARRAY	include/GL/glcorearb.h	/^#define GL_VERTEX_ARRAY /;"	d
GL_VERTEX_ARRAY_BINDING	include/GL/glcorearb.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_BINDING	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	include/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_BUFFER	include/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	d
GL_VERTEX_BINDING_DIVISOR	include/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	include/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	include/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	include/GL/glcorearb.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_SHADER	include/GL/glcorearb.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_BIT	include/GL/glcorearb.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	include/GL/glcorearb.h	/^#define GL_VERTEX_SHADER_INVOCATIONS_ARB /;"	d
GL_VERTEX_SUBROUTINE	include/GL/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	include/GL/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	include/GL/glcorearb.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTICES_SUBMITTED_ARB	include/GL/glcorearb.h	/^#define GL_VERTICES_SUBMITTED_ARB /;"	d
GL_VIEWPORT	include/GL/glcorearb.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BOUNDS_RANGE	include/GL/glcorearb.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	include/GL/glcorearb.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	include/GL/glcorearb.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEW_CLASS_128_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	include/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	include/GL/glcorearb.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	include/GL/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	include/GL/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	include/GL/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	include/GL/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_WAIT_FAILED	include/GL/glcorearb.h	/^#define GL_WAIT_FAILED /;"	d
GL_WRITE_ONLY	include/GL/glcorearb.h	/^#define GL_WRITE_ONLY /;"	d
GL_XOR	include/GL/glcorearb.h	/^#define GL_XOR /;"	d
GL_ZERO	include/GL/glcorearb.h	/^#define GL_ZERO /;"	d
GL_ZERO_TO_ONE	include/GL/glcorearb.h	/^#define GL_ZERO_TO_ONE /;"	d
GLbitfield	include/GL/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	include/GL/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	include/GL/glcorearb.h	/^typedef signed char GLbyte;$/;"	t	typeref:typename:signed char
GLchar	include/GL/glcorearb.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLclampd	include/GL/glcorearb.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	include/GL/glcorearb.h	/^typedef float GLclampf;$/;"	t	typeref:typename:float
GLdouble	include/GL/glcorearb.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLenum	include/GL/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfloat	include/GL/glcorearb.h	/^typedef float GLfloat;$/;"	t	typeref:typename:float
GLhalf	include/GL/glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLint	include/GL/glcorearb.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint64	include/GL/glcorearb.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLintptr	include/GL/glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLshort	include/GL/glcorearb.h	/^typedef short GLshort;$/;"	t	typeref:typename:short
GLsizei	include/GL/glcorearb.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	include/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsync	include/GL/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	include/GL/glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	include/GL/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint	include/glm/detail/dummy.cpp	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int	file:
GLuint64	include/GL/glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	include/GL/glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLushort	include/GL/glcorearb.h	/^typedef unsigned short GLushort;$/;"	t	typeref:typename:unsigned short
GLvoid	include/GL/glcorearb.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
HASH_BIT_MASK	src/lodepng.cpp	/^static const unsigned HASH_BIT_MASK = 65535; \/*HASH_NUM_VALUES - 1, but C90 does not like that /;"	v	typeref:typename:const unsigned	file:
HASH_NUM_VALUES	src/lodepng.cpp	/^static const unsigned HASH_NUM_VALUES = 65536;$/;"	v	typeref:typename:const unsigned	file:
HEX	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
Hash	src/lodepng.cpp	/^typedef struct Hash$/;"	s	file:
Hash	src/lodepng.cpp	/^} Hash;$/;"	t	typeref:struct:Hash	file:
HuffmanTree	src/lodepng.cpp	/^typedef struct HuffmanTree$/;"	s	file:
HuffmanTree	src/lodepng.cpp	/^} HuffmanTree;$/;"	t	typeref:struct:HuffmanTree	file:
HuffmanTree_cleanup	src/lodepng.cpp	/^static void HuffmanTree_cleanup(HuffmanTree* tree)$/;"	f	typeref:typename:void	file:
HuffmanTree_getCode	src/lodepng.cpp	/^static unsigned HuffmanTree_getCode(const HuffmanTree* tree, unsigned index)$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_getLength	src/lodepng.cpp	/^static unsigned HuffmanTree_getLength(const HuffmanTree* tree, unsigned index)$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_init	src/lodepng.cpp	/^static void HuffmanTree_init(HuffmanTree* tree)$/;"	f	typeref:typename:void	file:
HuffmanTree_make2DTree	src/lodepng.cpp	/^static unsigned HuffmanTree_make2DTree(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_makeFromFrequencies	src/lodepng.cpp	/^static unsigned HuffmanTree_makeFromFrequencies(HuffmanTree* tree, const unsigned* frequencies,$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_makeFromLengths	src/lodepng.cpp	/^static unsigned HuffmanTree_makeFromLengths(HuffmanTree* tree, const unsigned* bitlen,$/;"	f	typeref:typename:unsigned	file:
HuffmanTree_makeFromLengths2	src/lodepng.cpp	/^static unsigned HuffmanTree_makeFromLengths2(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
ID_VOID_MAIN	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
LAST_LENGTH_CODE_INDEX	src/lodepng.cpp	/^#define LAST_LENGTH_CODE_INDEX /;"	d	file:
LCT_GREY	include/lodepng.h	/^  LCT_GREY = 0, \/*greyscale: 1,2,4,8,16 bit*\/$/;"	e	enum:LodePNGColorType
LCT_GREY_ALPHA	include/lodepng.h	/^  LCT_GREY_ALPHA = 4, \/*greyscale with alpha: 8,16 bit*\/$/;"	e	enum:LodePNGColorType
LCT_PALETTE	include/lodepng.h	/^  LCT_PALETTE = 3, \/*palette: 1,2,4,8 bit*\/$/;"	e	enum:LodePNGColorType
LCT_RGB	include/lodepng.h	/^  LCT_RGB = 2, \/*RGB: 8,16 bit*\/$/;"	e	enum:LodePNGColorType
LCT_RGBA	include/lodepng.h	/^  LCT_RGBA = 6 \/*RGB with alpha: 8,16 bit*\/$/;"	e	enum:LodePNGColorType
LENGTHBASE	src/lodepng.cpp	/^static const unsigned LENGTHBASE[29]$/;"	v	typeref:typename:const unsigned[29]	file:
LENGTHEXTRA	src/lodepng.cpp	/^static const unsigned LENGTHEXTRA[29]$/;"	v	typeref:typename:const unsigned[29]	file:
LFS_BRUTE_FORCE	include/lodepng.h	/^  LFS_BRUTE_FORCE,$/;"	e	enum:LodePNGFilterStrategy
LFS_ENTROPY	include/lodepng.h	/^  LFS_ENTROPY,$/;"	e	enum:LodePNGFilterStrategy
LFS_MINSUM	include/lodepng.h	/^  LFS_MINSUM,$/;"	e	enum:LodePNGFilterStrategy
LFS_PREDEFINED	include/lodepng.h	/^  LFS_PREDEFINED$/;"	e	enum:LodePNGFilterStrategy
LFS_ZERO	include/lodepng.h	/^  LFS_ZERO,$/;"	e	enum:LodePNGFilterStrategy
LODEPNG_COMPILE_ALLOCATORS	include/lodepng.h	/^#define LODEPNG_COMPILE_ALLOCATORS$/;"	d
LODEPNG_COMPILE_ANCILLARY_CHUNKS	include/lodepng.h	/^#define LODEPNG_COMPILE_ANCILLARY_CHUNKS$/;"	d
LODEPNG_COMPILE_CPP	include/lodepng.h	/^#define LODEPNG_COMPILE_CPP$/;"	d
LODEPNG_COMPILE_DECODER	include/lodepng.h	/^#define LODEPNG_COMPILE_DECODER$/;"	d
LODEPNG_COMPILE_DISK	include/lodepng.h	/^#define LODEPNG_COMPILE_DISK$/;"	d
LODEPNG_COMPILE_ENCODER	include/lodepng.h	/^#define LODEPNG_COMPILE_ENCODER$/;"	d
LODEPNG_COMPILE_ERROR_TEXT	include/lodepng.h	/^#define LODEPNG_COMPILE_ERROR_TEXT$/;"	d
LODEPNG_COMPILE_PNG	include/lodepng.h	/^#define LODEPNG_COMPILE_PNG$/;"	d
LODEPNG_COMPILE_ZLIB	include/lodepng.h	/^#define LODEPNG_COMPILE_ZLIB$/;"	d
LODEPNG_H	include/lodepng.h	/^#define LODEPNG_H$/;"	d
LODEPNG_VERSION_STRING	src/lodepng.cpp	/^const char* LODEPNG_VERSION_STRING = "20160501";$/;"	v	typeref:typename:const char *
LabelFalse	include/glm/gtx/string_cast.inl	/^	static const char* LabelFalse = "false";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
LabelTrue	include/glm/gtx/string_cast.inl	/^	static const char* LabelTrue = "true";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
Left	include/controls.h	/^    Left,$/;"	e	enum:ControlKeys
LodePNGColorMode	include/lodepng.h	/^typedef struct LodePNGColorMode$/;"	s
LodePNGColorMode	include/lodepng.h	/^} LodePNGColorMode;$/;"	t	typeref:struct:LodePNGColorMode
LodePNGColorProfile	include/lodepng.h	/^typedef struct LodePNGColorProfile$/;"	s
LodePNGColorProfile	include/lodepng.h	/^} LodePNGColorProfile;$/;"	t	typeref:struct:LodePNGColorProfile
LodePNGColorType	include/lodepng.h	/^typedef enum LodePNGColorType$/;"	g
LodePNGColorType	include/lodepng.h	/^} LodePNGColorType;$/;"	t	typeref:enum:LodePNGColorType
LodePNGCompressSettings	include/lodepng.h	/^struct LodePNGCompressSettings \/*deflate = compress*\/$/;"	s
LodePNGCompressSettings	include/lodepng.h	/^typedef struct LodePNGCompressSettings LodePNGCompressSettings;$/;"	t	typeref:struct:LodePNGCompressSettings
LodePNGDecoderSettings	include/lodepng.h	/^typedef struct LodePNGDecoderSettings$/;"	s
LodePNGDecoderSettings	include/lodepng.h	/^} LodePNGDecoderSettings;$/;"	t	typeref:struct:LodePNGDecoderSettings
LodePNGDecompressSettings	include/lodepng.h	/^struct LodePNGDecompressSettings$/;"	s
LodePNGDecompressSettings	include/lodepng.h	/^typedef struct LodePNGDecompressSettings LodePNGDecompressSettings;$/;"	t	typeref:struct:LodePNGDecompressSettings
LodePNGEncoderSettings	include/lodepng.h	/^typedef struct LodePNGEncoderSettings$/;"	s
LodePNGEncoderSettings	include/lodepng.h	/^} LodePNGEncoderSettings;$/;"	t	typeref:struct:LodePNGEncoderSettings
LodePNGFilterStrategy	include/lodepng.h	/^typedef enum LodePNGFilterStrategy$/;"	g
LodePNGFilterStrategy	include/lodepng.h	/^} LodePNGFilterStrategy;$/;"	t	typeref:enum:LodePNGFilterStrategy
LodePNGIText_cleanup	src/lodepng.cpp	/^static void LodePNGIText_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGIText_copy	src/lodepng.cpp	/^static unsigned LodePNGIText_copy(LodePNGInfo* dest, const LodePNGInfo* source)$/;"	f	typeref:typename:unsigned	file:
LodePNGIText_init	src/lodepng.cpp	/^static void LodePNGIText_init(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGInfo	include/lodepng.h	/^typedef struct LodePNGInfo$/;"	s
LodePNGInfo	include/lodepng.h	/^} LodePNGInfo;$/;"	t	typeref:struct:LodePNGInfo
LodePNGState	include/lodepng.h	/^typedef struct LodePNGState$/;"	s
LodePNGState	include/lodepng.h	/^} LodePNGState;$/;"	t	typeref:struct:LodePNGState
LodePNGText_cleanup	src/lodepng.cpp	/^static void LodePNGText_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGText_copy	src/lodepng.cpp	/^static unsigned LodePNGText_copy(LodePNGInfo* dest, const LodePNGInfo* source)$/;"	f	typeref:typename:unsigned	file:
LodePNGText_init	src/lodepng.cpp	/^static void LodePNGText_init(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGTime	include/lodepng.h	/^typedef struct LodePNGTime$/;"	s
LodePNGTime	include/lodepng.h	/^} LodePNGTime;$/;"	t	typeref:struct:LodePNGTime
LodePNGUnknownChunks_cleanup	src/lodepng.cpp	/^static void LodePNGUnknownChunks_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
LodePNGUnknownChunks_copy	src/lodepng.cpp	/^static unsigned LodePNGUnknownChunks_copy(LodePNGInfo* dest, const LodePNGInfo* src)$/;"	f	typeref:typename:unsigned	file:
LodePNGUnknownChunks_init	src/lodepng.cpp	/^static void LodePNGUnknownChunks_init(LodePNGInfo* info)$/;"	f	typeref:typename:void	file:
MATERIAL_H	include/materials/material.h	/^#define MATERIAL_H$/;"	d
MAX_SUPPORTED_DEFLATE_LENGTH	src/lodepng.cpp	/^static const size_t MAX_SUPPORTED_DEFLATE_LENGTH = 258;$/;"	v	typeref:typename:const size_t	file:
Material	include/materials/material.h	/^class Material$/;"	c
Material	src/materials/material.cpp	/^Material::Material($/;"	f	class:Material
Math	include/utilities.h	/^    namespace Math$/;"	n	namespace:Utilities
Math	src/utilities.cpp	/^    namespace Math$/;"	n	namespace:Utilities	file:
NUM_CODE_LENGTH_CODES	src/lodepng.cpp	/^#define NUM_CODE_LENGTH_CODES /;"	d	file:
NUM_DEFLATE_CODE_SYMBOLS	src/lodepng.cpp	/^#define NUM_DEFLATE_CODE_SYMBOLS /;"	d	file:
NUM_DISTANCE_SYMBOLS	src/lodepng.cpp	/^#define NUM_DISTANCE_SYMBOLS /;"	d	file:
P	include/glm/gtx/simd_vec4.hpp	/^		P = 2,$/;"	e	enum:glm::comp
PHONGMATERIAL_H	include/materials/phongmaterial.h	/^#define PHONGMATERIAL_H$/;"	d
PI	include/utilities.h	/^        const double PI = 3.1415926535897;$/;"	v	namespace:Utilities::Math	typeref:typename:const double
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PNG	include/texture.h	/^    PNG$/;"	e	enum:TextureFormat
PhongLightAttributes	include/materials/phongmaterial.h	/^struct PhongLightAttributes$/;"	s
PhongMaterial	include/materials/phongmaterial.h	/^class PhongMaterial : public Material$/;"	c
PhongMaterial	src/materials/phongmaterial.cpp	/^PhongMaterial::PhongMaterial($/;"	f	class:PhongMaterial
PositionDataF16	include/glm/detail/dummy.cpp	/^glm::uint const PositionDataF16[VertexCount] =$/;"	v	typeref:typename:glm::uint const[]
PositionDataF32	include/glm/detail/dummy.cpp	/^glm::vec2 const PositionDataF32[VertexCount] =$/;"	v	typeref:typename:glm::vec2 const[]
PositionDataI32	include/glm/detail/dummy.cpp	/^glm::i32vec2 const PositionDataI32[VertexCount] =$/;"	v	typeref:typename:glm::i32vec2 const[]
PositionDataI8	include/glm/detail/dummy.cpp	/^glm::i8vec2 const PositionDataI8[VertexCount] =$/;"	v	typeref:typename:glm::i8vec2 const[]
PositionSizeF16	include/glm/detail/dummy.cpp	/^std::size_t const PositionSizeF16 = VertexCount * sizeof(glm::uint);$/;"	v	typeref:typename:std::size_t const
PositionSizeF32	include/glm/detail/dummy.cpp	/^std::size_t const PositionSizeF32 = VertexCount * sizeof(glm::vec2);$/;"	v	typeref:typename:std::size_t const
PositionSizeI32	include/glm/detail/dummy.cpp	/^std::size_t const PositionSizeI32 = VertexCount * sizeof(glm::i32vec2);$/;"	v	typeref:typename:std::size_t const
PositionSizeI8	include/glm/detail/dummy.cpp	/^std::size_t const PositionSizeI8 = VertexCount * sizeof(glm::i8vec2);$/;"	v	typeref:typename:std::size_t const
Q	include/glm/gtx/simd_vec4.hpp	/^		Q = 3$/;"	e	enum:glm::comp
R	include/glm/gtx/simd_vec4.hpp	/^		R = 0,$/;"	e	enum:glm::comp
READBIT	src/lodepng.cpp	/^#define READBIT(/;"	d	file:
RENDERWINDOW_H	include/renderwindow.h	/^#define RENDERWINDOW_H$/;"	d
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RenderWindow	include/renderwindow.h	/^class RenderWindow$/;"	c
RenderWindow	src/renderwindow.cpp	/^RenderWindow::RenderWindow(const std::string &windowTitle, unsigned int screenWidth, unsigned in/;"	f	class:RenderWindow
Right	include/controls.h	/^    Right,$/;"	e	enum:ControlKeys
S	include/glm/gtx/simd_vec4.hpp	/^		S = 0,$/;"	e	enum:glm::comp
SDLKeyStates	include/controls.h	/^        const uint8_t *SDLKeyStates;$/;"	m	class:Controls	typeref:typename:const uint8_t *
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
STRINGIFY	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
ShaderProgramStages	include/materials/material.h	/^struct ShaderProgramStages$/;"	s
State	include/lodepng.h	/^class State : public LodePNGState$/;"	c	namespace:lodepng
State	src/lodepng.cpp	/^State::State()$/;"	f	class:lodepng::State
State	src/lodepng.cpp	/^State::State(const State& other)$/;"	f	class:lodepng::State
Stub	include/glm/detail/_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
T	include/glm/gtx/simd_vec4.hpp	/^		T = 1,$/;"	e	enum:glm::comp
TEXTURE_H	include/texture.h	/^#define TEXTURE_H$/;"	d
Texture	include/texture.h	/^class Texture$/;"	c
TextureFormat	include/texture.h	/^enum class TextureFormat$/;"	g
Tutorial18	build/Makefile	/^Tutorial18: cmake_check_build_system$/;"	t
Tutorial18/fast	build/Makefile	/^Tutorial18\/fast:$/;"	t
UTILITIES_H	include/utilities.h	/^#define UTILITIES_H$/;"	d
Up	include/controls.h	/^    Up,$/;"	e	enum:ControlKeys
Utilities	include/utilities.h	/^namespace Utilities$/;"	n
Utilities	src/utilities.cpp	/^namespace Utilities$/;"	n	file:
VAO	include/materials/material.h	/^        GLuint VAO = 0;$/;"	m	class:Material	typeref:typename:GLuint
Vertex	src/tutorial18.cpp	/^struct Vertex$/;"	s	file:
VertexCount	include/glm/detail/dummy.cpp	/^std::size_t const VertexCount = 4;$/;"	v	typeref:typename:std::size_t const
W	include/glm/gtx/simd_vec4.hpp	/^		W = 3,$/;"	e	enum:glm::comp
WIN32_LEAN_AND_MEAN	include/GL/glcorearb.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	src/gl3w.c	/^#define WIN32_LEAN_AND_MEAN /;"	d	file:
X	include/glm/gtx/simd_vec4.hpp	/^		X = 0,$/;"	e	enum:glm::comp
Y	include/glm/gtx/simd_vec4.hpp	/^		Y = 1,$/;"	e	enum:glm::comp
YCoCg2rgb	include/glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> YCoCg2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
YCoCgR2rgb	include/glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> YCoCgR2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
Z	include/glm/gtx/simd_vec4.hpp	/^		Z = 2,$/;"	e	enum:glm::comp
_GLM_SWIZZLE2_2_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE2_2_MEMBERS(/;"	d
_GLM_SWIZZLE2_3_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE2_3_MEMBERS(/;"	d
_GLM_SWIZZLE2_4_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE2_4_MEMBERS(/;"	d
_GLM_SWIZZLE3_2_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE3_2_MEMBERS(/;"	d
_GLM_SWIZZLE3_3_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE3_3_MEMBERS(/;"	d
_GLM_SWIZZLE3_4_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE3_4_MEMBERS(/;"	d
_GLM_SWIZZLE4_2_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE4_2_MEMBERS(/;"	d
_GLM_SWIZZLE4_3_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE4_3_MEMBERS(/;"	d
_GLM_SWIZZLE4_4_MEMBERS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE4_4_MEMBERS(/;"	d
_GLM_SWIZZLE_FUNCTION_1_ARGS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_FUNCTION_1_ARGS(/;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_FUNCTION_2_ARGS(/;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR(/;"	d
_GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
_GLM_SWIZZLE_TEMPLATE1	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TEMPLATE1 /;"	d
_GLM_SWIZZLE_TEMPLATE2	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TEMPLATE2 /;"	d
_GLM_SWIZZLE_TYPE1	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TYPE1 /;"	d
_GLM_SWIZZLE_TYPE2	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TYPE2 /;"	d
_GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	include/glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
__anon0d6bcc420108	include/glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u10u10u10u2	file:
__anon0d6bcc420208	include/glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::i10i10i10i2	file:
__anon5d41850a0108	src/gl3w.c	/^static struct {$/;"	s	file:
__anon6218a5cf010a	include/glm/detail/type_vec1.hpp	/^			{$/;"	u	struct:glm::tvec1
__anon6218a5cf020a	include/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::tvec1
__anon622abe50010a	include/glm/detail/type_vec2.hpp	/^			{$/;"	u	struct:glm::tvec2
__anon622abe500208	include/glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	s	union:glm::tvec2::__anon622abe50010a
__anon622abe500308	include/glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	s	union:glm::tvec2::__anon622abe50010a
__anon622abe500408	include/glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	s	union:glm::tvec2::__anon622abe50010a
__anon622abe50050a	include/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::tvec2
__anon622abe50060a	include/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	u	struct:glm::tvec2
__anon623cd6d1010a	include/glm/detail/type_vec3.hpp	/^			{$/;"	u	struct:glm::tvec3
__anon623cd6d10208	include/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	s	union:glm::tvec3::__anon623cd6d1010a
__anon623cd6d10308	include/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	s	union:glm::tvec3::__anon623cd6d1010a
__anon623cd6d10408	include/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	s	union:glm::tvec3::__anon623cd6d1010a
__anon623cd6d1050a	include/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	u	struct:glm::tvec3
__anon623cd6d1060a	include/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	u	struct:glm::tvec3
__anon623cd6d1070a	include/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	u	struct:glm::tvec3
__anon624eef52010a	include/glm/detail/type_vec4.hpp	/^			{$/;"	u	struct:glm::tvec4
__anon624eef520208	include/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	s	union:glm::tvec4::__anon624eef52010a
__anon624eef520308	include/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	s	union:glm::tvec4::__anon624eef52010a
__anon624eef520408	include/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	s	union:glm::tvec4::__anon624eef52010a
__anon624eef52050a	include/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	u	struct:glm::tvec4
__anon624eef52060a	include/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	u	struct:glm::tvec4
__anon624eef52070a	include/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	u	struct:glm::tvec4
__anon624eef52080a	include/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	u	struct:glm::tvec4
__anona4a85f36010a	include/glm/gtc/ulp.inl	/^{$/;"	u	file:
__anona4a85f36020a	include/glm/gtc/ulp.inl	/^{$/;"	u	file:
__anona4a85f360308	include/glm/gtc/ulp.inl	/^	{$/;"	s	union:__anona4a85f36020a	file:
__anonbe76097d010a	include/glm/gtx/simd_vec4.hpp	/^		{$/;"	u	namespace:glm::detail
__anonbe76097d0208	include/glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	s	union:glm::detail::__anonbe76097d010a
__anonbe760d780103	include/glm/gtx/simd_vec4.inl	/^	enum{value = Value};$/;"	g	struct:glm::detail::shuffle_mask	file:
__anoned049d10010a	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	u	function:_mm_castpd_ps
__anoned049d10020a	include/glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	u	function:_mm_castps_pd
__anoned049d10030a	include/glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	u	function:_mm_castps_si128
__anoned049d10040a	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	u	function:_mm_castsi128_ps
__anonf0ac7c26010a	include/glm/gtx/simd_quat.hpp	/^		{$/;"	u	namespace:glm::detail
__anonf0ac7c260208	include/glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	s	union:glm::detail::__anonf0ac7c26010a
__gl3w_h_	include/GL/gl3w.h	/^#define __gl3w_h_$/;"	d
__gl_h_	include/GL/gl3w.h	/^#define __gl_h_$/;"	d
__glcorearb_h_	include/GL/glcorearb.h	/^#define __glcorearb_h_ /;"	d
__has_feature	include/glm/detail/setup.hpp	/^#	define __has_feature(/;"	d
_apply_op	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(const VecType& that, T op)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
_buffer	include/glm/detail/_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0	typeref:typename:char[1]
_epi32_0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_0 = _mm_set_ps1(0);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_1 = _mm_set_ps1(1);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_127	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_127 = _mm_set_ps1(127);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_2 = _mm_set_ps1(2);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_3 = _mm_set_ps1(3);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_4	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_4 = _mm_set_ps1(4);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_5	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_5 = _mm_set_ps1(5);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_6	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_6 = _mm_set_ps1(6);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_7	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_7 = _mm_set_ps1(7);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_8	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_8 = _mm_set_ps1(8);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_9	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_9 = _mm_set_ps1(9);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_sign_mask	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_sign_mask = _mm_castsi128_ps(_mm_set1_epi32(static_cast/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_m128_deg_ps	include/glm/detail/intrinsic_matrix.inl	/^static const __m128 GLM_VAR_USED _m128_deg_ps = _mm_set_ps1(180.f \/ 3.1415926535897932384626433/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_m128_rad_ps	include/glm/detail/intrinsic_matrix.inl	/^static const __m128 GLM_VAR_USED _m128_rad_ps = _mm_set_ps1(3.141592653589793238462643383279f \//;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_mm_bit_interleave_si128	include/glm/detail/intrinsic_integer.inl	/^	inline __m128i _mm_bit_interleave_si128(__m128i x)$/;"	f	namespace:glm::detail	typeref:typename:__m128i
_mm_bit_interleave_si128	include/glm/detail/intrinsic_integer.inl	/^	inline __m128i _mm_bit_interleave_si128(__m128i x, __m128i y)$/;"	f	namespace:glm::detail	typeref:typename:__m128i
_mm_castpd_ps	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	f	typeref:typename:__m128
_mm_castps_pd	include/glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	f	typeref:typename:__m128d
_mm_castps_si128	include/glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	f	typeref:typename:__m128i
_mm_castsi128_ps	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	f	typeref:typename:__m128
_mm_cvtss_f32	include/glm/detail/setup.hpp	/^		inline float _mm_cvtss_f32(__m128 A) { return A.m128_f32[0]; }$/;"	f	typeref:typename:float
_ps_0_0_0_1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0_0_0_1 = _mm_set_ps(0.0f, 0.0f, 0.0f, 1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_0_0_1_0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0_0_1_0 = _mm_set_ps(0.0f, 0.0f, 1.0f, 0.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_0_1_0_0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0_1_0_0 = _mm_set_ps(0.0f, 1.0f, 0.0f, 0.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_0p5	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0p5 = _mm_set_ps1(0.5f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_1 = _mm_set_ps1(1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_127	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_127 = _mm_set_ps1(127.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_1_0_0_0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_1_0_0_0 = _mm_set_ps(1.0f, 0.0f, 0.0f, 0.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_1_3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_1_3 = _mm_set_ps1(0.33333333333333333333333333333333f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_2 = _mm_set_ps1(2.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_255	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_255 = _mm_set_ps1(255.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_2_pi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_2_pi = _mm_set_ps1(0.63661977236758134307553505349006f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_2pow23	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_2pow23 = _mm_set_ps1(8388608.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_3 = _mm_set_ps1(3.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_4_pi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_4_pi = _mm_set_ps1(1.2732395447351626861510701069801f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s0 = _mm_set_ps1(0.12797564625607904396e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s1 = _mm_set_ps1(0.21972168858277355914e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s2 = _mm_set_ps1(0.68193064729268275701e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s3 = _mm_set_ps1(0.28205206687035841409e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t0 = _mm_set_ps1(-0.91646118527267623468e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t1 = _mm_set_ps1(-0.13956945682312098640e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t2 = _mm_set_ps1(-0.94393926122725531747e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t3 = _mm_set_ps1(0.12888383034157279340e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_hi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_hi = _mm_set_ps1(127.4999961853f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_lo	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_lo = _mm_set_ps1(-127.4999961853f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_p0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_p0 = _mm_set_ps1(2.30933477057345225087e-2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_p1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_p1 = _mm_set_ps1(2.02020656693165307700e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_p2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_p2 = _mm_set_ps1(1.51390680115615096133e3f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_q0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_q0 = _mm_set_ps1(2.33184211722314911771e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_q1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_q1 = _mm_set_ps1(4.36821166879210612817e3f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_c1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_c1 = _mm_set_ps1(6.93145751953125e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_c2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_c2 = _mm_set_ps1(1.42860682030941723212e-6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_hi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_hi = _mm_set_ps1(88.3762626647949f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_lo	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_lo = _mm_set_ps1(-88.3762626647949f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_p0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_p0 = _mm_set_ps1(1.26177193074810590878e-4f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_p1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_p1 = _mm_set_ps1(3.02994407707441961300e-2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q0 = _mm_set_ps1(3.00198505138664455042e-6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q1 = _mm_set_ps1(2.52448340349684104192e-3f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q2 = _mm_set_ps1(2.27265548208155028766e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q3 = _mm_set_ps1(2.00000000000000000009e0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_rln2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_rln2 = _mm_set_ps1(1.4426950408889634073599f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log2_c0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log2_c0 = _mm_set_ps1(1.44269504088896340735992f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_c0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_c0 = _mm_set_ps1(0.693147180559945f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_p0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_p0 = _mm_set_ps1(-7.89580278884799154124e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_p1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_p1 = _mm_set_ps1(1.63866645699558079767e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_p2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_p2 = _mm_set_ps1(-6.41409952958715622951e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_q0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_q0 = _mm_set_ps1(-3.56722798256324312549e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_q1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_q1 = _mm_set_ps1(3.12093766372244180303e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_q2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_q2 = _mm_set_ps1(-7.69691943550460008604e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_m1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_m1 = _mm_set_ps1(-1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi = _mm_set_ps1(3.1415926535897932384626433832795f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi2 = _mm_set_ps1(6.283185307179586476925286766560f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi_2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi_2 = _mm_set_ps1(1.5707963267948966192313216916398f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi_4	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi_4 = _mm_set_ps1(0.78539816339744830961566084581988f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p0 = _mm_set_ps1(0.15707963267948963959e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p1 = _mm_set_ps1(-0.64596409750621907082e0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p2 = _mm_set_ps1(0.7969262624561800806e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p3 = _mm_set_ps1(-0.468175413106023168e-2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_p0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_p0 = _mm_set_ps1(-1.79565251976484877988e7f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_p1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_p1 = _mm_set_ps1(1.15351664838587416140e6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_p2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_p2 = _mm_set_ps1(-1.30936939181383777646e4f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_poleval	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_poleval = _mm_set_ps1(3.68935e19f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q0	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q0 = _mm_set_ps1(-5.38695755929454629881e7f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q1	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q1 = _mm_set_ps1(2.50083801823357915839e7f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q2	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q2 = _mm_set_ps1(-1.32089234440210967447e6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q3	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q3 = _mm_set_ps1(1.36812963470692954678e4f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_swizzle	include/glm/detail/_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<ValueType, P, VecType, N, E0, E1, E2, E3, (E0==E1||E0==/;"	s	namespace:glm::detail
_swizzle_base0	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<T, P, V,E0,E1,-1,-2,2> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<T, P, V,E0,E1,E2,-1,3> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<T, P, V,E0,E1,E2,E3,4> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base2	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<ValueType, P, VecType,E0,E1,E2,E3,N>$/;"	s	namespace:glm::detail
_swizzle_base2	include/glm/detail/_swizzle.hpp	/^	struct _swizzle_base2<ValueType, P, VecType,N,E0,E1,E2,E3,1> : public _swizzle_base1<ValueType,/;"	s	namespace:glm::detail
a	include/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520308	typeref:typename:T
a	include/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon624eef52080a	typeref:typename:T
abs	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genFIType abs(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genFIType
abs	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER int32 abs(int32 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
abs	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> abs(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
abs	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD abs$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
abs4Mask	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED abs4Mask = _mm_set_ps1(absMask.f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
absMask	include/glm/detail/intrinsic_common.inl	/^	static const ieee754_QNAN absMask;$/;"	v	namespace:glm::detail	typeref:typename:const ieee754_QNAN	file:
acos	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acos(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acosh	include/glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType acosh(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acosh	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acosh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acot	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acot(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acot	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acot(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acoth	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acoth(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acoth	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acoth(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acsc	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsc	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acsc(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acsch	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsch(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsch	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acsch(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
addAttribute	src/materials/material.cpp	/^bool Material::addAttribute(std::string attributeName)$/;"	f	class:Material	typeref:typename:bool
addBitToStream	src/lodepng.cpp	/^#define addBitToStream(/;"	d	file:
addBitsToStream	src/lodepng.cpp	/^static void addBitsToStream(size_t* bitpointer, ucvector* bitstream, unsigned value, size_t nbit/;"	f	typeref:typename:void	file:
addBitsToStreamReversed	src/lodepng.cpp	/^static void addBitsToStreamReversed(size_t* bitpointer, ucvector* bitstream, unsigned value, siz/;"	f	typeref:typename:void	file:
addChunk	src/lodepng.cpp	/^static unsigned addChunk(ucvector* out, const char* chunkName, const unsigned char* data, size_t/;"	f	typeref:typename:unsigned	file:
addChunk_IDAT	src/lodepng.cpp	/^static unsigned addChunk_IDAT(ucvector* out, const unsigned char* data, size_t datasize,$/;"	f	typeref:typename:unsigned	file:
addChunk_IEND	src/lodepng.cpp	/^static unsigned addChunk_IEND(ucvector* out)$/;"	f	typeref:typename:unsigned	file:
addChunk_IHDR	src/lodepng.cpp	/^static unsigned addChunk_IHDR(ucvector* out, unsigned w, unsigned h,$/;"	f	typeref:typename:unsigned	file:
addChunk_PLTE	src/lodepng.cpp	/^static unsigned addChunk_PLTE(ucvector* out, const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_bKGD	src/lodepng.cpp	/^static unsigned addChunk_bKGD(ucvector* out, const LodePNGInfo* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_iTXt	src/lodepng.cpp	/^static unsigned addChunk_iTXt(ucvector* out, unsigned compressed, const char* keyword, const cha/;"	f	typeref:typename:unsigned	file:
addChunk_pHYs	src/lodepng.cpp	/^static unsigned addChunk_pHYs(ucvector* out, const LodePNGInfo* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_tEXt	src/lodepng.cpp	/^static unsigned addChunk_tEXt(ucvector* out, const char* keyword, const char* textstring)$/;"	f	typeref:typename:unsigned	file:
addChunk_tIME	src/lodepng.cpp	/^static unsigned addChunk_tIME(ucvector* out, const LodePNGTime* time)$/;"	f	typeref:typename:unsigned	file:
addChunk_tRNS	src/lodepng.cpp	/^static unsigned addChunk_tRNS(ucvector* out, const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned	file:
addChunk_zTXt	src/lodepng.cpp	/^static unsigned addChunk_zTXt(ucvector* out, const char* keyword, const char* textstring,$/;"	f	typeref:typename:unsigned	file:
addColorBits	src/lodepng.cpp	/^static void addColorBits(unsigned char* out, size_t index, unsigned bits, unsigned in)$/;"	f	typeref:typename:void	file:
addDirectionalLight	src/lights/directional.cpp	/^size_t DirectionalLightList::addDirectionalLight(glm::vec3 color, glm::vec3 direction, float amb/;"	f	class:DirectionalLightList	typeref:typename:size_t
addHuffmanSymbol	src/lodepng.cpp	/^static void addHuffmanSymbol(size_t* bp, ucvector* compressed, unsigned code, unsigned bitlen)$/;"	f	typeref:typename:void	file:
addLengthDistance	src/lodepng.cpp	/^static void addLengthDistance(uivector* values, size_t length, size_t distance)$/;"	f	typeref:typename:void	file:
addLightUniformAttribute	src/materials/phongmaterial.cpp	/^bool PhongMaterial::addLightUniformAttribute(std::string uniformName)$/;"	f	class:PhongMaterial	typeref:typename:bool
addPaddingBits	src/lodepng.cpp	/^static void addPaddingBits(unsigned char* out, const unsigned char* in,$/;"	f	typeref:typename:void	file:
addUniformAttribute	src/materials/material.cpp	/^bool Material::addUniformAttribute(std::string uniformName)$/;"	f	class:Material	typeref:typename:bool
addUnknownChunks	src/lodepng.cpp	/^static unsigned addUnknownChunks(ucvector* out, unsigned char* data, size_t datasize)$/;"	f	typeref:typename:unsigned	file:
add_id	include/lodepng.h	/^  unsigned add_id;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
adler32	src/lodepng.cpp	/^static unsigned adler32(const unsigned char* data, unsigned len)$/;"	f	typeref:typename:unsigned	file:
affineInverse	include/glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> affineInverse(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
affineInverse	include/glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> affineInverse(tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
all	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER bool all(vecType<bool, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
all	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool all$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
allocsize	src/lodepng.cpp	/^  size_t allocsize; \/*allocated size in bytes*\/$/;"	m	struct:uivector	typeref:typename:size_t	file:
allocsize	src/lodepng.cpp	/^  size_t allocsize; \/*allocated size*\/$/;"	m	struct:ucvector	typeref:typename:size_t	file:
alpha	include/lodepng.h	/^  unsigned alpha; \/*alpha channel or alpha palette required*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
ambient	include/glm/detail/dummy.cpp	/^	glm::vec4 ambient; \/\/ Acli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
ambient	include/glm/detail/dummy.cpp	/^	glm::vec4 ambient; \/\/ Acm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
ambientIntensity	include/lights/directional.h	/^    float ambientIntensity;$/;"	m	struct:DirectionalLight	typeref:typename:float
ambientIntensityUniformLocation	include/materials/phongmaterial.h	/^    GLint ambientIntensityUniformLocation;$/;"	m	struct:PhongLightAttributes	typeref:typename:GLint
angle	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T angle(tquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	include/glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T angle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	include/glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER genType angle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
angleAxis	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> angleAxis(T const & angle, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
angleAxisSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD angleAxisSIMD$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
any	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER bool any(vecType<bool, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
any	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool any$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areCollinear	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areCollinear$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthogonal	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthogonal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthonormal	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthonormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
asec	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asec(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asec	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asec(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
asech	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asech(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asech	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asech(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
asin	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asin(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
asinh	include/glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType asinh(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asinh	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asinh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
assignedIDCount	include/lights/directional.h	/^        size_t assignedIDCount = 0;$/;"	m	class:DirectionalLightList	typeref:typename:size_t
associatedMax	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER tvec2<U, P> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<U,P>
associatedMax	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vecType<T, P> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
associatedMax	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vecType<U, P> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<U,P>
associatedMin	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER tvec2<U, P> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<U,P>
associatedMin	include/glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vecType<U, P> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<U,P>
atan	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType atan(genType const & y, genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atan	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> atan(vecType<T, P> const & a, vecType<T, P> const & b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
atan	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> atan(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
atan2	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T atan2(T x, T y){return atan(x, y);}				/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
atan2	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> atan2(const tvec2<T, P>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
atan2	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> atan2(const tvec3<T, P>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
atan2	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> atan2(const tvec4<T, P>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
atanh	include/glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType atanh(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atanh	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> atanh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
auto_convert	include/lodepng.h	/^  unsigned auto_convert; \/*automatically choose output PNG color type. Default: true*\/$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
axis	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> axis(tquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
axisAngle	include/glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER void axisAngle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
axisAngleMatrix	include/glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> axisAngleMatrix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
b	include/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10308	typeref:typename:T
b	include/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon623cd6d1070a	typeref:typename:T
b	include/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520308	typeref:typename:T
b	include/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon624eef52070a	typeref:typename:T
background_b	include/lodepng.h	/^  unsigned background_b;       \/*blue component of suggested background color*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
background_defined	include/lodepng.h	/^  unsigned background_defined; \/*is a suggested background color given?*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
background_g	include/lodepng.h	/^  unsigned background_g;       \/*green component of suggested background color*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
background_r	include/lodepng.h	/^  unsigned background_r;       \/*red component of suggested background color*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
ballRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> ballRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
base	include/glm/detail/type_gentype.inl	/^base<vT, cT, rT, pT>::base$/;"	f	class:glm::detail::base
base	include/glm/detail/type_gentype.inl	/^base<vT, cT, rT, pT>::base()$/;"	f	class:glm::detail::base
base_type	include/glm/detail/_swizzle.hpp	/^		typedef _swizzle_base2<ValueType, P, VecType,N,E0,E1,E2,E3,(E0==E1||E0==E2||E0==E3||E1==E2||E1/;"	t	struct:glm::detail::_swizzle
basic_format_saver	include/glm/gtx/io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_format_saver	include/glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER basic_format_saver<CTy,CTr>::basic_format_saver(std::basic_/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
basic_state_saver	include/glm/gtx/io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
basic_state_saver	include/glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER basic_state_saver<CTy,CTr>::basic_state_saver(std::basic_io/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
begin	include/glm/gtx/range.hpp	/^	const typename genType::value_type * begin(genType const & v){$/;"	f	namespace:glm	typeref:typename:const typename genType::value_type *
begin	include/glm/gtx/range.hpp	/^	typename genType::value_type * begin(genType& v){$/;"	f	namespace:glm	typeref:typename:genType::value_type *
bind	src/materials/material.cpp	/^void Material::bind()$/;"	f	class:Material	typeref:typename:void
bind	src/texture.cpp	/^void Texture::bind(GLenum textureUnit)$/;"	f	class:Texture	typeref:typename:void
bitCount	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int bitCount(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitCount	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> bitCount(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
bitdepth	include/lodepng.h	/^  unsigned bitdepth;  \/*bits per sample, see PNG standard or documentation further in this head/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
bitfieldExtract	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldExtract(genIUType Value, int Offset, int Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldExtract	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldExtract(vecType<T, P> const & Value, int Offset, int B/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldFillOne	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillOne(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillOne	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldFillOne(vecType<T, P> const & Value, int FirstBit, int/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldFillZero	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillZero(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillZero	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldFillZero(vecType<T, P> const & Value, int FirstBit, in/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldInsert	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldInsert(genIUType const & Base, genIUType const & Insert, i/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldInsert	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldInsert(vecType<T, P> const & Base, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 bitfieldInterleave(glm::uint8 x, glm::uint8 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint16 x, glm::uint16 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z, glm/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z, /;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y, glm::uint32 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int16 bitfieldInterleave(int8 x, int8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int16
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int16 x, int16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z, int8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z, int16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y, int32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint16 bitfieldInterleave(uint8 x, uint8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint16 x, uint16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z, uint8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z, uint16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y, uint32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldReverse	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genType bitfieldReverse(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bitfieldReverse	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldReverse(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldRotateLeft	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateLeft(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateLeft	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldRotateLeft(vecType<T, P> const & In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldRotateRight	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateRight(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateRight	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldRotateRight(vecType<T, P> const & In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bits	include/lodepng.h	/^  unsigned bits; \/*bits per channel (not for palette). 1,2 or 4 for greyscale only. 16 if 16-bi/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
bool1	include/glm/gtx/compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatib/;"	t	namespace:glm	typeref:typename:bool
bool1x1	include/glm/gtx/compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_c/;"	t	namespace:glm	typeref:typename:bool
bool2	include/glm/gtx/compatibility.hpp	/^	typedef tvec2<bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec2<bool,highp>
bool2x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. (F/;"	t	namespace:glm	typeref:typename:tmat2x2<bool,highp>
bool2x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. (F/;"	t	namespace:glm	typeref:typename:tmat2x3<bool,highp>
bool2x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. (F/;"	t	namespace:glm	typeref:typename:tmat2x4<bool,highp>
bool3	include/glm/gtx/compatibility.hpp	/^	typedef tvec3<bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec3<bool,highp>
bool3x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. (F/;"	t	namespace:glm	typeref:typename:tmat3x2<bool,highp>
bool3x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. (F/;"	t	namespace:glm	typeref:typename:tmat3x3<bool,highp>
bool3x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. (F/;"	t	namespace:glm	typeref:typename:tmat3x4<bool,highp>
bool4	include/glm/gtx/compatibility.hpp	/^	typedef tvec4<bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec4<bool,highp>
bool4x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. (F/;"	t	namespace:glm	typeref:typename:tmat4x2<bool,highp>
bool4x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. (F/;"	t	namespace:glm	typeref:typename:tmat4x3<bool,highp>
bool4x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. (F/;"	t	namespace:glm	typeref:typename:tmat4x4<bool,highp>
bool_type	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<bool> bool_type;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<bool>
bool_type	include/glm/detail/type_vec1.hpp	/^		typedef tvec1<bool, P> bool_type;$/;"	t	struct:glm::tvec1	typeref:typename:tvec1<bool,P>
bool_type	include/glm/detail/type_vec2.hpp	/^		typedef tvec2<bool, P> bool_type;$/;"	t	struct:glm::tvec2	typeref:typename:tvec2<bool,P>
bool_type	include/glm/detail/type_vec3.hpp	/^		typedef tvec3<bool, P> bool_type;$/;"	t	struct:glm::tvec3	typeref:typename:tvec3<bool,P>
bool_type	include/glm/detail/type_vec4.hpp	/^		typedef tvec4<bool, P> bool_type;$/;"	t	struct:glm::tvec4	typeref:typename:tvec4<bool,P>
bool_type	include/glm/gtx/simd_quat.hpp	/^		typedef tquat<bool, defaultp> bool_type;$/;"	t	namespace:glm::detail	typeref:typename:tquat<bool,defaultp>
bool_type	include/glm/gtx/simd_vec4.hpp	/^		typedef tvec4<bool, highp> bool_type;$/;"	t	namespace:glm::detail	typeref:typename:tvec4<bool,highp>
boundaryPM	src/lodepng.cpp	/^static void boundaryPM(BPMLists* lists, BPMNode* leaves, size_t numpresent, int c, int num)$/;"	f	typeref:typename:void	file:
bpmnode_create	src/lodepng.cpp	/^static BPMNode* bpmnode_create(BPMLists* lists, int weight, unsigned index, BPMNode* tail)$/;"	f	typeref:typename:BPMNode *	file:
bpmnode_sort	src/lodepng.cpp	/^static void bpmnode_sort(BPMNode* leaves, size_t num)$/;"	f	typeref:typename:void	file:
bss_	include/glm/gtx/io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver	typeref:typename:basic_state_saver<CTy> const
btype	include/lodepng.h	/^  unsigned btype; \/*the block type for LZ (0, 1, 2 or 3, see zlib standard). Should be 2 for pr/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
bundle	src/gl3w.c	/^CFBundleRef bundle;$/;"	v	typeref:typename:CFBundleRef
bundleURL	src/gl3w.c	/^CFURLRef bundleURL;$/;"	v	typeref:typename:CFURLRef
bvec1	include/glm/gtc/vec1.hpp	/^	typedef highp_bvec1				bvec1;$/;"	t	namespace:glm	typeref:typename:highp_bvec1
bvec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_bvec1				bvec1;$/;"	t	namespace:glm	typeref:typename:lowp_bvec1
bvec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_bvec1			bvec1;$/;"	t	namespace:glm	typeref:typename:mediump_bvec1
bvec2	include/glm/detail/type_vec.hpp	/^	typedef highp_bvec2			bvec2;$/;"	t	namespace:glm	typeref:typename:highp_bvec2
bvec2	include/glm/detail/type_vec.hpp	/^	typedef lowp_bvec2			bvec2;$/;"	t	namespace:glm	typeref:typename:lowp_bvec2
bvec2	include/glm/detail/type_vec.hpp	/^	typedef mediump_bvec2		bvec2;$/;"	t	namespace:glm	typeref:typename:mediump_bvec2
bvec3	include/glm/detail/type_vec.hpp	/^	typedef highp_bvec3			bvec3;$/;"	t	namespace:glm	typeref:typename:highp_bvec3
bvec3	include/glm/detail/type_vec.hpp	/^	typedef lowp_bvec3			bvec3;$/;"	t	namespace:glm	typeref:typename:lowp_bvec3
bvec3	include/glm/detail/type_vec.hpp	/^	typedef mediump_bvec3		bvec3;$/;"	t	namespace:glm	typeref:typename:mediump_bvec3
bvec4	include/glm/detail/type_vec.hpp	/^	typedef highp_bvec4			bvec4;$/;"	t	namespace:glm	typeref:typename:highp_bvec4
bvec4	include/glm/detail/type_vec.hpp	/^	typedef lowp_bvec4			bvec4;$/;"	t	namespace:glm	typeref:typename:lowp_bvec4
bvec4	include/glm/detail/type_vec.hpp	/^	typedef mediump_bvec4		bvec4;$/;"	t	namespace:glm	typeref:typename:mediump_bvec4
byte	include/glm/gtx/raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm	typeref:typename:detail::uint8
calculateNormals	src/tutorial18.cpp	/^void calculateNormals($/;"	f	typeref:typename:void
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<R, P> call(R (*Func) (T x), tvec1<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<R,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, tvec1</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<R, P> call(R (*Func) (T x), tvec2<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec2<R,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, tvec2</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<R, P> call(R (*Func) (T x), tvec3<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec3<R,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, tvec3</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<R, P> call(R (*Func) (T x), tvec4<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec4<R,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
call	include/glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, tvec4</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static T call(T const & x, T const & y, U const & a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static T call(T const & x, T const & y, bool const & a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static genFIType call(genFIType x)$/;"	f	struct:glm::detail::compute_abs	typeref:typename:GLM_FUNC_QUALIFIER genFIType	file:
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & a, genType const & b)$/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_sign	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, vecType<T, P> const & y,/;"	f	struct:glm::detail::compute_mix_scalar	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, vecType<T, P> const & y,/;"	f	struct:glm::detail::compute_mix_vector	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & vec)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, lowp> call(vecType<float, lowp> const & x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,lowp>	file:
call	include/glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec1<T, P> const & a, tvec1<T, P> const & b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec2<T, P> const & x, tvec2<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec3<T, P> const & x, tvec3<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec4<T, P> const & x, tvec4<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	include/glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static vecType<int, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, T Shift)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, T)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<int, P> call(vecType<T, P> const & vec)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(tmat2x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(tmat3x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(tmat4x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat2x2<T, P> call(tmat2x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat2x3<T, P> call(tmat3x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat2x4<T, P> call(tmat4x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat3x2<T, P> call(tmat2x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat3x3<T, P> call(tmat3x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat3x4<T, P> call(tmat4x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat4x2<T, P> call(tmat2x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat4x3<T, P> call(tmat3x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>	file:
call	include/glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat4x4<T, P> call(tmat4x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>	file:
call	include/glm/gtc/integer.inl	/^			GLM_FUNC_QUALIFIER static tvec4<int, P> call(tvec4<int, P> const & vec)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER tvec4<int,P>	file:
call	include/glm/gtc/integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & a, genType const & b)$/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/gtc/integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & vec)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/gtc/quaternion.inl	/^		static GLM_FUNC_QUALIFIER T call(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec1<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec1<uint8,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec2<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec2<uint8,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec3<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec3<uint8,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec4<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec4<uint8,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<double, highp> call(vecType<double, highp> const & Min, vecT/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<double,highp>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<double, lowp> call(vecType<double, lowp> const & Min, vecTyp/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<double,lowp>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<double, mediump> call(vecType<double, mediump> const & Min, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<double,mediump>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, highp> call(vecType<float, highp> const & Min, vecTyp/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,highp>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, lowp> call(vecType<float, lowp> const & Min, vecType</;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,lowp>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, mediump> call(vecType<float, mediump> const & Min, ve/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,mediump>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int16, P> call(vecType<int16, P> const & Min, vecType<int16,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int16,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int32, P> call(vecType<int32, P> const & Min, vecType<int32,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int32,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int64, P> call(vecType<int64, P> const & Min, vecType<int64,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int64,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int8, P> call(vecType<int8, P> const & Min, vecType<int8, P>/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int8,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<long double, highp> call(vecType<long double, highp> const &/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<long double,highp>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<long double, lowp> call(vecType<long double, lowp> const & M/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<long double,lowp>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<long double, mediump> call(vecType<long double, mediump> con/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<long double,mediump>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint16, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint16,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint16, P> call(vecType<uint16, P> const & Min, vecType<uint/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint16,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint32, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint32,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint32, P> call(vecType<uint32, P> const & Min, vecType<uint/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint32,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint64, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint64,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint64, P> call(vecType<uint64, P> const & Min, vecType<uint/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint64,P>	file:
call	include/glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint8, P> call(vecType<uint8, P> const & Min, vecType<uint8,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint8,P>	file:
call	include/glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_ceilMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	include/glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_floorMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	include/glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_roundMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	include/glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T Shift)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_ceilPowerOfTwo	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat2x2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat2x3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat2x4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat3x2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat3x3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat3x4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat4x2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat4x3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat4x4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec1<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec1<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec2<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec3<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec4<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	include/glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(tvec2<T, P> const & v0, tvec2<T, P> const & v1, T const & /;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	include/glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(tvec3<T, P> const & v0, tvec3<T, P> const & v1, T const & /;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	include/glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(tvec4<T, P> const & v0, tvec4<T, P> const & v1, T const & /;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	include/glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static tvec2<bool, P> call(tvec2<T, P> const & v, T const & epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER tvec2<bool,P>	file:
call	include/glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static tvec3<bool, P> call(tvec3<T, P> const & v, T const & epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER tvec3<bool,P>	file:
call	include/glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static tvec4<bool, P> call(tvec4<T, P> const & v, T const & epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>	file:
cameraWorldPosition	include/camera.h	/^        glm::vec3 cameraWorldPosition = glm::vec3(0, 0, 5);$/;"	m	class:Camera	typeref:typename:glm::vec3
catmullRom	include/glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType catmullRom$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceil	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> ceil(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
ceil	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD ceil$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
ceilMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> ceilMultiple(vecType<T, P> const & Source, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
ceilPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> ceilPowerOfTwo(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
chain	src/lodepng.cpp	/^  unsigned short* chain;$/;"	m	struct:Hash	typeref:typename:unsigned short *	file:
chains0	src/lodepng.cpp	/^  BPMNode** chains0;$/;"	m	struct:BPMLists	typeref:typename:BPMNode **	file:
chains1	src/lodepng.cpp	/^  BPMNode** chains1;$/;"	m	struct:BPMLists	typeref:typename:BPMNode **	file:
chainz	src/lodepng.cpp	/^  unsigned short* chainz; \/*those with same amount of zeros*\/$/;"	m	struct:Hash	typeref:typename:unsigned short *	file:
char_type	include/glm/gtx/io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct	typeref:typename:CTy
char_type	include/glm/gtx/io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:state_type::char_type
checkColorValidity	src/lodepng.cpp	/^static unsigned checkColorValidity(LodePNGColorType colortype, unsigned bd) \/*bd = bitdepth*\/$/;"	f	typeref:typename:unsigned	file:
children	src/lodepng.cpp	/^  ColorTree* children[16]; \/*up to 16 pointers to ColorTree of next level*\/$/;"	m	struct:ColorTree	typeref:typename:ColorTree * [16]	file:
circularRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> circularRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
clamp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType clamp(genType x, genType minVal, genType maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
clamp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> clamp(vecType<T, P> const & x, T minVal, T maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
clamp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> clamp(vecType<T, P> const & x, vecType<T, P> const & minVal, v/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
clamp	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
clamp	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
clamp	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
clamp	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
clamp	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
clean	build/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
clear	src/lights/directional.cpp	/^void DirectionalLightList::clear()$/;"	f	class:DirectionalLightList	typeref:typename:void
close_libgl	src/gl3w.c	/^static void close_libgl(void)$/;"	f	typeref:typename:void	file:
closestPointOnLine	include/glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
closestPointOnLine	include/glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
colMajor2	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> colMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
colMajor3	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> colMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
colMajor4	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> colMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
col_size	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::size_type base<vT, cT, rT, pT>::col_size()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::size_type
col_type	include/glm/detail/type_mat2x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tvec2<T,P>
col_type	include/glm/detail/type_mat2x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tvec3<T,P>
col_type	include/glm/detail/type_mat2x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tvec4<T,P>
col_type	include/glm/detail/type_mat3x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tvec2<T,P>
col_type	include/glm/detail/type_mat3x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tvec3<T,P>
col_type	include/glm/detail/type_mat3x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tvec4<T,P>
col_type	include/glm/detail/type_mat4x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tvec2<T,P>
col_type	include/glm/detail/type_mat4x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tvec3<T,P>
col_type	include/glm/detail/type_mat4x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tvec4<T,P>
col_type	include/glm/gtx/simd_mat4.hpp	/^		typedef fvec4SIMD col_type;$/;"	t	namespace:glm::detail	typeref:typename:fvec4SIMD
color	include/lights/directional.h	/^    glm::vec3 color;$/;"	m	struct:DirectionalLight	typeref:typename:glm::vec3
color	include/lodepng.h	/^  LodePNGColorMode color;     \/*color type and bits, palette and transparency of the PNG file*\/$/;"	m	struct:LodePNGInfo	typeref:typename:LodePNGColorMode
colorUniformLocation	include/materials/phongmaterial.h	/^    GLint colorUniformLocation;$/;"	m	struct:PhongLightAttributes	typeref:typename:GLint
color_convert	include/lodepng.h	/^  unsigned color_convert; \/*whether to convert the PNG to the color type you want. Default: yes/;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
color_tree_add	src/lodepng.cpp	/^static void color_tree_add(ColorTree* tree,$/;"	f	typeref:typename:void	file:
color_tree_cleanup	src/lodepng.cpp	/^static void color_tree_cleanup(ColorTree* tree)$/;"	f	typeref:typename:void	file:
color_tree_get	src/lodepng.cpp	/^static int color_tree_get(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, un/;"	f	typeref:typename:int	file:
color_tree_has	src/lodepng.cpp	/^static int color_tree_has(ColorTree* tree, unsigned char r, unsigned char g, unsigned char b, un/;"	f	typeref:typename:int	file:
color_tree_init	src/lodepng.cpp	/^static void color_tree_init(ColorTree* tree)$/;"	f	typeref:typename:void	file:
colored	include/lodepng.h	/^  unsigned colored; \/*not greyscale*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
colortype	include/lodepng.h	/^  LodePNGColorType colortype; \/*color type, see PNG standard or documentation further in this h/;"	m	struct:LodePNGColorMode	typeref:typename:LodePNGColorType
column	include/glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
column	include/glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::col_type column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::col_type
column_major	include/glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
combine	include/glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> combine($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
comp	include/glm/gtx/simd_vec4.hpp	/^	enum comp$/;"	g	namespace:glm
compAdd	include/glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compAdd(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMax	include/glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMax(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMin	include/glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMin(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMul	include/glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMul(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compileShaderProgramFromSource	src/materials/material.cpp	/^GLuint Material::compileShaderProgramFromSource(const std::vector<uint8_t> &shaderSource, GLenum/;"	f	class:Material	typeref:typename:GLuint
component_count	include/glm/detail/setup.hpp	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR component_count_t component_count(genType const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR component_count_t
component_count_t	include/glm/detail/setup.hpp	/^		typedef size_t component_count_t;$/;"	t	namespace:glm::detail	typeref:typename:size_t
compress	src/lodepng.cpp	/^unsigned compress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,$/;"	f	namespace:lodepng	typeref:typename:unsigned
compress	src/lodepng.cpp	/^unsigned compress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,$/;"	f	namespace:lodepng	typeref:typename:unsigned
compression_method	include/lodepng.h	/^  unsigned compression_method;\/*compression method of the original file. Always 0.*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
computeNormal	include/glm/detail/dummy.cpp	/^glm::vec3 computeNormal$/;"	f	typeref:typename:glm::vec3
compute_abs	include/glm/detail/func_common.inl	/^	struct compute_abs$/;"	s	namespace:glm::detail	file:
compute_abs	include/glm/detail/func_common.inl	/^	struct compute_abs<genFIType, false>$/;"	s	namespace:glm::detail	file:
compute_abs	include/glm/detail/func_common.inl	/^	struct compute_abs<genFIType, true>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	include/glm/gtx/vector_query.inl	/^	struct compute_areCollinear<T, P, tvec2>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	include/glm/gtx/vector_query.inl	/^	struct compute_areCollinear<T, P, tvec3>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	include/glm/gtx/vector_query.inl	/^	struct compute_areCollinear<T, P, tvec4>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	include/glm/gtx/vector_query.inl	/^	struct compute_areCollinear{};$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	include/glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	include/glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep<true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	include/glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	include/glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep<true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	include/glm/gtc/round.inl	/^	struct compute_ceilMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	include/glm/gtc/round.inl	/^	struct compute_ceilMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	include/glm/gtc/round.inl	/^	struct compute_ceilMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	include/glm/gtc/round.inl	/^	struct compute_ceilMultiple{};$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	include/glm/gtc/round.inl	/^	struct compute_ceilPowerOfTwo$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	include/glm/gtc/round.inl	/^	struct compute_ceilPowerOfTwo<T, P, vecType, false>$/;"	s	namespace:glm::detail	file:
compute_ceilShift	include/glm/gtc/round.inl	/^	struct compute_ceilShift$/;"	s	namespace:glm::detail	file:
compute_ceilShift	include/glm/gtc/round.inl	/^	struct compute_ceilShift<T, P, vecType, true>$/;"	s	namespace:glm::detail	file:
compute_determinant	include/glm/detail/func_matrix.inl	/^	struct compute_determinant<tmat2x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_determinant	include/glm/detail/func_matrix.inl	/^	struct compute_determinant<tmat3x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_determinant	include/glm/detail/func_matrix.inl	/^	struct compute_determinant<tmat4x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_determinant	include/glm/detail/func_matrix.inl	/^	struct compute_determinant{};$/;"	s	namespace:glm::detail	file:
compute_dot	include/glm/detail/func_geometric.inl	/^	struct compute_dot<tvec1, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	include/glm/detail/func_geometric.inl	/^	struct compute_dot<tvec2, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	include/glm/detail/func_geometric.inl	/^	struct compute_dot<tvec3, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	include/glm/detail/func_geometric.inl	/^	struct compute_dot<tvec4, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	include/glm/detail/func_geometric.inl	/^	struct compute_dot{};$/;"	s	namespace:glm::detail	file:
compute_dot	include/glm/gtc/quaternion.inl	/^	struct compute_dot<tquat, T, P>$/;"	s	namespace:glm::detail	file:
compute_findLSB	include/glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 32>$/;"	s	namespace:glm::detail	file:
compute_findLSB	include/glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 64>$/;"	s	namespace:glm::detail	file:
compute_findLSB	include/glm/detail/func_integer.inl	/^	struct compute_findLSB$/;"	s	namespace:glm::detail	file:
compute_findMSB_32	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_32(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_64	include/glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_64(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_step_vec	include/glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec$/;"	s	namespace:glm::detail	file:
compute_findMSB_step_vec	include/glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec<T, P, vecType, false>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	include/glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<T, P, vecType, 32>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	include/glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<T, P, vecType, 64>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	include/glm/detail/func_integer.inl	/^	struct compute_findMSB_vec$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	include/glm/gtc/round.inl	/^	struct compute_floorMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	include/glm/gtc/round.inl	/^	struct compute_floorMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	include/glm/gtc/round.inl	/^	struct compute_floorMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	include/glm/gtc/round.inl	/^	struct compute_floorMultiple{};$/;"	s	namespace:glm::detail	file:
compute_inverse	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> compute_inverse(tmat2x2<T, P> const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
compute_inverse	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> compute_inverse(tmat3x3<T, P> const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
compute_inverse	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> compute_inverse(tmat4x4<T, P> const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
compute_inversesqrt	include/glm/detail/func_exponential.inl	/^	struct compute_inversesqrt$/;"	s	namespace:glm::detail	file:
compute_inversesqrt	include/glm/detail/func_exponential.inl	/^	struct compute_inversesqrt<vecType, float, lowp>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	include/glm/gtx/vector_query.inl	/^	struct compute_isCompNull<T, P, tvec2>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	include/glm/gtx/vector_query.inl	/^	struct compute_isCompNull<T, P, tvec3>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	include/glm/gtx/vector_query.inl	/^	struct compute_isCompNull<T, P, tvec4>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	include/glm/gtx/vector_query.inl	/^	struct compute_isCompNull{};$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<double, highp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<double, lowp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<double, mediump, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<float, highp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<float, lowp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<float, mediump, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<int16, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<int32, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<int64, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<int8, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<long double, highp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<long double, lowp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<long double, mediump, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<uint16, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<uint32, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<uint64, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	include/glm/gtc/random.inl	/^	struct compute_linearRand<uint8, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_log2	include/glm/detail/func_exponential.inl	/^	struct compute_log2$/;"	s	namespace:glm::detail	file:
compute_log2	include/glm/gtc/integer.inl	/^		struct compute_log2<int, P, tvec4, false>$/;"	s	namespace:glm::detail	file:
compute_log2	include/glm/gtc/integer.inl	/^	struct compute_log2<T, P, vecType, false>$/;"	s	namespace:glm::detail	file:
compute_mix	include/glm/detail/func_common.inl	/^	struct compute_mix$/;"	s	namespace:glm::detail	file:
compute_mix	include/glm/detail/func_common.inl	/^	struct compute_mix<T, bool>$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	include/glm/detail/func_common.inl	/^	struct compute_mix_scalar$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	include/glm/detail/func_common.inl	/^	struct compute_mix_scalar<T, bool, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_mix_vector	include/glm/detail/func_common.inl	/^	struct compute_mix_vector$/;"	s	namespace:glm::detail	file:
compute_mix_vector	include/glm/detail/func_common.inl	/^	struct compute_mix_vector<T, bool, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_mod	include/glm/detail/func_common.inl	/^	struct compute_mod$/;"	s	namespace:glm::detail	file:
compute_mod	include/glm/gtc/integer.inl	/^	struct compute_mod<T, P, vecType, genType, false>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint16, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint32, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint64, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec1>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec2>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec3>$/;"	s	namespace:glm::detail	file:
compute_rand	include/glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec4>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	include/glm/gtc/round.inl	/^	struct compute_roundMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	include/glm/gtc/round.inl	/^	struct compute_roundMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	include/glm/gtc/round.inl	/^	struct compute_roundMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	include/glm/gtc/round.inl	/^	struct compute_roundMultiple{};$/;"	s	namespace:glm::detail	file:
compute_sign	include/glm/detail/func_common.inl	/^	struct compute_sign$/;"	s	namespace:glm::detail	file:
compute_sign	include/glm/detail/func_common.inl	/^	struct compute_sign<T, P, vecType, false, false>$/;"	s	namespace:glm::detail	file:
compute_sign	include/glm/detail/func_common.inl	/^	struct compute_sign<T, P, vecType, false, true>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat2x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat2x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat2x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat3x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat3x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat3x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat4x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat4x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat4x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec1, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec1, bool, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec2, bool, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec3, bool, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	include/glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec4, bool, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat2x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat2x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat2x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat3x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat3x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat3x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat4x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat4x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat4x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	include/glm/detail/func_matrix.inl	/^	struct compute_transpose{};$/;"	s	namespace:glm::detail	file:
conjugate	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> conjugate(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
conjugate	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD conjugate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
const_pointer	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const_pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const *
const_pointer_const	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const const_pointer_const;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const * const
const_reference	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & const_reference;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const &
constantAttenuation	include/glm/detail/dummy.cpp	/^	float constantAttenuation; \/\/ K0$/;"	m	struct:light	typeref:typename:float	file:
controlState	include/controls.h	/^        std::vector<bool> controlState;$/;"	m	class:Controls	typeref:typename:std::vector<bool>
cos	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cos(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
cos_52s	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T cos_52s(T x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
cos_52s	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cos_52s(vecType<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
cosh	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cosh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
cot	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType cot(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cot	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cot(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
coth	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType coth(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
coth	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> coth(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
countZeros	src/lodepng.cpp	/^static unsigned countZeros(const unsigned char* data, size_t size, size_t pos)$/;"	f	typeref:typename:unsigned	file:
countof	include/glm/detail/setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm	typeref:typename:std::size_t
cross	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> cross(tvec3<T, P> const & x, tvec3<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
cross	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> cross(tquat<T, P> const & q1, tquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
cross	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> cross$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
cross	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD cross$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
csc	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csc(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csc	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> csc(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
csch	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csch(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csch	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> csch(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
ctor	include/glm/detail/setup.hpp	/^	enum ctor{uninitialize};$/;"	g	namespace:glm
ctor	include/glm/detail/type_gentype.hpp	/^		enum ctor{null};$/;"	g	struct:glm::detail::genType
cubic	include/glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType cubic$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
custom_context	include/lodepng.h	/^  const void* custom_context; \/*optional custom settings for custom functions*\/$/;"	m	struct:LodePNGCompressSettings	typeref:typename:const void *
custom_context	include/lodepng.h	/^  const void* custom_context; \/*optional custom settings for custom functions*\/$/;"	m	struct:LodePNGDecompressSettings	typeref:typename:const void *
custom_deflate	include/lodepng.h	/^  unsigned (*custom_deflate)(unsigned char**, size_t*,$/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGCompressSettings *)
custom_inflate	include/lodepng.h	/^  unsigned (*custom_inflate)(unsigned char**, size_t*,$/;"	m	struct:LodePNGDecompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGDecompressSettings *)
custom_zlib	include/lodepng.h	/^  unsigned (*custom_zlib)(unsigned char**, size_t*,$/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGCompressSettings *)
custom_zlib	include/lodepng.h	/^  unsigned (*custom_zlib)(unsigned char**, size_t*,$/;"	m	struct:LodePNGDecompressSettings	typeref:typename:unsigned (*)(unsigned char **,size_t *,const unsigned char *,size_t,const LodePNGDecompressSettings *)
data	include/glm/detail/type_vec4.hpp	/^				typename detail::simd<T>::type data;$/;"	m	union:glm::tvec4::__anon624eef52010a	typeref:typename:detail::simd<T>::type
data	include/glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::i10i10i10i2	typeref:struct:glm::detail::i10i10i10i2::__anon0d6bcc420208	file:
data	include/glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u10u10u10u2	typeref:struct:glm::detail::u10u10u10u2::__anon0d6bcc420108	file:
data	src/lodepng.cpp	/^  unsigned char* data;$/;"	m	struct:ucvector	typeref:typename:unsigned char *	file:
data	src/lodepng.cpp	/^  unsigned* data;$/;"	m	struct:uivector	typeref:typename:unsigned *	file:
day	include/lodepng.h	/^  unsigned day;     \/*1-31*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
ddualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:highp_ddualquat
ddualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:lowp_ddualquat
ddualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm	typeref:typename:mediump_ddualquat
decode	src/lodepng.cpp	/^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const std::string& fi/;"	f	namespace:lodepng	typeref:typename:unsigned
decode	src/lodepng.cpp	/^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h, const unsigned char* /;"	f	namespace:lodepng	typeref:typename:unsigned
decode	src/lodepng.cpp	/^unsigned decode(std::vector<unsigned char>& out, unsigned& w, unsigned& h,$/;"	f	namespace:lodepng	typeref:typename:unsigned
decodeGeneric	src/lodepng.cpp	/^static void decodeGeneric(unsigned char** out, unsigned* w, unsigned* h,$/;"	f	typeref:typename:void	file:
decoder	include/lodepng.h	/^  LodePNGDecoderSettings decoder; \/*the decoding settings*\/$/;"	m	struct:LodePNGState	typeref:typename:LodePNGDecoderSettings
decompose	include/glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER bool decompose(tmat4x4<T, P> const & ModelMatrix, tvec3<T, P> & Scale, tquat/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
decompress	src/lodepng.cpp	/^unsigned decompress(std::vector<unsigned char>& out, const std::vector<unsigned char>& in,$/;"	f	namespace:lodepng	typeref:typename:unsigned
decompress	src/lodepng.cpp	/^unsigned decompress(std::vector<unsigned char>& out, const unsigned char* in, size_t insize,$/;"	f	namespace:lodepng	typeref:typename:unsigned
default_target	build/Makefile	/^default_target: all$/;"	t
defaultp	include/glm/detail/precision.hpp	/^		defaultp = highp$/;"	e	enum:glm::precision
deflate	src/lodepng.cpp	/^static unsigned deflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned	file:
deflateDynamic	src/lodepng.cpp	/^static unsigned deflateDynamic(ucvector* out, size_t* bp, Hash* hash,$/;"	f	typeref:typename:unsigned	file:
deflateFixed	src/lodepng.cpp	/^static unsigned deflateFixed(ucvector* out, size_t* bp, Hash* hash,$/;"	f	typeref:typename:unsigned	file:
deflateNoCompression	src/lodepng.cpp	/^static unsigned deflateNoCompression(ucvector* out, const unsigned char* data, size_t datasize)$/;"	f	typeref:typename:unsigned	file:
degrees	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType degrees(genType radians)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
degrees	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> degrees(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
degreesToRadians	src/utilities.cpp	/^        double degreesToRadians(double angle)$/;"	f	namespace:Utilities::Math	typeref:typename:double
delim_left	include/glm/gtx/io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delim_right	include/glm/gtx/io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delimeter	include/glm/gtx/io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
delimeter	include/glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER delimeter<CTy>::delimeter(CTy a, CTy b, CTy c)$/;"	f	class:glm::io::delimeter	typeref:typename:GLM_FUNC_QUALIFIER
depend	build/Makefile	/^depend:$/;"	t
detail	include/glm/detail/_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/func_common.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/func_exponential.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/func_geometric.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/func_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/func_matrix.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/func_matrix.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/func_noise.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/intrinsic_common.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/intrinsic_common.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/detail/intrinsic_exponential.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/intrinsic_geometric.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/intrinsic_geometric.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/detail/intrinsic_integer.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/intrinsic_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/intrinsic_matrix.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/intrinsic_matrix.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/detail/intrinsic_trigonometric.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/intrinsic_vector_relational.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/setup.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_gentype.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_gentype.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_half.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_int.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_mat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_mat2x2.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_mat3x3.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_mat4x4.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_vec4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/detail/type_vec4_avx.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_vec4_avx2.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/detail/type_vec4_sse2.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/bitfield.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/packing.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/quaternion.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/random.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/round.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtc/ulp.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtx/fast_trigonometry.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtx/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtx/range.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/gtx/simd_mat4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/gtx/simd_mat4.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/gtx/simd_quat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/gtx/simd_quat.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/gtx/simd_vec4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	include/glm/gtx/simd_vec4.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	include/glm/gtx/string_cast.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	include/glm/gtx/vector_query.inl	/^namespace detail$/;"	n	namespace:glm	file:
determinant	include/glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER T determinant(matType<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
determinant	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER float determinant(detail::fmat4x4SIMD const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
diagonal2x2	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> diagonal2x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
diagonal2x3	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> diagonal2x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
diagonal2x4	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> diagonal2x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
diagonal3x2	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> diagonal3x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
diagonal3x3	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> diagonal3x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
diagonal3x4	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> diagonal3x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
diagonal4x2	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> diagonal4x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
diagonal4x3	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> diagonal4x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
diagonal4x4	include/glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> diagonal4x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
diffuse	include/glm/detail/dummy.cpp	/^	glm::vec4 diffuse; \/\/ Dcli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
diffuse	include/glm/detail/dummy.cpp	/^	glm::vec4 diffuse; \/\/ Dcm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
diffuseIntensity	include/lights/directional.h	/^    float diffuseIntensity;$/;"	m	struct:DirectionalLight	typeref:typename:float
diffuseIntensityUniformLocation	include/materials/phongmaterial.h	/^    GLint diffuseIntensityUniformLocation;$/;"	m	struct:PhongLightAttributes	typeref:typename:GLint
direction	include/lights/directional.h	/^    glm::vec3 direction;$/;"	m	struct:DirectionalLight	typeref:typename:glm::vec3
directionUniformLocation	include/materials/phongmaterial.h	/^    GLint directionUniformLocation;$/;"	m	struct:PhongLightAttributes	typeref:typename:GLint
directionalLights	include/lights/directional.h	/^        std::vector<DirectionalLight> directionalLights;$/;"	m	class:DirectionalLightList	typeref:typename:std::vector<DirectionalLight>
diskRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> diskRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
distance	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T distance(vecType<T, P> const & p0, vecType<T, P> const & p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType distance(genType const & p0, genType const & p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
distance	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float distance$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
distance2	include/glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T distance2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance4	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD distance4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
dmat2	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x2		dmat2;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x2
dmat2x2	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x2		dmat2x2;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x2
dmat2x2	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x2		dmat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_dmat2x2
dmat2x2	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x2		dmat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_dmat2x2
dmat2x3	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x3		dmat2x3;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x3
dmat2x3	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x3		dmat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_dmat2x3
dmat2x3	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x3		dmat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_dmat2x3
dmat2x4	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat2x4		dmat2x4;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x4
dmat2x4	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x4		dmat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_dmat2x4
dmat2x4	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x4		dmat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_dmat2x4
dmat3	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x3		dmat3;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x3
dmat3x2	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x2		dmat3x2;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x2
dmat3x2	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x2		dmat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_dmat3x2
dmat3x2	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x2		dmat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_dmat3x2
dmat3x3	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x3		dmat3x3;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x3
dmat3x3	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x3		dmat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_dmat3x3
dmat3x3	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x3		dmat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_dmat3x3
dmat3x4	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat3x4		dmat3x4;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x4
dmat3x4	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x4		dmat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_dmat3x4
dmat3x4	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x4		dmat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_dmat3x4
dmat4	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x4		dmat4;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x4
dmat4x2	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x2		dmat4x2;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x2
dmat4x2	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x2		dmat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_dmat4x2
dmat4x2	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x2		dmat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_dmat4x2
dmat4x3	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x3		dmat4x3;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x3
dmat4x3	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x3		dmat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_dmat4x3
dmat4x3	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x3		dmat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_dmat4x3
dmat4x4	include/glm/detail/type_mat.hpp	/^	typedef highp_dmat4x4		dmat4x4;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x4
dmat4x4	include/glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x4		dmat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_dmat4x4
dmat4x4	include/glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x4		dmat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_dmat4x4
dot	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(T x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dot	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dot	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER float dot$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
dot	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float dot$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
dot4	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD dot4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
double1	include/glm/gtx/compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-precision floating-point vector with 1 comp/;"	t	namespace:glm	typeref:typename:double
double1x1	include/glm/gtx/compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-precision floating-point matrix with 1 co/;"	t	namespace:glm	typeref:typename:double
double2	include/glm/gtx/compatibility.hpp	/^	typedef tvec2<double, highp>		double2;		\/\/!< \\brief double-precision floating-point vector w/;"	t	namespace:glm	typeref:typename:tvec2<double,highp>
double2x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<double, highp>		double2x2;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat2x2<double,highp>
double2x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<double, highp>		double2x3;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat2x3<double,highp>
double2x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<double, highp>		double2x4;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat2x4<double,highp>
double3	include/glm/gtx/compatibility.hpp	/^	typedef tvec3<double, highp>		double3;		\/\/!< \\brief double-precision floating-point vector w/;"	t	namespace:glm	typeref:typename:tvec3<double,highp>
double3x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<double, highp>		double3x2;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat3x2<double,highp>
double3x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<double, highp>		double3x3;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat3x3<double,highp>
double3x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<double, highp>		double3x4;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat3x4<double,highp>
double4	include/glm/gtx/compatibility.hpp	/^	typedef tvec4<double, highp>		double4;		\/\/!< \\brief double-precision floating-point vector w/;"	t	namespace:glm	typeref:typename:tvec4<double,highp>
double4x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<double, highp>		double4x2;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat4x2<double,highp>
double4x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<double, highp>		double4x3;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat4x3<double,highp>
double4x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<double, highp>		double4x4;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat4x4<double,highp>
dquat	include/glm/fwd.hpp	/^	typedef highp_dquat			dquat;$/;"	t	namespace:glm	typeref:typename:highp_dquat
dquat	include/glm/fwd.hpp	/^	typedef lowp_dquat			dquat;$/;"	t	namespace:glm	typeref:typename:lowp_dquat
dquat	include/glm/fwd.hpp	/^	typedef mediump_dquat		dquat;$/;"	t	namespace:glm	typeref:typename:mediump_dquat
dual	include/glm/gtx/dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:glm::tquat<T,P>
dualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
dualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
dualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
dualquat_cast	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> dualquat_cast(tmat2x4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
dualquat_cast	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> dualquat_cast(tmat3x4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
dvec1	include/glm/gtc/vec1.hpp	/^	typedef highp_dvec1				dvec1;$/;"	t	namespace:glm	typeref:typename:highp_dvec1
dvec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_dvec1				dvec1;$/;"	t	namespace:glm	typeref:typename:lowp_dvec1
dvec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_dvec1			dvec1;$/;"	t	namespace:glm	typeref:typename:mediump_dvec1
dvec2	include/glm/detail/type_vec.hpp	/^	typedef highp_dvec2			dvec2;$/;"	t	namespace:glm	typeref:typename:highp_dvec2
dvec2	include/glm/detail/type_vec.hpp	/^	typedef lowp_dvec2			dvec2;$/;"	t	namespace:glm	typeref:typename:lowp_dvec2
dvec2	include/glm/detail/type_vec.hpp	/^	typedef mediump_dvec2		dvec2;$/;"	t	namespace:glm	typeref:typename:mediump_dvec2
dvec3	include/glm/detail/type_vec.hpp	/^	typedef highp_dvec3			dvec3;$/;"	t	namespace:glm	typeref:typename:highp_dvec3
dvec3	include/glm/detail/type_vec.hpp	/^	typedef lowp_dvec3			dvec3;$/;"	t	namespace:glm	typeref:typename:lowp_dvec3
dvec3	include/glm/detail/type_vec.hpp	/^	typedef mediump_dvec3		dvec3;$/;"	t	namespace:glm	typeref:typename:mediump_dvec3
dvec4	include/glm/detail/type_vec.hpp	/^	typedef highp_dvec4			dvec4;$/;"	t	namespace:glm	typeref:typename:highp_dvec4
dvec4	include/glm/detail/type_vec.hpp	/^	typedef lowp_dvec4			dvec4;$/;"	t	namespace:glm	typeref:typename:lowp_dvec4
dvec4	include/glm/detail/type_vec.hpp	/^	typedef mediump_dvec4		dvec4;$/;"	t	namespace:glm	typeref:typename:mediump_dvec4
dword	include/glm/gtx/raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm	typeref:typename:detail::uint32
e	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType e()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
elem	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER const value_type&   elem   (size_t i) const { return (reinterpret_cast<cons/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER const value_type &
elem	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER value_type&         elem   (size_t i)       { return (reinterpret_cast<valu/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER value_type &
emission	include/glm/detail/dummy.cpp	/^	glm::vec4 emission; \/\/ Ecm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
encode	src/lodepng.cpp	/^unsigned encode(const std::string& filename,$/;"	f	namespace:lodepng	typeref:typename:unsigned
encode	src/lodepng.cpp	/^unsigned encode(std::vector<unsigned char>& out, const unsigned char* in, unsigned w, unsigned h/;"	f	namespace:lodepng	typeref:typename:unsigned
encode	src/lodepng.cpp	/^unsigned encode(std::vector<unsigned char>& out,$/;"	f	namespace:lodepng	typeref:typename:unsigned
encodeLZ77	src/lodepng.cpp	/^static unsigned encodeLZ77(uivector* out, Hash* hash,$/;"	f	typeref:typename:unsigned	file:
encoder	include/lodepng.h	/^  LodePNGEncoderSettings encoder; \/*the encoding settings*\/$/;"	m	struct:LodePNGState	typeref:typename:LodePNGEncoderSettings
end	include/glm/gtx/range.hpp	/^	const typename genType::value_type * end(genType const & v){$/;"	f	namespace:glm	typeref:typename:const typename genType::value_type *
end	include/glm/gtx/range.hpp	/^	typename genType::value_type * end(genType& v){$/;"	f	namespace:glm	typeref:typename:genType::value_type *
epsilon	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType epsilon()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
epsilonEqual	include/glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonEqual	include/glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
epsilonEqual	include/glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
epsilonNotEqual	include/glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonNotEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonNotEqual	include/glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> epsilonNotEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
epsilonNotEqual	include/glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> epsilonNotEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
equal	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> equal(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
equal	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> equal(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
equal	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool equal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
error	include/lodepng.h	/^  unsigned error;$/;"	m	struct:LodePNGState	typeref:typename:unsigned
euclidean	include/glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> euclidean$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
euler	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType euler()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
eulerAngleX	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleXY	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleXZ	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleY	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleYX	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleYXZ	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleYXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleYZ	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleZ	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleZX	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleZY	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngles	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> eulerAngles(tquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
exp	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> exp(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
exp	include/glm/detail/intrinsic_common.inl	/^			const unsigned int mantissa:23, exp:8, sign:1;$/;"	m	struct:glm::detail::ieee754_QNAN::i	typeref:typename:const unsigned int:8	file:
exp	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> exp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
exp2	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType exp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exp2	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> exp2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
extend	include/glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER genType extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
extend	include/glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
extend	include/glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
extend	include/glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
extractMatrixRotation	include/glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> extractMatrixRotation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
extractRealComponent	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T extractRealComponent$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
f	include/glm/detail/intrinsic_common.inl	/^		const float f;$/;"	m	union:glm::detail::ieee754_QNAN	typeref:typename:const float	file:
f	include/glm/detail/type_half.inl	/^		float f;$/;"	m	union:glm::detail::uif32	typeref:typename:float	file:
f32	include/glm/fwd.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
f32	include/glm/fwd.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm	typeref:typename:lowp_f32
f32	include/glm/fwd.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm	typeref:typename:mediump_float32
f32	include/glm/gtc/type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm	typeref:typename:float32
f32mat1	include/glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm::gtx	typeref:typename:f32
f32mat1x1	include/glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm::gtx	typeref:typename:f32
f32mat2	include/glm/fwd.hpp	/^	typedef f32mat2x2				f32mat2;$/;"	t	namespace:glm	typeref:typename:f32mat2x2
f32mat2	include/glm/fwd.hpp	/^	typedef lowp_f32mat2			f32mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2
f32mat2	include/glm/fwd.hpp	/^	typedef mediump_f32mat2			f32mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2
f32mat2	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
f32mat2x2	include/glm/fwd.hpp	/^	typedef highp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
f32mat2x2	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
f32mat2x2	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x2		f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
f32mat2x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
f32mat2x3	include/glm/fwd.hpp	/^	typedef highp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x3
f32mat2x3	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x3
f32mat2x3	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x3		f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x3
f32mat2x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,defaultp>
f32mat2x4	include/glm/fwd.hpp	/^	typedef highp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x4
f32mat2x4	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x4
f32mat2x4	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x4		f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x4
f32mat2x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,defaultp>
f32mat3	include/glm/fwd.hpp	/^	typedef f32mat3x3				f32mat3;$/;"	t	namespace:glm	typeref:typename:f32mat3x3
f32mat3	include/glm/fwd.hpp	/^	typedef lowp_f32mat3			f32mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3
f32mat3	include/glm/fwd.hpp	/^	typedef mediump_f32mat3			f32mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3
f32mat3	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
f32mat3x2	include/glm/fwd.hpp	/^	typedef highp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x2
f32mat3x2	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x2
f32mat3x2	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x2		f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x2
f32mat3x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,defaultp>
f32mat3x3	include/glm/fwd.hpp	/^	typedef highp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
f32mat3x3	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
f32mat3x3	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x3		f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
f32mat3x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
f32mat3x4	include/glm/fwd.hpp	/^	typedef highp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x4
f32mat3x4	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x4
f32mat3x4	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x4		f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x4
f32mat3x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,defaultp>
f32mat4	include/glm/fwd.hpp	/^	typedef f32mat4x4				f32mat4;$/;"	t	namespace:glm	typeref:typename:f32mat4x4
f32mat4	include/glm/fwd.hpp	/^	typedef lowp_f32mat4			f32mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4
f32mat4	include/glm/fwd.hpp	/^	typedef mediump_f32mat4			f32mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4
f32mat4	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
f32mat4x2	include/glm/fwd.hpp	/^	typedef highp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x2
f32mat4x2	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x2
f32mat4x2	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x2		f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x2
f32mat4x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,defaultp>
f32mat4x3	include/glm/fwd.hpp	/^	typedef highp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x3
f32mat4x3	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x3
f32mat4x3	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x3		f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x3
f32mat4x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,defaultp>
f32mat4x4	include/glm/fwd.hpp	/^	typedef highp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
f32mat4x4	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
f32mat4x4	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x4		f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
f32mat4x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
f32quat	include/glm/fwd.hpp	/^	typedef highp_f32quat			f32quat;$/;"	t	namespace:glm	typeref:typename:highp_f32quat
f32quat	include/glm/fwd.hpp	/^	typedef lowp_f32quat			f32quat;$/;"	t	namespace:glm	typeref:typename:lowp_f32quat
f32quat	include/glm/fwd.hpp	/^	typedef mediump_f32quat			f32quat;$/;"	t	namespace:glm	typeref:typename:mediump_f32quat
f32quat	include/glm/gtc/type_precision.hpp	/^	typedef tquat<f32, defaultp> f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,defaultp>
f32vec1	include/glm/fwd.hpp	/^	typedef highp_f32vec1			f32vec1;$/;"	t	namespace:glm	typeref:typename:highp_f32vec1
f32vec1	include/glm/fwd.hpp	/^	typedef lowp_f32vec1			f32vec1;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec1
f32vec1	include/glm/fwd.hpp	/^	typedef mediump_f32vec1			f32vec1;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec1
f32vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<f32, defaultp> f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,defaultp>
f32vec1	include/glm/gtx/number_precision.hpp	/^	typedef f32			f32vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_/;"	t	namespace:glm::gtx	typeref:typename:f32
f32vec2	include/glm/fwd.hpp	/^	typedef highp_f32vec2			f32vec2;$/;"	t	namespace:glm	typeref:typename:highp_f32vec2
f32vec2	include/glm/fwd.hpp	/^	typedef lowp_f32vec2			f32vec2;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec2
f32vec2	include/glm/fwd.hpp	/^	typedef mediump_f32vec2			f32vec2;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec2
f32vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<f32, defaultp> f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,defaultp>
f32vec3	include/glm/fwd.hpp	/^	typedef highp_f32vec3			f32vec3;$/;"	t	namespace:glm	typeref:typename:highp_f32vec3
f32vec3	include/glm/fwd.hpp	/^	typedef lowp_f32vec3			f32vec3;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec3
f32vec3	include/glm/fwd.hpp	/^	typedef mediump_f32vec3			f32vec3;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec3
f32vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<f32, defaultp> f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,defaultp>
f32vec4	include/glm/fwd.hpp	/^	typedef highp_f32vec4			f32vec4;$/;"	t	namespace:glm	typeref:typename:highp_f32vec4
f32vec4	include/glm/fwd.hpp	/^	typedef lowp_f32vec4			f32vec4;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec4
f32vec4	include/glm/fwd.hpp	/^	typedef mediump_f32vec4			f32vec4;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec4
f32vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<f32, defaultp> f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,defaultp>
f64	include/glm/fwd.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
f64	include/glm/fwd.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm	typeref:typename:lowp_f64
f64	include/glm/fwd.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm	typeref:typename:mediump_float64
f64	include/glm/gtc/type_precision.hpp	/^	typedef float64 f64;$/;"	t	namespace:glm	typeref:typename:float64
f64mat1	include/glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm::gtx	typeref:typename:f64
f64mat1x1	include/glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm::gtx	typeref:typename:f64
f64mat2	include/glm/fwd.hpp	/^	typedef f64mat2x2				f64mat2;$/;"	t	namespace:glm	typeref:typename:f64mat2x2
f64mat2	include/glm/fwd.hpp	/^	typedef lowp_f64mat2			f64mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2
f64mat2	include/glm/fwd.hpp	/^	typedef mediump_f64mat2			f64mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2
f64mat2	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,defaultp>
f64mat2x2	include/glm/fwd.hpp	/^	typedef highp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x2
f64mat2x2	include/glm/fwd.hpp	/^	typedef lowp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x2
f64mat2x2	include/glm/fwd.hpp	/^	typedef mediump_f64mat2x2		f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x2
f64mat2x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,defaultp>
f64mat2x3	include/glm/fwd.hpp	/^	typedef highp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x3
f64mat2x3	include/glm/fwd.hpp	/^	typedef lowp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x3
f64mat2x3	include/glm/fwd.hpp	/^	typedef mediump_f64mat2x3		f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x3
f64mat2x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f64, defaultp> f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,defaultp>
f64mat2x4	include/glm/fwd.hpp	/^	typedef highp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x4
f64mat2x4	include/glm/fwd.hpp	/^	typedef lowp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x4
f64mat2x4	include/glm/fwd.hpp	/^	typedef mediump_f64mat2x4		f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x4
f64mat2x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f64, defaultp> f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,defaultp>
f64mat3	include/glm/fwd.hpp	/^	typedef f64mat3x3				f64mat3;$/;"	t	namespace:glm	typeref:typename:f64mat3x3
f64mat3	include/glm/fwd.hpp	/^	typedef lowp_f64mat3			f64mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3
f64mat3	include/glm/fwd.hpp	/^	typedef mediump_f64mat3			f64mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3
f64mat3	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,defaultp>
f64mat3x2	include/glm/fwd.hpp	/^	typedef highp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x2
f64mat3x2	include/glm/fwd.hpp	/^	typedef lowp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x2
f64mat3x2	include/glm/fwd.hpp	/^	typedef mediump_f64mat3x2		f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x2
f64mat3x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f64, defaultp> f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,defaultp>
f64mat3x3	include/glm/fwd.hpp	/^	typedef highp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x3
f64mat3x3	include/glm/fwd.hpp	/^	typedef lowp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x3
f64mat3x3	include/glm/fwd.hpp	/^	typedef mediump_f64mat3x3		f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x3
f64mat3x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,defaultp>
f64mat3x4	include/glm/fwd.hpp	/^	typedef highp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x4
f64mat3x4	include/glm/fwd.hpp	/^	typedef lowp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x4
f64mat3x4	include/glm/fwd.hpp	/^	typedef mediump_f64mat3x4		f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x4
f64mat3x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f64, defaultp> f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,defaultp>
f64mat4	include/glm/fwd.hpp	/^	typedef f64mat4x4				f64mat4;$/;"	t	namespace:glm	typeref:typename:f64mat4x4
f64mat4	include/glm/fwd.hpp	/^	typedef lowp_f64mat4			f64mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4
f64mat4	include/glm/fwd.hpp	/^	typedef mediump_f64mat4			f64mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4
f64mat4	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,defaultp>
f64mat4x2	include/glm/fwd.hpp	/^	typedef highp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x2
f64mat4x2	include/glm/fwd.hpp	/^	typedef lowp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x2
f64mat4x2	include/glm/fwd.hpp	/^	typedef mediump_f64mat4x2		f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x2
f64mat4x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f64, defaultp> f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,defaultp>
f64mat4x3	include/glm/fwd.hpp	/^	typedef highp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x3
f64mat4x3	include/glm/fwd.hpp	/^	typedef lowp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x3
f64mat4x3	include/glm/fwd.hpp	/^	typedef mediump_f64mat4x3		f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x3
f64mat4x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f64, defaultp> f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,defaultp>
f64mat4x4	include/glm/fwd.hpp	/^	typedef highp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x4
f64mat4x4	include/glm/fwd.hpp	/^	typedef lowp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x4
f64mat4x4	include/glm/fwd.hpp	/^	typedef mediump_f64mat4x4		f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x4
f64mat4x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,defaultp>
f64quat	include/glm/fwd.hpp	/^	typedef highp_f64quat			f64quat;$/;"	t	namespace:glm	typeref:typename:highp_f64quat
f64quat	include/glm/fwd.hpp	/^	typedef lowp_f64quat			f64quat;$/;"	t	namespace:glm	typeref:typename:lowp_f64quat
f64quat	include/glm/fwd.hpp	/^	typedef mediump_f64quat			f64quat;$/;"	t	namespace:glm	typeref:typename:mediump_f64quat
f64quat	include/glm/gtc/type_precision.hpp	/^	typedef tquat<f64, defaultp> f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,defaultp>
f64vec1	include/glm/fwd.hpp	/^	typedef highp_f64vec1			f64vec1;$/;"	t	namespace:glm	typeref:typename:highp_f64vec1
f64vec1	include/glm/fwd.hpp	/^	typedef lowp_f64vec1			f64vec1;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec1
f64vec1	include/glm/fwd.hpp	/^	typedef mediump_f64vec1			f64vec1;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec1
f64vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<f64, defaultp> f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,defaultp>
f64vec1	include/glm/gtx/number_precision.hpp	/^	typedef f64			f64vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_/;"	t	namespace:glm::gtx	typeref:typename:f64
f64vec2	include/glm/fwd.hpp	/^	typedef highp_f64vec2			f64vec2;$/;"	t	namespace:glm	typeref:typename:highp_f64vec2
f64vec2	include/glm/fwd.hpp	/^	typedef lowp_f64vec2			f64vec2;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec2
f64vec2	include/glm/fwd.hpp	/^	typedef mediump_f64vec2			f64vec2;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec2
f64vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<f64, defaultp> f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,defaultp>
f64vec3	include/glm/fwd.hpp	/^	typedef highp_f64vec3			f64vec3;$/;"	t	namespace:glm	typeref:typename:highp_f64vec3
f64vec3	include/glm/fwd.hpp	/^	typedef lowp_f64vec3			f64vec3;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec3
f64vec3	include/glm/fwd.hpp	/^	typedef mediump_f64vec3			f64vec3;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec3
f64vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<f64, defaultp> f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,defaultp>
f64vec4	include/glm/fwd.hpp	/^	typedef highp_f64vec4			f64vec4;$/;"	t	namespace:glm	typeref:typename:highp_f64vec4
f64vec4	include/glm/fwd.hpp	/^	typedef lowp_f64vec4			f64vec4;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec4
f64vec4	include/glm/fwd.hpp	/^	typedef mediump_f64vec4			f64vec4;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec4
f64vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<f64, defaultp> f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,defaultp>
faceforward	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType faceforward(genType const & N, genType const & I, genType const & Nr/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
faceforward	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> faceforward(vecType<T, P> const & N, vecType<T, P> const & I, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
faceforward	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD faceforward$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
factorial	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER genType factorial(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
factorial	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
factorial	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
factorial	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
fade	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> fade(tvec2<T, P> const & t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
fade	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> fade(tvec3<T, P> const & t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
fade	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> fade(tvec4<T, P> const & t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
fast	include/glm/detail/type_gentype.hpp	/^		fast,$/;"	e	enum:glm::profile
fastAcos	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAcos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAcos	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAcos(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastAsin	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAsin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAsin	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAsin(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastAtan	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T y, T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAtan(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastAtan	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAtan(vecType<T, P> const & y, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastCos	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastCos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastCos	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastCos(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastDistance	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastDistance(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastDistance	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastDistance(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastExp(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastExp	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastExp(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastExp2	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastExp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp2	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastExp2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastInverseSqrt	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastInverseSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastInverseSqrt	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastInverseSqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastInversesqrt	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastInversesqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastLength	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastLength(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastLength	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastLength(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLength	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float fastLength$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
fastLength4	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastLength4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastLog	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastLog(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastLog2	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog2	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastLog2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastMix	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> fastMix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
fastMix	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD fastMix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
fastNormalize	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastNormalize(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastNormalize	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastNormalize(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastNormalize	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastNormalize$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastNormalizeDot	include/glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T fastNormalizeDot(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastPow(T x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastPow(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastPow	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastPow(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastPow	include/glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastPow(vecType<T, P> const & x, vecType<int, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastSin	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastSin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastSin	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastSin(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastSin	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER __m128 fastSin(__m128 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER __m128
fastSlerp	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD fastSlerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
fastSqrt	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastSqrt	include/glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastSqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastSqrt	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastSqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastTan	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastTan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastTan	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastTan(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fdualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
fdualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
fdualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
fill_	include/glm/gtx/io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:char_type
filter	src/lodepng.cpp	/^static unsigned filter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h,$/;"	f	typeref:typename:unsigned	file:
filterScanline	src/lodepng.cpp	/^static void filterScanline(unsigned char* out, const unsigned char* scanline, const unsigned cha/;"	f	typeref:typename:void	file:
filter_method	include/lodepng.h	/^  unsigned filter_method;     \/*filter method of the original file*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
filter_palette_zero	include/lodepng.h	/^  unsigned filter_palette_zero;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
filter_strategy	include/lodepng.h	/^  LodePNGFilterStrategy filter_strategy;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:LodePNGFilterStrategy
findLSB	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findLSB(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findLSB	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> findLSB(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
findMSB	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findMSB(genIUType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findMSB	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> findMSB(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
flags_	include/glm/gtx/io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:flags_type
flags_type	include/glm/gtx/io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::ios_base::fmtflags
float1	include/glm/gtx/compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-precision floating-point vector with 1 compo/;"	t	namespace:glm	typeref:typename:float
float1x1	include/glm/gtx/compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-precision floating-point matrix with 1 comp/;"	t	namespace:glm	typeref:typename:float
float2	include/glm/gtx/compatibility.hpp	/^	typedef tvec2<float, highp>		float2;			\/\/!< \\brief single-precision floating-point vector wi/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
float2half	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 float2half(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
float2packed10	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed10(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2packed11	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed11(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<float, highp>		float2x2;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
float2x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<float, highp>		float2x3;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat2x3<float,highp>
float2x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<float, highp>		float2x4;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat2x4<float,highp>
float3	include/glm/gtx/compatibility.hpp	/^	typedef tvec3<float, highp>		float3;			\/\/!< \\brief single-precision floating-point vector wi/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
float32	include/glm/detail/type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm	typeref:typename:float
float32	include/glm/detail/type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm::detail	typeref:typename:float
float32	include/glm/fwd.hpp	/^	typedef highp_float32 float32;$/;"	t	namespace:glm	typeref:typename:highp_float32
float32	include/glm/fwd.hpp	/^	typedef lowp_float32 float32;$/;"	t	namespace:glm	typeref:typename:lowp_float32
float32	include/glm/fwd.hpp	/^	typedef mediump_float32 float32;$/;"	t	namespace:glm	typeref:typename:mediump_float32
float32	include/glm/gtc/type_precision.hpp	/^	typedef detail::float32 float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
float32_t	include/glm/fwd.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
float32_t	include/glm/fwd.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:lowp_float32_t
float32_t	include/glm/fwd.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm	typeref:typename:mediump_float32
float32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::float32 float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
float3x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<float, highp>		float3x2;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat3x2<float,highp>
float3x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<float, highp>		float3x3;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
float3x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<float, highp>		float3x4;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat3x4<float,highp>
float4	include/glm/gtx/compatibility.hpp	/^	typedef tvec4<float, highp>		float4;			\/\/!< \\brief single-precision floating-point vector wi/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
float4x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<float, highp>		float4x2;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat4x2<float,highp>
float4x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<float, highp>		float4x3;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat4x3<float,highp>
float4x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<float, highp>		float4x4;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
float64	include/glm/detail/type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm	typeref:typename:double
float64	include/glm/detail/type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm::detail	typeref:typename:double
float64	include/glm/fwd.hpp	/^	typedef highp_float64 float64;$/;"	t	namespace:glm	typeref:typename:highp_float64
float64	include/glm/fwd.hpp	/^	typedef lowp_float64 float64;$/;"	t	namespace:glm	typeref:typename:lowp_float64
float64	include/glm/fwd.hpp	/^	typedef mediump_float64 float64;$/;"	t	namespace:glm	typeref:typename:mediump_float64
float64	include/glm/gtc/type_precision.hpp	/^	typedef detail::float64 float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
float64_t	include/glm/fwd.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
float64_t	include/glm/fwd.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:lowp_float64_t
float64_t	include/glm/fwd.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm	typeref:typename:mediump_float64
float64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::float64 float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
floatBitsToInt	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER int floatBitsToInt(float const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
floatBitsToInt	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> floatBitsToInt(vecType<float, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
floatBitsToUint	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER uint floatBitsToUint(float const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
floatBitsToUint	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> floatBitsToUint(vecType<float, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
floatTo10bit	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo10bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
floatTo11bit	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo11bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
float_distance	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER uint float_distance(T const & x, T const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
float_distance	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> float_distance(vecType<T, P> const & x, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
float_t	include/glm/detail/type_float.hpp	/^	typedef highp_float			float_t;$/;"	t	namespace:glm	typeref:typename:highp_float
float_t	include/glm/detail/type_float.hpp	/^	typedef lowp_float			float_t;$/;"	t	namespace:glm	typeref:typename:lowp_float
float_t	include/glm/detail/type_float.hpp	/^	typedef mediump_float		float_t;$/;"	t	namespace:glm	typeref:typename:mediump_float
flog2	src/lodepng.cpp	/^static float flog2(float f)$/;"	f	typeref:typename:float	file:
floor	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> floor(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
floor	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD floor$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
floorMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> floorMultiple(vecType<T, P> const & Source, vecType<T, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
floorPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> floorPowerOfTwo(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fma	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fma(genType const & a, genType const & b, genType const & c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fma	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fma$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fmat2	include/glm/fwd.hpp	/^	typedef fmat2x2					fmat2;$/;"	t	namespace:glm	typeref:typename:fmat2x2
fmat2	include/glm/fwd.hpp	/^	typedef lowp_f32mat2			fmat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2
fmat2	include/glm/fwd.hpp	/^	typedef mediump_f32mat2			fmat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2
fmat2	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
fmat2x2	include/glm/fwd.hpp	/^	typedef highp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
fmat2x2	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
fmat2x2	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x2		fmat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
fmat2x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
fmat2x3	include/glm/fwd.hpp	/^	typedef highp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x3
fmat2x3	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x3
fmat2x3	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x3		fmat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x3
fmat2x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,defaultp>
fmat2x4	include/glm/fwd.hpp	/^	typedef highp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x4
fmat2x4	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x4
fmat2x4	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x4		fmat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x4
fmat2x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,defaultp>
fmat3	include/glm/fwd.hpp	/^	typedef fmat3x3					fmat3;$/;"	t	namespace:glm	typeref:typename:fmat3x3
fmat3	include/glm/fwd.hpp	/^	typedef lowp_f32mat3			fmat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3
fmat3	include/glm/fwd.hpp	/^	typedef mediump_f32mat3			fmat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3
fmat3	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
fmat3x2	include/glm/fwd.hpp	/^	typedef highp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x2
fmat3x2	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x2
fmat3x2	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x2		fmat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x2
fmat3x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,defaultp>
fmat3x3	include/glm/fwd.hpp	/^	typedef highp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
fmat3x3	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
fmat3x3	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x3		fmat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
fmat3x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
fmat3x4	include/glm/fwd.hpp	/^	typedef highp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x4
fmat3x4	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x4
fmat3x4	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x4		fmat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x4
fmat3x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,defaultp>
fmat4	include/glm/fwd.hpp	/^	typedef fmat4x4					fmat4;$/;"	t	namespace:glm	typeref:typename:fmat4x4
fmat4	include/glm/fwd.hpp	/^	typedef lowp_f32mat4			fmat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4
fmat4	include/glm/fwd.hpp	/^	typedef mediump_f32mat4			fmat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4
fmat4	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
fmat4x2	include/glm/fwd.hpp	/^	typedef highp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x2
fmat4x2	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x2
fmat4x2	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x2		fmat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x2
fmat4x2	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,defaultp>
fmat4x3	include/glm/fwd.hpp	/^	typedef highp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x3
fmat4x3	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x3
fmat4x3	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x3		fmat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x3
fmat4x3	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,defaultp>
fmat4x4	include/glm/fwd.hpp	/^	typedef highp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
fmat4x4	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
fmat4x4	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x4		fmat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
fmat4x4	include/glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
fmat4x4SIMD	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD::fmat4x4SIMD$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fmat4x4SIMD	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD::fmat4x4SIMD()$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fmat4x4SIMD	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD::fmat4x4SIMD(float const & s)$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
force_palette	include/lodepng.h	/^  unsigned force_palette;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
format	include/glm/gtx/string_cast.inl	/^	GLM_FUNC_QUALIFIER std::string format(const char* msg, ...)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::string
format_punct	include/glm/gtx/io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_punct	include/glm/gtx/io.inl	/^	format_punct<CTy>::format_punct(format_punct const& a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_punct	include/glm/gtx/io.inl	/^	format_punct<CTy>::format_punct(size_t a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_saver	include/glm/gtx/io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<char>
formatted	include/glm/gtx/io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct	typeref:typename:bool
formatted	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr>& formatted(std::basic_ios<CTy,CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
forwardVector	include/camera.h	/^        glm::vec3 forwardVector = glm::vec3(0, 0, 1);$/;"	m	class:Camera	typeref:typename:glm::vec3
four_over_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType four_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fquat	include/glm/fwd.hpp	/^	typedef highp_fquat				fquat;$/;"	t	namespace:glm	typeref:typename:highp_fquat
fquat	include/glm/fwd.hpp	/^	typedef lowp_f32quat			fquat;$/;"	t	namespace:glm	typeref:typename:lowp_f32quat
fquat	include/glm/fwd.hpp	/^	typedef mediump_f32quat			fquat;$/;"	t	namespace:glm	typeref:typename:mediump_f32quat
fquat	include/glm/fwd.hpp	/^	typedef quat				fquat;$/;"	t	namespace:glm	typeref:typename:quat
fquatSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD()$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(__m128 const & Data) :$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(float const & w, float const & x, float const & y, float/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(fquatSIMD const & q) :$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(quat const & q) :$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(vec3 const & eulerAngles)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fract	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fract(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fract	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fract(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fract	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fract$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fragmentShader	include/materials/material.h	/^    GLuint fragmentShader = 0;$/;"	m	struct:ShaderProgramStages	typeref:typename:GLuint
freeResources	src/renderwindow.cpp	/^void RenderWindow::freeResources()$/;"	f	class:RenderWindow	typeref:typename:void
freeResources	src/texture.cpp	/^void Texture::freeResources()$/;"	f	class:Texture	typeref:typename:void
freelist	src/lodepng.cpp	/^  BPMNode** freelist;$/;"	m	struct:BPMLists	typeref:typename:BPMNode **	file:
frexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType frexp(genType x, int & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
frexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> frexp(tvec1<T, P> const & x, tvec1<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
frexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> frexp(tvec2<T, P> const & x, tvec2<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
frexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> frexp(tvec3<T, P> const & x, tvec3<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
frexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> frexp(tvec4<T, P> const & x, tvec4<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
frustum	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> frustum$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
func	include/glm/detail/dummy.cpp	/^void func(GLuint LocationMVP, float Translate, glm::vec2 const & Rotate)$/;"	f	typeref:typename:void
functor1	include/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec1>$/;"	s	namespace:glm::detail
functor1	include/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec2>$/;"	s	namespace:glm::detail
functor1	include/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec3>$/;"	s	namespace:glm::detail
functor1	include/glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec4>$/;"	s	namespace:glm::detail
functor1	include/glm/detail/_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	include/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2	include/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2	include/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2	include/glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2	include/glm/detail/_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_sca	include/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2_vec_sca	include/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2_vec_sca	include/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2_vec_sca	include/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2_vec_sca	include/glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	include/glm/fwd.hpp	/^	typedef highp_f32vec1			fvec1;$/;"	t	namespace:glm	typeref:typename:highp_f32vec1
fvec1	include/glm/fwd.hpp	/^	typedef lowp_f32vec1			fvec1;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec1
fvec1	include/glm/fwd.hpp	/^	typedef mediump_f32vec1			fvec1;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec1
fvec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<float, defaultp> fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,defaultp>
fvec2	include/glm/fwd.hpp	/^	typedef highp_f32vec2			fvec2;$/;"	t	namespace:glm	typeref:typename:highp_f32vec2
fvec2	include/glm/fwd.hpp	/^	typedef lowp_f32vec2			fvec2;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec2
fvec2	include/glm/fwd.hpp	/^	typedef mediump_f32vec2			fvec2;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec2
fvec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<float, defaultp> fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,defaultp>
fvec3	include/glm/fwd.hpp	/^	typedef highp_f32vec3			fvec3;$/;"	t	namespace:glm	typeref:typename:highp_f32vec3
fvec3	include/glm/fwd.hpp	/^	typedef lowp_f32vec3			fvec3;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec3
fvec3	include/glm/fwd.hpp	/^	typedef mediump_f32vec3			fvec3;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec3
fvec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<float, defaultp> fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,defaultp>
fvec4	include/glm/fwd.hpp	/^	typedef highp_f32vec4			fvec4;$/;"	t	namespace:glm	typeref:typename:highp_f32vec4
fvec4	include/glm/fwd.hpp	/^	typedef lowp_f32vec4			fvec4;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec4
fvec4	include/glm/fwd.hpp	/^	typedef mediump_f32vec4			fvec4;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec4
fvec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<float, defaultp> fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,defaultp>
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(__m128 const & Data) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s, vec3 const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s1, float const & s2, vec2 const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s1, vec2 const & v, float const & s2) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & x, float const & y, float const & z, float/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(fvec4SIMD const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec2 const & v, float const & s1, float const & s2) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec2 const & v1, vec2 const & v2) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec3 const & v, float const & s) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec4 const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
g	include/glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon622abe50010a::__anon622abe500308	typeref:typename:T
g	include/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon622abe50060a	typeref:typename:T
g	include/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10308	typeref:typename:T
g	include/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon623cd6d1060a	typeref:typename:T
g	include/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520308	typeref:typename:T
g	include/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon624eef52060a	typeref:typename:T
gaussRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType gaussRand(genType Mean, genType Deviation)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
gaussRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> gaussRand(vecType<T, P> const & Mean, vecType<T, P> const & De/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
genType	include/glm/detail/type_gentype.hpp	/^	struct genType$/;"	s	namespace:glm::detail
generateFixedDistanceTree	src/lodepng.cpp	/^static unsigned generateFixedDistanceTree(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
generateFixedLitLenTree	src/lodepng.cpp	/^static unsigned generateFixedLitLenTree(HuffmanTree* tree)$/;"	f	typeref:typename:unsigned	file:
geometryShader	include/materials/material.h	/^    GLuint geometryShader = 0;$/;"	m	struct:ShaderProgramStages	typeref:typename:GLuint
getAttribute	src/materials/material.cpp	/^GLint Material::getAttribute(std::string attributeName)$/;"	f	class:Material	typeref:typename:GLint
getControlState	src/controls.cpp	/^const std::vector<bool> &Controls::getControlState() const$/;"	f	class:Controls	typeref:typename:const std::vector<bool> &
getFileContents	src/utilities.cpp	/^        bool getFileContents(std::vector<uint8_t> &fileBuffer, const std::string &filePath)$/;"	f	namespace:Utilities::File	typeref:typename:bool
getHash	src/lodepng.cpp	/^static unsigned getHash(const unsigned char* data, size_t size, size_t pos)$/;"	f	typeref:typename:unsigned	file:
getLightByID	src/lights/directional.cpp	/^DirectionalLight *DirectionalLightList::getLightByID(unsigned int lightID)$/;"	f	class:DirectionalLightList	typeref:typename:DirectionalLight *
getLightUniformAttribute	src/materials/phongmaterial.cpp	/^PhongLightAttributes PhongMaterial::getLightUniformAttribute(std::string uniformName)$/;"	f	class:PhongMaterial	typeref:typename:PhongLightAttributes
getLightUniforms	src/materials/phongmaterial.cpp	/^const std::unordered_map<std::string, PhongLightAttributes> &PhongMaterial::getLightUniforms()$/;"	f	class:PhongMaterial	typeref:typename:const std::unordered_map<std::string,PhongLightAttributes> &
getMouseState	src/controls.cpp	/^std::pair<int, int> Controls::getMouseState() const$/;"	f	class:Controls	typeref:typename:std::pair<int,int>
getNumColorChannels	src/lodepng.cpp	/^static unsigned getNumColorChannels(LodePNGColorType colortype)$/;"	f	typeref:typename:unsigned	file:
getPaletteTranslucency	src/lodepng.cpp	/^static unsigned getPaletteTranslucency(const unsigned char* palette, size_t palettesize)$/;"	f	typeref:typename:unsigned	file:
getPixelColorRGBA16	src/lodepng.cpp	/^static void getPixelColorRGBA16(unsigned short* r, unsigned short* g, unsigned short* b, unsigne/;"	f	typeref:typename:void	file:
getPixelColorRGBA8	src/lodepng.cpp	/^static void getPixelColorRGBA8(unsigned char* r, unsigned char* g,$/;"	f	typeref:typename:void	file:
getPixelColorsRGBA8	src/lodepng.cpp	/^static void getPixelColorsRGBA8(unsigned char* buffer, size_t numpixels,$/;"	f	typeref:typename:void	file:
getRenderWindowHandle	src/renderwindow.cpp	/^SDL_Window* RenderWindow::getRenderWindowHandle()$/;"	f	class:RenderWindow	typeref:typename:SDL_Window *
getShaderProgram	src/materials/material.cpp	/^GLuint Material::getShaderProgram()$/;"	f	class:Material	typeref:typename:GLuint
getTreeInflateDynamic	src/lodepng.cpp	/^static unsigned getTreeInflateDynamic(HuffmanTree* tree_ll, HuffmanTree* tree_d,$/;"	f	typeref:typename:unsigned	file:
getTreeInflateFixed	src/lodepng.cpp	/^static void getTreeInflateFixed(HuffmanTree* tree_ll, HuffmanTree* tree_d)$/;"	f	typeref:typename:void	file:
getUniformAttribute	src/materials/material.cpp	/^GLint Material::getUniformAttribute(std::string uniformName)$/;"	f	class:Material	typeref:typename:GLint
getValueRequiredBits	src/lodepng.cpp	/^static unsigned getValueRequiredBits(unsigned char value)$/;"	f	typeref:typename:unsigned	file:
getViewMatrix	include/camera.h	/^        inline glm::mat4 getViewMatrix() const {return viewMatrix;}$/;"	f	class:Camera	typeref:typename:glm::mat4
get_facet	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER FTy const& get_facet(std::basic_ios<CTy,CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER FTy const &
get_proc	src/gl3w.c	/^static GL3WglProc get_proc(const char *proc)$/;"	f	typeref:typename:GL3WglProc	file:
gl3wActiveShaderProgram	src/gl3w.c	/^PFNGLACTIVESHADERPROGRAMPROC                         gl3wActiveShaderProgram;$/;"	v	typeref:typename:PFNGLACTIVESHADERPROGRAMPROC
gl3wActiveTexture	src/gl3w.c	/^PFNGLACTIVETEXTUREPROC                               gl3wActiveTexture;$/;"	v	typeref:typename:PFNGLACTIVETEXTUREPROC
gl3wAttachShader	src/gl3w.c	/^PFNGLATTACHSHADERPROC                                gl3wAttachShader;$/;"	v	typeref:typename:PFNGLATTACHSHADERPROC
gl3wBeginConditionalRender	src/gl3w.c	/^PFNGLBEGINCONDITIONALRENDERPROC                      gl3wBeginConditionalRender;$/;"	v	typeref:typename:PFNGLBEGINCONDITIONALRENDERPROC
gl3wBeginQuery	src/gl3w.c	/^PFNGLBEGINQUERYPROC                                  gl3wBeginQuery;$/;"	v	typeref:typename:PFNGLBEGINQUERYPROC
gl3wBeginQueryIndexed	src/gl3w.c	/^PFNGLBEGINQUERYINDEXEDPROC                           gl3wBeginQueryIndexed;$/;"	v	typeref:typename:PFNGLBEGINQUERYINDEXEDPROC
gl3wBeginTransformFeedback	src/gl3w.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC                      gl3wBeginTransformFeedback;$/;"	v	typeref:typename:PFNGLBEGINTRANSFORMFEEDBACKPROC
gl3wBindAttribLocation	src/gl3w.c	/^PFNGLBINDATTRIBLOCATIONPROC                          gl3wBindAttribLocation;$/;"	v	typeref:typename:PFNGLBINDATTRIBLOCATIONPROC
gl3wBindBuffer	src/gl3w.c	/^PFNGLBINDBUFFERPROC                                  gl3wBindBuffer;$/;"	v	typeref:typename:PFNGLBINDBUFFERPROC
gl3wBindBufferBase	src/gl3w.c	/^PFNGLBINDBUFFERBASEPROC                              gl3wBindBufferBase;$/;"	v	typeref:typename:PFNGLBINDBUFFERBASEPROC
gl3wBindBufferRange	src/gl3w.c	/^PFNGLBINDBUFFERRANGEPROC                             gl3wBindBufferRange;$/;"	v	typeref:typename:PFNGLBINDBUFFERRANGEPROC
gl3wBindBuffersBase	src/gl3w.c	/^PFNGLBINDBUFFERSBASEPROC                             gl3wBindBuffersBase;$/;"	v	typeref:typename:PFNGLBINDBUFFERSBASEPROC
gl3wBindBuffersRange	src/gl3w.c	/^PFNGLBINDBUFFERSRANGEPROC                            gl3wBindBuffersRange;$/;"	v	typeref:typename:PFNGLBINDBUFFERSRANGEPROC
gl3wBindFragDataLocation	src/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONPROC                        gl3wBindFragDataLocation;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONPROC
gl3wBindFragDataLocationIndexed	src/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC                 gl3wBindFragDataLocationIndexed;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
gl3wBindFramebuffer	src/gl3w.c	/^PFNGLBINDFRAMEBUFFERPROC                             gl3wBindFramebuffer;$/;"	v	typeref:typename:PFNGLBINDFRAMEBUFFERPROC
gl3wBindImageTexture	src/gl3w.c	/^PFNGLBINDIMAGETEXTUREPROC                            gl3wBindImageTexture;$/;"	v	typeref:typename:PFNGLBINDIMAGETEXTUREPROC
gl3wBindImageTextures	src/gl3w.c	/^PFNGLBINDIMAGETEXTURESPROC                           gl3wBindImageTextures;$/;"	v	typeref:typename:PFNGLBINDIMAGETEXTURESPROC
gl3wBindProgramPipeline	src/gl3w.c	/^PFNGLBINDPROGRAMPIPELINEPROC                         gl3wBindProgramPipeline;$/;"	v	typeref:typename:PFNGLBINDPROGRAMPIPELINEPROC
gl3wBindRenderbuffer	src/gl3w.c	/^PFNGLBINDRENDERBUFFERPROC                            gl3wBindRenderbuffer;$/;"	v	typeref:typename:PFNGLBINDRENDERBUFFERPROC
gl3wBindSampler	src/gl3w.c	/^PFNGLBINDSAMPLERPROC                                 gl3wBindSampler;$/;"	v	typeref:typename:PFNGLBINDSAMPLERPROC
gl3wBindSamplers	src/gl3w.c	/^PFNGLBINDSAMPLERSPROC                                gl3wBindSamplers;$/;"	v	typeref:typename:PFNGLBINDSAMPLERSPROC
gl3wBindTexture	src/gl3w.c	/^PFNGLBINDTEXTUREPROC                                 gl3wBindTexture;$/;"	v	typeref:typename:PFNGLBINDTEXTUREPROC
gl3wBindTextureUnit	src/gl3w.c	/^PFNGLBINDTEXTUREUNITPROC                             gl3wBindTextureUnit;$/;"	v	typeref:typename:PFNGLBINDTEXTUREUNITPROC
gl3wBindTextures	src/gl3w.c	/^PFNGLBINDTEXTURESPROC                                gl3wBindTextures;$/;"	v	typeref:typename:PFNGLBINDTEXTURESPROC
gl3wBindTransformFeedback	src/gl3w.c	/^PFNGLBINDTRANSFORMFEEDBACKPROC                       gl3wBindTransformFeedback;$/;"	v	typeref:typename:PFNGLBINDTRANSFORMFEEDBACKPROC
gl3wBindVertexArray	src/gl3w.c	/^PFNGLBINDVERTEXARRAYPROC                             gl3wBindVertexArray;$/;"	v	typeref:typename:PFNGLBINDVERTEXARRAYPROC
gl3wBindVertexBuffer	src/gl3w.c	/^PFNGLBINDVERTEXBUFFERPROC                            gl3wBindVertexBuffer;$/;"	v	typeref:typename:PFNGLBINDVERTEXBUFFERPROC
gl3wBindVertexBuffers	src/gl3w.c	/^PFNGLBINDVERTEXBUFFERSPROC                           gl3wBindVertexBuffers;$/;"	v	typeref:typename:PFNGLBINDVERTEXBUFFERSPROC
gl3wBlendColor	src/gl3w.c	/^PFNGLBLENDCOLORPROC                                  gl3wBlendColor;$/;"	v	typeref:typename:PFNGLBLENDCOLORPROC
gl3wBlendEquation	src/gl3w.c	/^PFNGLBLENDEQUATIONPROC                               gl3wBlendEquation;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONPROC
gl3wBlendEquationSeparate	src/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEPROC                       gl3wBlendEquationSeparate;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEPROC
gl3wBlendEquationSeparatei	src/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIPROC                      gl3wBlendEquationSeparatei;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEIPROC
gl3wBlendEquationSeparateiARB	src/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIARBPROC                   gl3wBlendEquationSeparateiARB;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEIARBPROC
gl3wBlendEquationi	src/gl3w.c	/^PFNGLBLENDEQUATIONIPROC                              gl3wBlendEquationi;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONIPROC
gl3wBlendEquationiARB	src/gl3w.c	/^PFNGLBLENDEQUATIONIARBPROC                           gl3wBlendEquationiARB;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONIARBPROC
gl3wBlendFunc	src/gl3w.c	/^PFNGLBLENDFUNCPROC                                   gl3wBlendFunc;$/;"	v	typeref:typename:PFNGLBLENDFUNCPROC
gl3wBlendFuncSeparate	src/gl3w.c	/^PFNGLBLENDFUNCSEPARATEPROC                           gl3wBlendFuncSeparate;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEPROC
gl3wBlendFuncSeparatei	src/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIPROC                          gl3wBlendFuncSeparatei;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEIPROC
gl3wBlendFuncSeparateiARB	src/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIARBPROC                       gl3wBlendFuncSeparateiARB;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEIARBPROC
gl3wBlendFunci	src/gl3w.c	/^PFNGLBLENDFUNCIPROC                                  gl3wBlendFunci;$/;"	v	typeref:typename:PFNGLBLENDFUNCIPROC
gl3wBlendFunciARB	src/gl3w.c	/^PFNGLBLENDFUNCIARBPROC                               gl3wBlendFunciARB;$/;"	v	typeref:typename:PFNGLBLENDFUNCIARBPROC
gl3wBlitFramebuffer	src/gl3w.c	/^PFNGLBLITFRAMEBUFFERPROC                             gl3wBlitFramebuffer;$/;"	v	typeref:typename:PFNGLBLITFRAMEBUFFERPROC
gl3wBlitNamedFramebuffer	src/gl3w.c	/^PFNGLBLITNAMEDFRAMEBUFFERPROC                        gl3wBlitNamedFramebuffer;$/;"	v	typeref:typename:PFNGLBLITNAMEDFRAMEBUFFERPROC
gl3wBufferData	src/gl3w.c	/^PFNGLBUFFERDATAPROC                                  gl3wBufferData;$/;"	v	typeref:typename:PFNGLBUFFERDATAPROC
gl3wBufferPageCommitmentARB	src/gl3w.c	/^PFNGLBUFFERPAGECOMMITMENTARBPROC                     gl3wBufferPageCommitmentARB;$/;"	v	typeref:typename:PFNGLBUFFERPAGECOMMITMENTARBPROC
gl3wBufferStorage	src/gl3w.c	/^PFNGLBUFFERSTORAGEPROC                               gl3wBufferStorage;$/;"	v	typeref:typename:PFNGLBUFFERSTORAGEPROC
gl3wBufferSubData	src/gl3w.c	/^PFNGLBUFFERSUBDATAPROC                               gl3wBufferSubData;$/;"	v	typeref:typename:PFNGLBUFFERSUBDATAPROC
gl3wCheckFramebufferStatus	src/gl3w.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC                      gl3wCheckFramebufferStatus;$/;"	v	typeref:typename:PFNGLCHECKFRAMEBUFFERSTATUSPROC
gl3wCheckNamedFramebufferStatus	src/gl3w.c	/^PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC                 gl3wCheckNamedFramebufferStatus;$/;"	v	typeref:typename:PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
gl3wClampColor	src/gl3w.c	/^PFNGLCLAMPCOLORPROC                                  gl3wClampColor;$/;"	v	typeref:typename:PFNGLCLAMPCOLORPROC
gl3wClear	src/gl3w.c	/^PFNGLCLEARPROC                                       gl3wClear;$/;"	v	typeref:typename:PFNGLCLEARPROC
gl3wClearBufferData	src/gl3w.c	/^PFNGLCLEARBUFFERDATAPROC                             gl3wClearBufferData;$/;"	v	typeref:typename:PFNGLCLEARBUFFERDATAPROC
gl3wClearBufferSubData	src/gl3w.c	/^PFNGLCLEARBUFFERSUBDATAPROC                          gl3wClearBufferSubData;$/;"	v	typeref:typename:PFNGLCLEARBUFFERSUBDATAPROC
gl3wClearBufferfi	src/gl3w.c	/^PFNGLCLEARBUFFERFIPROC                               gl3wClearBufferfi;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFIPROC
gl3wClearBufferfv	src/gl3w.c	/^PFNGLCLEARBUFFERFVPROC                               gl3wClearBufferfv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFVPROC
gl3wClearBufferiv	src/gl3w.c	/^PFNGLCLEARBUFFERIVPROC                               gl3wClearBufferiv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERIVPROC
gl3wClearBufferuiv	src/gl3w.c	/^PFNGLCLEARBUFFERUIVPROC                              gl3wClearBufferuiv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERUIVPROC
gl3wClearColor	src/gl3w.c	/^PFNGLCLEARCOLORPROC                                  gl3wClearColor;$/;"	v	typeref:typename:PFNGLCLEARCOLORPROC
gl3wClearDepth	src/gl3w.c	/^PFNGLCLEARDEPTHPROC                                  gl3wClearDepth;$/;"	v	typeref:typename:PFNGLCLEARDEPTHPROC
gl3wClearDepthf	src/gl3w.c	/^PFNGLCLEARDEPTHFPROC                                 gl3wClearDepthf;$/;"	v	typeref:typename:PFNGLCLEARDEPTHFPROC
gl3wClearNamedBufferData	src/gl3w.c	/^PFNGLCLEARNAMEDBUFFERDATAPROC                        gl3wClearNamedBufferData;$/;"	v	typeref:typename:PFNGLCLEARNAMEDBUFFERDATAPROC
gl3wClearNamedBufferSubData	src/gl3w.c	/^PFNGLCLEARNAMEDBUFFERSUBDATAPROC                     gl3wClearNamedBufferSubData;$/;"	v	typeref:typename:PFNGLCLEARNAMEDBUFFERSUBDATAPROC
gl3wClearNamedFramebufferfi	src/gl3w.c	/^PFNGLCLEARNAMEDFRAMEBUFFERFIPROC                     gl3wClearNamedFramebufferfi;$/;"	v	typeref:typename:PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
gl3wClearNamedFramebufferfv	src/gl3w.c	/^PFNGLCLEARNAMEDFRAMEBUFFERFVPROC                     gl3wClearNamedFramebufferfv;$/;"	v	typeref:typename:PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
gl3wClearNamedFramebufferiv	src/gl3w.c	/^PFNGLCLEARNAMEDFRAMEBUFFERIVPROC                     gl3wClearNamedFramebufferiv;$/;"	v	typeref:typename:PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
gl3wClearNamedFramebufferuiv	src/gl3w.c	/^PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC                    gl3wClearNamedFramebufferuiv;$/;"	v	typeref:typename:PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
gl3wClearStencil	src/gl3w.c	/^PFNGLCLEARSTENCILPROC                                gl3wClearStencil;$/;"	v	typeref:typename:PFNGLCLEARSTENCILPROC
gl3wClearTexImage	src/gl3w.c	/^PFNGLCLEARTEXIMAGEPROC                               gl3wClearTexImage;$/;"	v	typeref:typename:PFNGLCLEARTEXIMAGEPROC
gl3wClearTexSubImage	src/gl3w.c	/^PFNGLCLEARTEXSUBIMAGEPROC                            gl3wClearTexSubImage;$/;"	v	typeref:typename:PFNGLCLEARTEXSUBIMAGEPROC
gl3wClientWaitSync	src/gl3w.c	/^PFNGLCLIENTWAITSYNCPROC                              gl3wClientWaitSync;$/;"	v	typeref:typename:PFNGLCLIENTWAITSYNCPROC
gl3wClipControl	src/gl3w.c	/^PFNGLCLIPCONTROLPROC                                 gl3wClipControl;$/;"	v	typeref:typename:PFNGLCLIPCONTROLPROC
gl3wColorMask	src/gl3w.c	/^PFNGLCOLORMASKPROC                                   gl3wColorMask;$/;"	v	typeref:typename:PFNGLCOLORMASKPROC
gl3wColorMaski	src/gl3w.c	/^PFNGLCOLORMASKIPROC                                  gl3wColorMaski;$/;"	v	typeref:typename:PFNGLCOLORMASKIPROC
gl3wCompileShader	src/gl3w.c	/^PFNGLCOMPILESHADERPROC                               gl3wCompileShader;$/;"	v	typeref:typename:PFNGLCOMPILESHADERPROC
gl3wCompileShaderIncludeARB	src/gl3w.c	/^PFNGLCOMPILESHADERINCLUDEARBPROC                     gl3wCompileShaderIncludeARB;$/;"	v	typeref:typename:PFNGLCOMPILESHADERINCLUDEARBPROC
gl3wCompressedTexImage1D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC                        gl3wCompressedTexImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE1DPROC
gl3wCompressedTexImage2D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC                        gl3wCompressedTexImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE2DPROC
gl3wCompressedTexImage3D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC                        gl3wCompressedTexImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE3DPROC
gl3wCompressedTexSubImage1D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC                     gl3wCompressedTexSubImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
gl3wCompressedTexSubImage2D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC                     gl3wCompressedTexSubImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
gl3wCompressedTexSubImage3D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC                     gl3wCompressedTexSubImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
gl3wCompressedTextureSubImage1D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC                 gl3wCompressedTextureSubImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
gl3wCompressedTextureSubImage2D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC                 gl3wCompressedTextureSubImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
gl3wCompressedTextureSubImage3D	src/gl3w.c	/^PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC                 gl3wCompressedTextureSubImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
gl3wCopyBufferSubData	src/gl3w.c	/^PFNGLCOPYBUFFERSUBDATAPROC                           gl3wCopyBufferSubData;$/;"	v	typeref:typename:PFNGLCOPYBUFFERSUBDATAPROC
gl3wCopyImageSubData	src/gl3w.c	/^PFNGLCOPYIMAGESUBDATAPROC                            gl3wCopyImageSubData;$/;"	v	typeref:typename:PFNGLCOPYIMAGESUBDATAPROC
gl3wCopyNamedBufferSubData	src/gl3w.c	/^PFNGLCOPYNAMEDBUFFERSUBDATAPROC                      gl3wCopyNamedBufferSubData;$/;"	v	typeref:typename:PFNGLCOPYNAMEDBUFFERSUBDATAPROC
gl3wCopyTexImage1D	src/gl3w.c	/^PFNGLCOPYTEXIMAGE1DPROC                              gl3wCopyTexImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE1DPROC
gl3wCopyTexImage2D	src/gl3w.c	/^PFNGLCOPYTEXIMAGE2DPROC                              gl3wCopyTexImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE2DPROC
gl3wCopyTexSubImage1D	src/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC                           gl3wCopyTexSubImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE1DPROC
gl3wCopyTexSubImage2D	src/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC                           gl3wCopyTexSubImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE2DPROC
gl3wCopyTexSubImage3D	src/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC                           gl3wCopyTexSubImage3D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE3DPROC
gl3wCopyTextureSubImage1D	src/gl3w.c	/^PFNGLCOPYTEXTURESUBIMAGE1DPROC                       gl3wCopyTextureSubImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXTURESUBIMAGE1DPROC
gl3wCopyTextureSubImage2D	src/gl3w.c	/^PFNGLCOPYTEXTURESUBIMAGE2DPROC                       gl3wCopyTextureSubImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXTURESUBIMAGE2DPROC
gl3wCopyTextureSubImage3D	src/gl3w.c	/^PFNGLCOPYTEXTURESUBIMAGE3DPROC                       gl3wCopyTextureSubImage3D;$/;"	v	typeref:typename:PFNGLCOPYTEXTURESUBIMAGE3DPROC
gl3wCreateBuffers	src/gl3w.c	/^PFNGLCREATEBUFFERSPROC                               gl3wCreateBuffers;$/;"	v	typeref:typename:PFNGLCREATEBUFFERSPROC
gl3wCreateFramebuffers	src/gl3w.c	/^PFNGLCREATEFRAMEBUFFERSPROC                          gl3wCreateFramebuffers;$/;"	v	typeref:typename:PFNGLCREATEFRAMEBUFFERSPROC
gl3wCreateProgram	src/gl3w.c	/^PFNGLCREATEPROGRAMPROC                               gl3wCreateProgram;$/;"	v	typeref:typename:PFNGLCREATEPROGRAMPROC
gl3wCreateProgramPipelines	src/gl3w.c	/^PFNGLCREATEPROGRAMPIPELINESPROC                      gl3wCreateProgramPipelines;$/;"	v	typeref:typename:PFNGLCREATEPROGRAMPIPELINESPROC
gl3wCreateQueries	src/gl3w.c	/^PFNGLCREATEQUERIESPROC                               gl3wCreateQueries;$/;"	v	typeref:typename:PFNGLCREATEQUERIESPROC
gl3wCreateRenderbuffers	src/gl3w.c	/^PFNGLCREATERENDERBUFFERSPROC                         gl3wCreateRenderbuffers;$/;"	v	typeref:typename:PFNGLCREATERENDERBUFFERSPROC
gl3wCreateSamplers	src/gl3w.c	/^PFNGLCREATESAMPLERSPROC                              gl3wCreateSamplers;$/;"	v	typeref:typename:PFNGLCREATESAMPLERSPROC
gl3wCreateShader	src/gl3w.c	/^PFNGLCREATESHADERPROC                                gl3wCreateShader;$/;"	v	typeref:typename:PFNGLCREATESHADERPROC
gl3wCreateShaderProgramv	src/gl3w.c	/^PFNGLCREATESHADERPROGRAMVPROC                        gl3wCreateShaderProgramv;$/;"	v	typeref:typename:PFNGLCREATESHADERPROGRAMVPROC
gl3wCreateSyncFromCLeventARB	src/gl3w.c	/^PFNGLCREATESYNCFROMCLEVENTARBPROC                    gl3wCreateSyncFromCLeventARB;$/;"	v	typeref:typename:PFNGLCREATESYNCFROMCLEVENTARBPROC
gl3wCreateTextures	src/gl3w.c	/^PFNGLCREATETEXTURESPROC                              gl3wCreateTextures;$/;"	v	typeref:typename:PFNGLCREATETEXTURESPROC
gl3wCreateTransformFeedbacks	src/gl3w.c	/^PFNGLCREATETRANSFORMFEEDBACKSPROC                    gl3wCreateTransformFeedbacks;$/;"	v	typeref:typename:PFNGLCREATETRANSFORMFEEDBACKSPROC
gl3wCreateVertexArrays	src/gl3w.c	/^PFNGLCREATEVERTEXARRAYSPROC                          gl3wCreateVertexArrays;$/;"	v	typeref:typename:PFNGLCREATEVERTEXARRAYSPROC
gl3wCullFace	src/gl3w.c	/^PFNGLCULLFACEPROC                                    gl3wCullFace;$/;"	v	typeref:typename:PFNGLCULLFACEPROC
gl3wDebugMessageCallback	src/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKPROC                        gl3wDebugMessageCallback;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKPROC
gl3wDebugMessageCallbackARB	src/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKARBPROC                     gl3wDebugMessageCallbackARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKARBPROC
gl3wDebugMessageControl	src/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLPROC                         gl3wDebugMessageControl;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLPROC
gl3wDebugMessageControlARB	src/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLARBPROC                      gl3wDebugMessageControlARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLARBPROC
gl3wDebugMessageInsert	src/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTPROC                          gl3wDebugMessageInsert;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTPROC
gl3wDebugMessageInsertARB	src/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTARBPROC                       gl3wDebugMessageInsertARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTARBPROC
gl3wDeleteBuffers	src/gl3w.c	/^PFNGLDELETEBUFFERSPROC                               gl3wDeleteBuffers;$/;"	v	typeref:typename:PFNGLDELETEBUFFERSPROC
gl3wDeleteFramebuffers	src/gl3w.c	/^PFNGLDELETEFRAMEBUFFERSPROC                          gl3wDeleteFramebuffers;$/;"	v	typeref:typename:PFNGLDELETEFRAMEBUFFERSPROC
gl3wDeleteNamedStringARB	src/gl3w.c	/^PFNGLDELETENAMEDSTRINGARBPROC                        gl3wDeleteNamedStringARB;$/;"	v	typeref:typename:PFNGLDELETENAMEDSTRINGARBPROC
gl3wDeleteProgram	src/gl3w.c	/^PFNGLDELETEPROGRAMPROC                               gl3wDeleteProgram;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPROC
gl3wDeleteProgramPipelines	src/gl3w.c	/^PFNGLDELETEPROGRAMPIPELINESPROC                      gl3wDeleteProgramPipelines;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPIPELINESPROC
gl3wDeleteQueries	src/gl3w.c	/^PFNGLDELETEQUERIESPROC                               gl3wDeleteQueries;$/;"	v	typeref:typename:PFNGLDELETEQUERIESPROC
gl3wDeleteRenderbuffers	src/gl3w.c	/^PFNGLDELETERENDERBUFFERSPROC                         gl3wDeleteRenderbuffers;$/;"	v	typeref:typename:PFNGLDELETERENDERBUFFERSPROC
gl3wDeleteSamplers	src/gl3w.c	/^PFNGLDELETESAMPLERSPROC                              gl3wDeleteSamplers;$/;"	v	typeref:typename:PFNGLDELETESAMPLERSPROC
gl3wDeleteShader	src/gl3w.c	/^PFNGLDELETESHADERPROC                                gl3wDeleteShader;$/;"	v	typeref:typename:PFNGLDELETESHADERPROC
gl3wDeleteSync	src/gl3w.c	/^PFNGLDELETESYNCPROC                                  gl3wDeleteSync;$/;"	v	typeref:typename:PFNGLDELETESYNCPROC
gl3wDeleteTextures	src/gl3w.c	/^PFNGLDELETETEXTURESPROC                              gl3wDeleteTextures;$/;"	v	typeref:typename:PFNGLDELETETEXTURESPROC
gl3wDeleteTransformFeedbacks	src/gl3w.c	/^PFNGLDELETETRANSFORMFEEDBACKSPROC                    gl3wDeleteTransformFeedbacks;$/;"	v	typeref:typename:PFNGLDELETETRANSFORMFEEDBACKSPROC
gl3wDeleteVertexArrays	src/gl3w.c	/^PFNGLDELETEVERTEXARRAYSPROC                          gl3wDeleteVertexArrays;$/;"	v	typeref:typename:PFNGLDELETEVERTEXARRAYSPROC
gl3wDepthFunc	src/gl3w.c	/^PFNGLDEPTHFUNCPROC                                   gl3wDepthFunc;$/;"	v	typeref:typename:PFNGLDEPTHFUNCPROC
gl3wDepthMask	src/gl3w.c	/^PFNGLDEPTHMASKPROC                                   gl3wDepthMask;$/;"	v	typeref:typename:PFNGLDEPTHMASKPROC
gl3wDepthRange	src/gl3w.c	/^PFNGLDEPTHRANGEPROC                                  gl3wDepthRange;$/;"	v	typeref:typename:PFNGLDEPTHRANGEPROC
gl3wDepthRangeArrayv	src/gl3w.c	/^PFNGLDEPTHRANGEARRAYVPROC                            gl3wDepthRangeArrayv;$/;"	v	typeref:typename:PFNGLDEPTHRANGEARRAYVPROC
gl3wDepthRangeIndexed	src/gl3w.c	/^PFNGLDEPTHRANGEINDEXEDPROC                           gl3wDepthRangeIndexed;$/;"	v	typeref:typename:PFNGLDEPTHRANGEINDEXEDPROC
gl3wDepthRangef	src/gl3w.c	/^PFNGLDEPTHRANGEFPROC                                 gl3wDepthRangef;$/;"	v	typeref:typename:PFNGLDEPTHRANGEFPROC
gl3wDetachShader	src/gl3w.c	/^PFNGLDETACHSHADERPROC                                gl3wDetachShader;$/;"	v	typeref:typename:PFNGLDETACHSHADERPROC
gl3wDisable	src/gl3w.c	/^PFNGLDISABLEPROC                                     gl3wDisable;$/;"	v	typeref:typename:PFNGLDISABLEPROC
gl3wDisableVertexArrayAttrib	src/gl3w.c	/^PFNGLDISABLEVERTEXARRAYATTRIBPROC                    gl3wDisableVertexArrayAttrib;$/;"	v	typeref:typename:PFNGLDISABLEVERTEXARRAYATTRIBPROC
gl3wDisableVertexAttribArray	src/gl3w.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC                    gl3wDisableVertexAttribArray;$/;"	v	typeref:typename:PFNGLDISABLEVERTEXATTRIBARRAYPROC
gl3wDisablei	src/gl3w.c	/^PFNGLDISABLEIPROC                                    gl3wDisablei;$/;"	v	typeref:typename:PFNGLDISABLEIPROC
gl3wDispatchCompute	src/gl3w.c	/^PFNGLDISPATCHCOMPUTEPROC                             gl3wDispatchCompute;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEPROC
gl3wDispatchComputeGroupSizeARB	src/gl3w.c	/^PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC                 gl3wDispatchComputeGroupSizeARB;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
gl3wDispatchComputeIndirect	src/gl3w.c	/^PFNGLDISPATCHCOMPUTEINDIRECTPROC                     gl3wDispatchComputeIndirect;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEINDIRECTPROC
gl3wDrawArrays	src/gl3w.c	/^PFNGLDRAWARRAYSPROC                                  gl3wDrawArrays;$/;"	v	typeref:typename:PFNGLDRAWARRAYSPROC
gl3wDrawArraysIndirect	src/gl3w.c	/^PFNGLDRAWARRAYSINDIRECTPROC                          gl3wDrawArraysIndirect;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINDIRECTPROC
gl3wDrawArraysInstanced	src/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDPROC                         gl3wDrawArraysInstanced;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDPROC
gl3wDrawArraysInstancedBaseInstance	src/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC             gl3wDrawArraysInstancedBaseInstance;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
gl3wDrawBuffer	src/gl3w.c	/^PFNGLDRAWBUFFERPROC                                  gl3wDrawBuffer;$/;"	v	typeref:typename:PFNGLDRAWBUFFERPROC
gl3wDrawBuffers	src/gl3w.c	/^PFNGLDRAWBUFFERSPROC                                 gl3wDrawBuffers;$/;"	v	typeref:typename:PFNGLDRAWBUFFERSPROC
gl3wDrawElements	src/gl3w.c	/^PFNGLDRAWELEMENTSPROC                                gl3wDrawElements;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSPROC
gl3wDrawElementsBaseVertex	src/gl3w.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC                      gl3wDrawElementsBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSBASEVERTEXPROC
gl3wDrawElementsIndirect	src/gl3w.c	/^PFNGLDRAWELEMENTSINDIRECTPROC                        gl3wDrawElementsIndirect;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINDIRECTPROC
gl3wDrawElementsInstanced	src/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC                       gl3wDrawElementsInstanced;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDPROC
gl3wDrawElementsInstancedBaseInstance	src/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC           gl3wDrawElementsInstancedBaseInstance;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
gl3wDrawElementsInstancedBaseVertex	src/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC             gl3wDrawElementsInstancedBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
gl3wDrawElementsInstancedBaseVertexBaseInstance	src/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInst/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
gl3wDrawRangeElements	src/gl3w.c	/^PFNGLDRAWRANGEELEMENTSPROC                           gl3wDrawRangeElements;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSPROC
gl3wDrawRangeElementsBaseVertex	src/gl3w.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC                 gl3wDrawRangeElementsBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
gl3wDrawTransformFeedback	src/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKPROC                       gl3wDrawTransformFeedback;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKPROC
gl3wDrawTransformFeedbackInstanced	src/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC              gl3wDrawTransformFeedbackInstanced;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
gl3wDrawTransformFeedbackStream	src/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC                 gl3wDrawTransformFeedbackStream;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
gl3wDrawTransformFeedbackStreamInstanced	src/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC        gl3wDrawTransformFeedbackStreamInstanced;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
gl3wEnable	src/gl3w.c	/^PFNGLENABLEPROC                                      gl3wEnable;$/;"	v	typeref:typename:PFNGLENABLEPROC
gl3wEnableVertexArrayAttrib	src/gl3w.c	/^PFNGLENABLEVERTEXARRAYATTRIBPROC                     gl3wEnableVertexArrayAttrib;$/;"	v	typeref:typename:PFNGLENABLEVERTEXARRAYATTRIBPROC
gl3wEnableVertexAttribArray	src/gl3w.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC                     gl3wEnableVertexAttribArray;$/;"	v	typeref:typename:PFNGLENABLEVERTEXATTRIBARRAYPROC
gl3wEnablei	src/gl3w.c	/^PFNGLENABLEIPROC                                     gl3wEnablei;$/;"	v	typeref:typename:PFNGLENABLEIPROC
gl3wEndConditionalRender	src/gl3w.c	/^PFNGLENDCONDITIONALRENDERPROC                        gl3wEndConditionalRender;$/;"	v	typeref:typename:PFNGLENDCONDITIONALRENDERPROC
gl3wEndQuery	src/gl3w.c	/^PFNGLENDQUERYPROC                                    gl3wEndQuery;$/;"	v	typeref:typename:PFNGLENDQUERYPROC
gl3wEndQueryIndexed	src/gl3w.c	/^PFNGLENDQUERYINDEXEDPROC                             gl3wEndQueryIndexed;$/;"	v	typeref:typename:PFNGLENDQUERYINDEXEDPROC
gl3wEndTransformFeedback	src/gl3w.c	/^PFNGLENDTRANSFORMFEEDBACKPROC                        gl3wEndTransformFeedback;$/;"	v	typeref:typename:PFNGLENDTRANSFORMFEEDBACKPROC
gl3wFenceSync	src/gl3w.c	/^PFNGLFENCESYNCPROC                                   gl3wFenceSync;$/;"	v	typeref:typename:PFNGLFENCESYNCPROC
gl3wFinish	src/gl3w.c	/^PFNGLFINISHPROC                                      gl3wFinish;$/;"	v	typeref:typename:PFNGLFINISHPROC
gl3wFlush	src/gl3w.c	/^PFNGLFLUSHPROC                                       gl3wFlush;$/;"	v	typeref:typename:PFNGLFLUSHPROC
gl3wFlushMappedBufferRange	src/gl3w.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC                      gl3wFlushMappedBufferRange;$/;"	v	typeref:typename:PFNGLFLUSHMAPPEDBUFFERRANGEPROC
gl3wFlushMappedNamedBufferRange	src/gl3w.c	/^PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC                 gl3wFlushMappedNamedBufferRange;$/;"	v	typeref:typename:PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
gl3wFramebufferParameteri	src/gl3w.c	/^PFNGLFRAMEBUFFERPARAMETERIPROC                       gl3wFramebufferParameteri;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERPARAMETERIPROC
gl3wFramebufferRenderbuffer	src/gl3w.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC                     gl3wFramebufferRenderbuffer;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERRENDERBUFFERPROC
gl3wFramebufferTexture	src/gl3w.c	/^PFNGLFRAMEBUFFERTEXTUREPROC                          gl3wFramebufferTexture;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTUREPROC
gl3wFramebufferTexture1D	src/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC                        gl3wFramebufferTexture1D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE1DPROC
gl3wFramebufferTexture2D	src/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC                        gl3wFramebufferTexture2D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE2DPROC
gl3wFramebufferTexture3D	src/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC                        gl3wFramebufferTexture3D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE3DPROC
gl3wFramebufferTextureLayer	src/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC                     gl3wFramebufferTextureLayer;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURELAYERPROC
gl3wFrontFace	src/gl3w.c	/^PFNGLFRONTFACEPROC                                   gl3wFrontFace;$/;"	v	typeref:typename:PFNGLFRONTFACEPROC
gl3wGenBuffers	src/gl3w.c	/^PFNGLGENBUFFERSPROC                                  gl3wGenBuffers;$/;"	v	typeref:typename:PFNGLGENBUFFERSPROC
gl3wGenFramebuffers	src/gl3w.c	/^PFNGLGENFRAMEBUFFERSPROC                             gl3wGenFramebuffers;$/;"	v	typeref:typename:PFNGLGENFRAMEBUFFERSPROC
gl3wGenProgramPipelines	src/gl3w.c	/^PFNGLGENPROGRAMPIPELINESPROC                         gl3wGenProgramPipelines;$/;"	v	typeref:typename:PFNGLGENPROGRAMPIPELINESPROC
gl3wGenQueries	src/gl3w.c	/^PFNGLGENQUERIESPROC                                  gl3wGenQueries;$/;"	v	typeref:typename:PFNGLGENQUERIESPROC
gl3wGenRenderbuffers	src/gl3w.c	/^PFNGLGENRENDERBUFFERSPROC                            gl3wGenRenderbuffers;$/;"	v	typeref:typename:PFNGLGENRENDERBUFFERSPROC
gl3wGenSamplers	src/gl3w.c	/^PFNGLGENSAMPLERSPROC                                 gl3wGenSamplers;$/;"	v	typeref:typename:PFNGLGENSAMPLERSPROC
gl3wGenTextures	src/gl3w.c	/^PFNGLGENTEXTURESPROC                                 gl3wGenTextures;$/;"	v	typeref:typename:PFNGLGENTEXTURESPROC
gl3wGenTransformFeedbacks	src/gl3w.c	/^PFNGLGENTRANSFORMFEEDBACKSPROC                       gl3wGenTransformFeedbacks;$/;"	v	typeref:typename:PFNGLGENTRANSFORMFEEDBACKSPROC
gl3wGenVertexArrays	src/gl3w.c	/^PFNGLGENVERTEXARRAYSPROC                             gl3wGenVertexArrays;$/;"	v	typeref:typename:PFNGLGENVERTEXARRAYSPROC
gl3wGenerateMipmap	src/gl3w.c	/^PFNGLGENERATEMIPMAPPROC                              gl3wGenerateMipmap;$/;"	v	typeref:typename:PFNGLGENERATEMIPMAPPROC
gl3wGenerateTextureMipmap	src/gl3w.c	/^PFNGLGENERATETEXTUREMIPMAPPROC                       gl3wGenerateTextureMipmap;$/;"	v	typeref:typename:PFNGLGENERATETEXTUREMIPMAPPROC
gl3wGetActiveAtomicCounterBufferiv	src/gl3w.c	/^PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC              gl3wGetActiveAtomicCounterBufferiv;$/;"	v	typeref:typename:PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
gl3wGetActiveAttrib	src/gl3w.c	/^PFNGLGETACTIVEATTRIBPROC                             gl3wGetActiveAttrib;$/;"	v	typeref:typename:PFNGLGETACTIVEATTRIBPROC
gl3wGetActiveSubroutineName	src/gl3w.c	/^PFNGLGETACTIVESUBROUTINENAMEPROC                     gl3wGetActiveSubroutineName;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINENAMEPROC
gl3wGetActiveSubroutineUniformName	src/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC              gl3wGetActiveSubroutineUniformName;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
gl3wGetActiveSubroutineUniformiv	src/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC                gl3wGetActiveSubroutineUniformiv;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
gl3wGetActiveUniform	src/gl3w.c	/^PFNGLGETACTIVEUNIFORMPROC                            gl3wGetActiveUniform;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMPROC
gl3wGetActiveUniformBlockName	src/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC                   gl3wGetActiveUniformBlockName;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
gl3wGetActiveUniformBlockiv	src/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC                     gl3wGetActiveUniformBlockiv;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKIVPROC
gl3wGetActiveUniformName	src/gl3w.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC                        gl3wGetActiveUniformName;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMNAMEPROC
gl3wGetActiveUniformsiv	src/gl3w.c	/^PFNGLGETACTIVEUNIFORMSIVPROC                         gl3wGetActiveUniformsiv;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMSIVPROC
gl3wGetAttachedShaders	src/gl3w.c	/^PFNGLGETATTACHEDSHADERSPROC                          gl3wGetAttachedShaders;$/;"	v	typeref:typename:PFNGLGETATTACHEDSHADERSPROC
gl3wGetAttribLocation	src/gl3w.c	/^PFNGLGETATTRIBLOCATIONPROC                           gl3wGetAttribLocation;$/;"	v	typeref:typename:PFNGLGETATTRIBLOCATIONPROC
gl3wGetBooleani_v	src/gl3w.c	/^PFNGLGETBOOLEANI_VPROC                               gl3wGetBooleani_v;$/;"	v	typeref:typename:PFNGLGETBOOLEANI_VPROC
gl3wGetBooleanv	src/gl3w.c	/^PFNGLGETBOOLEANVPROC                                 gl3wGetBooleanv;$/;"	v	typeref:typename:PFNGLGETBOOLEANVPROC
gl3wGetBufferParameteri64v	src/gl3w.c	/^PFNGLGETBUFFERPARAMETERI64VPROC                      gl3wGetBufferParameteri64v;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERI64VPROC
gl3wGetBufferParameteriv	src/gl3w.c	/^PFNGLGETBUFFERPARAMETERIVPROC                        gl3wGetBufferParameteriv;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERIVPROC
gl3wGetBufferPointerv	src/gl3w.c	/^PFNGLGETBUFFERPOINTERVPROC                           gl3wGetBufferPointerv;$/;"	v	typeref:typename:PFNGLGETBUFFERPOINTERVPROC
gl3wGetBufferSubData	src/gl3w.c	/^PFNGLGETBUFFERSUBDATAPROC                            gl3wGetBufferSubData;$/;"	v	typeref:typename:PFNGLGETBUFFERSUBDATAPROC
gl3wGetCompressedTexImage	src/gl3w.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC                       gl3wGetCompressedTexImage;$/;"	v	typeref:typename:PFNGLGETCOMPRESSEDTEXIMAGEPROC
gl3wGetCompressedTextureImage	src/gl3w.c	/^PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC                   gl3wGetCompressedTextureImage;$/;"	v	typeref:typename:PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
gl3wGetCompressedTextureSubImage	src/gl3w.c	/^PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC                gl3wGetCompressedTextureSubImage;$/;"	v	typeref:typename:PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
gl3wGetDebugMessageLog	src/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGPROC                          gl3wGetDebugMessageLog;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGPROC
gl3wGetDebugMessageLogARB	src/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGARBPROC                       gl3wGetDebugMessageLogARB;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGARBPROC
gl3wGetDoublei_v	src/gl3w.c	/^PFNGLGETDOUBLEI_VPROC                                gl3wGetDoublei_v;$/;"	v	typeref:typename:PFNGLGETDOUBLEI_VPROC
gl3wGetDoublev	src/gl3w.c	/^PFNGLGETDOUBLEVPROC                                  gl3wGetDoublev;$/;"	v	typeref:typename:PFNGLGETDOUBLEVPROC
gl3wGetError	src/gl3w.c	/^PFNGLGETERRORPROC                                    gl3wGetError;$/;"	v	typeref:typename:PFNGLGETERRORPROC
gl3wGetFloati_v	src/gl3w.c	/^PFNGLGETFLOATI_VPROC                                 gl3wGetFloati_v;$/;"	v	typeref:typename:PFNGLGETFLOATI_VPROC
gl3wGetFloatv	src/gl3w.c	/^PFNGLGETFLOATVPROC                                   gl3wGetFloatv;$/;"	v	typeref:typename:PFNGLGETFLOATVPROC
gl3wGetFragDataIndex	src/gl3w.c	/^PFNGLGETFRAGDATAINDEXPROC                            gl3wGetFragDataIndex;$/;"	v	typeref:typename:PFNGLGETFRAGDATAINDEXPROC
gl3wGetFragDataLocation	src/gl3w.c	/^PFNGLGETFRAGDATALOCATIONPROC                         gl3wGetFragDataLocation;$/;"	v	typeref:typename:PFNGLGETFRAGDATALOCATIONPROC
gl3wGetFramebufferAttachmentParameteriv	src/gl3w.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC         gl3wGetFramebufferAttachmentParameteriv;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
gl3wGetFramebufferParameteriv	src/gl3w.c	/^PFNGLGETFRAMEBUFFERPARAMETERIVPROC                   gl3wGetFramebufferParameteriv;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERPARAMETERIVPROC
gl3wGetGraphicsResetStatus	src/gl3w.c	/^PFNGLGETGRAPHICSRESETSTATUSPROC                      gl3wGetGraphicsResetStatus;$/;"	v	typeref:typename:PFNGLGETGRAPHICSRESETSTATUSPROC
gl3wGetGraphicsResetStatusARB	src/gl3w.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC                   gl3wGetGraphicsResetStatusARB;$/;"	v	typeref:typename:PFNGLGETGRAPHICSRESETSTATUSARBPROC
gl3wGetImageHandleARB	src/gl3w.c	/^PFNGLGETIMAGEHANDLEARBPROC                           gl3wGetImageHandleARB;$/;"	v	typeref:typename:PFNGLGETIMAGEHANDLEARBPROC
gl3wGetInteger64i_v	src/gl3w.c	/^PFNGLGETINTEGER64I_VPROC                             gl3wGetInteger64i_v;$/;"	v	typeref:typename:PFNGLGETINTEGER64I_VPROC
gl3wGetInteger64v	src/gl3w.c	/^PFNGLGETINTEGER64VPROC                               gl3wGetInteger64v;$/;"	v	typeref:typename:PFNGLGETINTEGER64VPROC
gl3wGetIntegeri_v	src/gl3w.c	/^PFNGLGETINTEGERI_VPROC                               gl3wGetIntegeri_v;$/;"	v	typeref:typename:PFNGLGETINTEGERI_VPROC
gl3wGetIntegerv	src/gl3w.c	/^PFNGLGETINTEGERVPROC                                 gl3wGetIntegerv;$/;"	v	typeref:typename:PFNGLGETINTEGERVPROC
gl3wGetInternalformati64v	src/gl3w.c	/^PFNGLGETINTERNALFORMATI64VPROC                       gl3wGetInternalformati64v;$/;"	v	typeref:typename:PFNGLGETINTERNALFORMATI64VPROC
gl3wGetInternalformativ	src/gl3w.c	/^PFNGLGETINTERNALFORMATIVPROC                         gl3wGetInternalformativ;$/;"	v	typeref:typename:PFNGLGETINTERNALFORMATIVPROC
gl3wGetMultisamplefv	src/gl3w.c	/^PFNGLGETMULTISAMPLEFVPROC                            gl3wGetMultisamplefv;$/;"	v	typeref:typename:PFNGLGETMULTISAMPLEFVPROC
gl3wGetNamedBufferParameteri64v	src/gl3w.c	/^PFNGLGETNAMEDBUFFERPARAMETERI64VPROC                 gl3wGetNamedBufferParameteri64v;$/;"	v	typeref:typename:PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
gl3wGetNamedBufferParameteriv	src/gl3w.c	/^PFNGLGETNAMEDBUFFERPARAMETERIVPROC                   gl3wGetNamedBufferParameteriv;$/;"	v	typeref:typename:PFNGLGETNAMEDBUFFERPARAMETERIVPROC
gl3wGetNamedBufferPointerv	src/gl3w.c	/^PFNGLGETNAMEDBUFFERPOINTERVPROC                      gl3wGetNamedBufferPointerv;$/;"	v	typeref:typename:PFNGLGETNAMEDBUFFERPOINTERVPROC
gl3wGetNamedBufferSubData	src/gl3w.c	/^PFNGLGETNAMEDBUFFERSUBDATAPROC                       gl3wGetNamedBufferSubData;$/;"	v	typeref:typename:PFNGLGETNAMEDBUFFERSUBDATAPROC
gl3wGetNamedFramebufferAttachmentParameteriv	src/gl3w.c	/^PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC    gl3wGetNamedFramebufferAttachmentParameteri/;"	v	typeref:typename:PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
gl3wGetNamedFramebufferParameteriv	src/gl3w.c	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC              gl3wGetNamedFramebufferParameteriv;$/;"	v	typeref:typename:PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
gl3wGetNamedRenderbufferParameteriv	src/gl3w.c	/^PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC             gl3wGetNamedRenderbufferParameteriv;$/;"	v	typeref:typename:PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
gl3wGetNamedStringARB	src/gl3w.c	/^PFNGLGETNAMEDSTRINGARBPROC                           gl3wGetNamedStringARB;$/;"	v	typeref:typename:PFNGLGETNAMEDSTRINGARBPROC
gl3wGetNamedStringivARB	src/gl3w.c	/^PFNGLGETNAMEDSTRINGIVARBPROC                         gl3wGetNamedStringivARB;$/;"	v	typeref:typename:PFNGLGETNAMEDSTRINGIVARBPROC
gl3wGetObjectLabel	src/gl3w.c	/^PFNGLGETOBJECTLABELPROC                              gl3wGetObjectLabel;$/;"	v	typeref:typename:PFNGLGETOBJECTLABELPROC
gl3wGetObjectPtrLabel	src/gl3w.c	/^PFNGLGETOBJECTPTRLABELPROC                           gl3wGetObjectPtrLabel;$/;"	v	typeref:typename:PFNGLGETOBJECTPTRLABELPROC
gl3wGetPointerv	src/gl3w.c	/^PFNGLGETPOINTERVPROC                                 gl3wGetPointerv;$/;"	v	typeref:typename:PFNGLGETPOINTERVPROC
gl3wGetProcAddress	src/gl3w.c	/^GL3WglProc gl3wGetProcAddress(const char *proc)$/;"	f	typeref:typename:GL3WglProc
gl3wGetProgramBinary	src/gl3w.c	/^PFNGLGETPROGRAMBINARYPROC                            gl3wGetProgramBinary;$/;"	v	typeref:typename:PFNGLGETPROGRAMBINARYPROC
gl3wGetProgramInfoLog	src/gl3w.c	/^PFNGLGETPROGRAMINFOLOGPROC                           gl3wGetProgramInfoLog;$/;"	v	typeref:typename:PFNGLGETPROGRAMINFOLOGPROC
gl3wGetProgramInterfaceiv	src/gl3w.c	/^PFNGLGETPROGRAMINTERFACEIVPROC                       gl3wGetProgramInterfaceiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMINTERFACEIVPROC
gl3wGetProgramPipelineInfoLog	src/gl3w.c	/^PFNGLGETPROGRAMPIPELINEINFOLOGPROC                   gl3wGetProgramPipelineInfoLog;$/;"	v	typeref:typename:PFNGLGETPROGRAMPIPELINEINFOLOGPROC
gl3wGetProgramPipelineiv	src/gl3w.c	/^PFNGLGETPROGRAMPIPELINEIVPROC                        gl3wGetProgramPipelineiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMPIPELINEIVPROC
gl3wGetProgramResourceIndex	src/gl3w.c	/^PFNGLGETPROGRAMRESOURCEINDEXPROC                     gl3wGetProgramResourceIndex;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCEINDEXPROC
gl3wGetProgramResourceLocation	src/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONPROC                  gl3wGetProgramResourceLocation;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCELOCATIONPROC
gl3wGetProgramResourceLocationIndex	src/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC             gl3wGetProgramResourceLocationIndex;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
gl3wGetProgramResourceName	src/gl3w.c	/^PFNGLGETPROGRAMRESOURCENAMEPROC                      gl3wGetProgramResourceName;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCENAMEPROC
gl3wGetProgramResourceiv	src/gl3w.c	/^PFNGLGETPROGRAMRESOURCEIVPROC                        gl3wGetProgramResourceiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCEIVPROC
gl3wGetProgramStageiv	src/gl3w.c	/^PFNGLGETPROGRAMSTAGEIVPROC                           gl3wGetProgramStageiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMSTAGEIVPROC
gl3wGetProgramiv	src/gl3w.c	/^PFNGLGETPROGRAMIVPROC                                gl3wGetProgramiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMIVPROC
gl3wGetQueryBufferObjecti64v	src/gl3w.c	/^PFNGLGETQUERYBUFFEROBJECTI64VPROC                    gl3wGetQueryBufferObjecti64v;$/;"	v	typeref:typename:PFNGLGETQUERYBUFFEROBJECTI64VPROC
gl3wGetQueryBufferObjectiv	src/gl3w.c	/^PFNGLGETQUERYBUFFEROBJECTIVPROC                      gl3wGetQueryBufferObjectiv;$/;"	v	typeref:typename:PFNGLGETQUERYBUFFEROBJECTIVPROC
gl3wGetQueryBufferObjectui64v	src/gl3w.c	/^PFNGLGETQUERYBUFFEROBJECTUI64VPROC                   gl3wGetQueryBufferObjectui64v;$/;"	v	typeref:typename:PFNGLGETQUERYBUFFEROBJECTUI64VPROC
gl3wGetQueryBufferObjectuiv	src/gl3w.c	/^PFNGLGETQUERYBUFFEROBJECTUIVPROC                     gl3wGetQueryBufferObjectuiv;$/;"	v	typeref:typename:PFNGLGETQUERYBUFFEROBJECTUIVPROC
gl3wGetQueryIndexediv	src/gl3w.c	/^PFNGLGETQUERYINDEXEDIVPROC                           gl3wGetQueryIndexediv;$/;"	v	typeref:typename:PFNGLGETQUERYINDEXEDIVPROC
gl3wGetQueryObjecti64v	src/gl3w.c	/^PFNGLGETQUERYOBJECTI64VPROC                          gl3wGetQueryObjecti64v;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTI64VPROC
gl3wGetQueryObjectiv	src/gl3w.c	/^PFNGLGETQUERYOBJECTIVPROC                            gl3wGetQueryObjectiv;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTIVPROC
gl3wGetQueryObjectui64v	src/gl3w.c	/^PFNGLGETQUERYOBJECTUI64VPROC                         gl3wGetQueryObjectui64v;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUI64VPROC
gl3wGetQueryObjectuiv	src/gl3w.c	/^PFNGLGETQUERYOBJECTUIVPROC                           gl3wGetQueryObjectuiv;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUIVPROC
gl3wGetQueryiv	src/gl3w.c	/^PFNGLGETQUERYIVPROC                                  gl3wGetQueryiv;$/;"	v	typeref:typename:PFNGLGETQUERYIVPROC
gl3wGetRenderbufferParameteriv	src/gl3w.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC                  gl3wGetRenderbufferParameteriv;$/;"	v	typeref:typename:PFNGLGETRENDERBUFFERPARAMETERIVPROC
gl3wGetSamplerParameterIiv	src/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIIVPROC                      gl3wGetSamplerParameterIiv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIIVPROC
gl3wGetSamplerParameterIuiv	src/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIUIVPROC                     gl3wGetSamplerParameterIuiv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIUIVPROC
gl3wGetSamplerParameterfv	src/gl3w.c	/^PFNGLGETSAMPLERPARAMETERFVPROC                       gl3wGetSamplerParameterfv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERFVPROC
gl3wGetSamplerParameteriv	src/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIVPROC                       gl3wGetSamplerParameteriv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIVPROC
gl3wGetShaderInfoLog	src/gl3w.c	/^PFNGLGETSHADERINFOLOGPROC                            gl3wGetShaderInfoLog;$/;"	v	typeref:typename:PFNGLGETSHADERINFOLOGPROC
gl3wGetShaderPrecisionFormat	src/gl3w.c	/^PFNGLGETSHADERPRECISIONFORMATPROC                    gl3wGetShaderPrecisionFormat;$/;"	v	typeref:typename:PFNGLGETSHADERPRECISIONFORMATPROC
gl3wGetShaderSource	src/gl3w.c	/^PFNGLGETSHADERSOURCEPROC                             gl3wGetShaderSource;$/;"	v	typeref:typename:PFNGLGETSHADERSOURCEPROC
gl3wGetShaderiv	src/gl3w.c	/^PFNGLGETSHADERIVPROC                                 gl3wGetShaderiv;$/;"	v	typeref:typename:PFNGLGETSHADERIVPROC
gl3wGetString	src/gl3w.c	/^PFNGLGETSTRINGPROC                                   gl3wGetString;$/;"	v	typeref:typename:PFNGLGETSTRINGPROC
gl3wGetStringi	src/gl3w.c	/^PFNGLGETSTRINGIPROC                                  gl3wGetStringi;$/;"	v	typeref:typename:PFNGLGETSTRINGIPROC
gl3wGetSubroutineIndex	src/gl3w.c	/^PFNGLGETSUBROUTINEINDEXPROC                          gl3wGetSubroutineIndex;$/;"	v	typeref:typename:PFNGLGETSUBROUTINEINDEXPROC
gl3wGetSubroutineUniformLocation	src/gl3w.c	/^PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC                gl3wGetSubroutineUniformLocation;$/;"	v	typeref:typename:PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
gl3wGetSynciv	src/gl3w.c	/^PFNGLGETSYNCIVPROC                                   gl3wGetSynciv;$/;"	v	typeref:typename:PFNGLGETSYNCIVPROC
gl3wGetTexImage	src/gl3w.c	/^PFNGLGETTEXIMAGEPROC                                 gl3wGetTexImage;$/;"	v	typeref:typename:PFNGLGETTEXIMAGEPROC
gl3wGetTexLevelParameterfv	src/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC                      gl3wGetTexLevelParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERFVPROC
gl3wGetTexLevelParameteriv	src/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC                      gl3wGetTexLevelParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERIVPROC
gl3wGetTexParameterIiv	src/gl3w.c	/^PFNGLGETTEXPARAMETERIIVPROC                          gl3wGetTexParameterIiv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIIVPROC
gl3wGetTexParameterIuiv	src/gl3w.c	/^PFNGLGETTEXPARAMETERIUIVPROC                         gl3wGetTexParameterIuiv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIUIVPROC
gl3wGetTexParameterfv	src/gl3w.c	/^PFNGLGETTEXPARAMETERFVPROC                           gl3wGetTexParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERFVPROC
gl3wGetTexParameteriv	src/gl3w.c	/^PFNGLGETTEXPARAMETERIVPROC                           gl3wGetTexParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIVPROC
gl3wGetTextureHandleARB	src/gl3w.c	/^PFNGLGETTEXTUREHANDLEARBPROC                         gl3wGetTextureHandleARB;$/;"	v	typeref:typename:PFNGLGETTEXTUREHANDLEARBPROC
gl3wGetTextureImage	src/gl3w.c	/^PFNGLGETTEXTUREIMAGEPROC                             gl3wGetTextureImage;$/;"	v	typeref:typename:PFNGLGETTEXTUREIMAGEPROC
gl3wGetTextureLevelParameterfv	src/gl3w.c	/^PFNGLGETTEXTURELEVELPARAMETERFVPROC                  gl3wGetTextureLevelParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXTURELEVELPARAMETERFVPROC
gl3wGetTextureLevelParameteriv	src/gl3w.c	/^PFNGLGETTEXTURELEVELPARAMETERIVPROC                  gl3wGetTextureLevelParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXTURELEVELPARAMETERIVPROC
gl3wGetTextureParameterIiv	src/gl3w.c	/^PFNGLGETTEXTUREPARAMETERIIVPROC                      gl3wGetTextureParameterIiv;$/;"	v	typeref:typename:PFNGLGETTEXTUREPARAMETERIIVPROC
gl3wGetTextureParameterIuiv	src/gl3w.c	/^PFNGLGETTEXTUREPARAMETERIUIVPROC                     gl3wGetTextureParameterIuiv;$/;"	v	typeref:typename:PFNGLGETTEXTUREPARAMETERIUIVPROC
gl3wGetTextureParameterfv	src/gl3w.c	/^PFNGLGETTEXTUREPARAMETERFVPROC                       gl3wGetTextureParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXTUREPARAMETERFVPROC
gl3wGetTextureParameteriv	src/gl3w.c	/^PFNGLGETTEXTUREPARAMETERIVPROC                       gl3wGetTextureParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXTUREPARAMETERIVPROC
gl3wGetTextureSamplerHandleARB	src/gl3w.c	/^PFNGLGETTEXTURESAMPLERHANDLEARBPROC                  gl3wGetTextureSamplerHandleARB;$/;"	v	typeref:typename:PFNGLGETTEXTURESAMPLERHANDLEARBPROC
gl3wGetTextureSubImage	src/gl3w.c	/^PFNGLGETTEXTURESUBIMAGEPROC                          gl3wGetTextureSubImage;$/;"	v	typeref:typename:PFNGLGETTEXTURESUBIMAGEPROC
gl3wGetTransformFeedbackVarying	src/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC                 gl3wGetTransformFeedbackVarying;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
gl3wGetTransformFeedbacki64_v	src/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKI64_VPROC                   gl3wGetTransformFeedbacki64_v;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKI64_VPROC
gl3wGetTransformFeedbacki_v	src/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKI_VPROC                     gl3wGetTransformFeedbacki_v;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKI_VPROC
gl3wGetTransformFeedbackiv	src/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKIVPROC                      gl3wGetTransformFeedbackiv;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKIVPROC
gl3wGetUniformBlockIndex	src/gl3w.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC                        gl3wGetUniformBlockIndex;$/;"	v	typeref:typename:PFNGLGETUNIFORMBLOCKINDEXPROC
gl3wGetUniformIndices	src/gl3w.c	/^PFNGLGETUNIFORMINDICESPROC                           gl3wGetUniformIndices;$/;"	v	typeref:typename:PFNGLGETUNIFORMINDICESPROC
gl3wGetUniformLocation	src/gl3w.c	/^PFNGLGETUNIFORMLOCATIONPROC                          gl3wGetUniformLocation;$/;"	v	typeref:typename:PFNGLGETUNIFORMLOCATIONPROC
gl3wGetUniformSubroutineuiv	src/gl3w.c	/^PFNGLGETUNIFORMSUBROUTINEUIVPROC                     gl3wGetUniformSubroutineuiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMSUBROUTINEUIVPROC
gl3wGetUniformdv	src/gl3w.c	/^PFNGLGETUNIFORMDVPROC                                gl3wGetUniformdv;$/;"	v	typeref:typename:PFNGLGETUNIFORMDVPROC
gl3wGetUniformfv	src/gl3w.c	/^PFNGLGETUNIFORMFVPROC                                gl3wGetUniformfv;$/;"	v	typeref:typename:PFNGLGETUNIFORMFVPROC
gl3wGetUniformiv	src/gl3w.c	/^PFNGLGETUNIFORMIVPROC                                gl3wGetUniformiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMIVPROC
gl3wGetUniformuiv	src/gl3w.c	/^PFNGLGETUNIFORMUIVPROC                               gl3wGetUniformuiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMUIVPROC
gl3wGetVertexArrayIndexed64iv	src/gl3w.c	/^PFNGLGETVERTEXARRAYINDEXED64IVPROC                   gl3wGetVertexArrayIndexed64iv;$/;"	v	typeref:typename:PFNGLGETVERTEXARRAYINDEXED64IVPROC
gl3wGetVertexArrayIndexediv	src/gl3w.c	/^PFNGLGETVERTEXARRAYINDEXEDIVPROC                     gl3wGetVertexArrayIndexediv;$/;"	v	typeref:typename:PFNGLGETVERTEXARRAYINDEXEDIVPROC
gl3wGetVertexArrayiv	src/gl3w.c	/^PFNGLGETVERTEXARRAYIVPROC                            gl3wGetVertexArrayiv;$/;"	v	typeref:typename:PFNGLGETVERTEXARRAYIVPROC
gl3wGetVertexAttribIiv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBIIVPROC                          gl3wGetVertexAttribIiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIIVPROC
gl3wGetVertexAttribIuiv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBIUIVPROC                         gl3wGetVertexAttribIuiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIUIVPROC
gl3wGetVertexAttribLdv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBLDVPROC                          gl3wGetVertexAttribLdv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBLDVPROC
gl3wGetVertexAttribLui64vARB	src/gl3w.c	/^PFNGLGETVERTEXATTRIBLUI64VARBPROC                    gl3wGetVertexAttribLui64vARB;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBLUI64VARBPROC
gl3wGetVertexAttribPointerv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC                     gl3wGetVertexAttribPointerv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBPOINTERVPROC
gl3wGetVertexAttribdv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBDVPROC                           gl3wGetVertexAttribdv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBDVPROC
gl3wGetVertexAttribfv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBFVPROC                           gl3wGetVertexAttribfv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBFVPROC
gl3wGetVertexAttribiv	src/gl3w.c	/^PFNGLGETVERTEXATTRIBIVPROC                           gl3wGetVertexAttribiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIVPROC
gl3wGetnCompressedTexImage	src/gl3w.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEPROC                      gl3wGetnCompressedTexImage;$/;"	v	typeref:typename:PFNGLGETNCOMPRESSEDTEXIMAGEPROC
gl3wGetnCompressedTexImageARB	src/gl3w.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC                   gl3wGetnCompressedTexImageARB;$/;"	v	typeref:typename:PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
gl3wGetnTexImage	src/gl3w.c	/^PFNGLGETNTEXIMAGEPROC                                gl3wGetnTexImage;$/;"	v	typeref:typename:PFNGLGETNTEXIMAGEPROC
gl3wGetnTexImageARB	src/gl3w.c	/^PFNGLGETNTEXIMAGEARBPROC                             gl3wGetnTexImageARB;$/;"	v	typeref:typename:PFNGLGETNTEXIMAGEARBPROC
gl3wGetnUniformdv	src/gl3w.c	/^PFNGLGETNUNIFORMDVPROC                               gl3wGetnUniformdv;$/;"	v	typeref:typename:PFNGLGETNUNIFORMDVPROC
gl3wGetnUniformdvARB	src/gl3w.c	/^PFNGLGETNUNIFORMDVARBPROC                            gl3wGetnUniformdvARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMDVARBPROC
gl3wGetnUniformfv	src/gl3w.c	/^PFNGLGETNUNIFORMFVPROC                               gl3wGetnUniformfv;$/;"	v	typeref:typename:PFNGLGETNUNIFORMFVPROC
gl3wGetnUniformfvARB	src/gl3w.c	/^PFNGLGETNUNIFORMFVARBPROC                            gl3wGetnUniformfvARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMFVARBPROC
gl3wGetnUniformiv	src/gl3w.c	/^PFNGLGETNUNIFORMIVPROC                               gl3wGetnUniformiv;$/;"	v	typeref:typename:PFNGLGETNUNIFORMIVPROC
gl3wGetnUniformivARB	src/gl3w.c	/^PFNGLGETNUNIFORMIVARBPROC                            gl3wGetnUniformivARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMIVARBPROC
gl3wGetnUniformuiv	src/gl3w.c	/^PFNGLGETNUNIFORMUIVPROC                              gl3wGetnUniformuiv;$/;"	v	typeref:typename:PFNGLGETNUNIFORMUIVPROC
gl3wGetnUniformuivARB	src/gl3w.c	/^PFNGLGETNUNIFORMUIVARBPROC                           gl3wGetnUniformuivARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMUIVARBPROC
gl3wHint	src/gl3w.c	/^PFNGLHINTPROC                                        gl3wHint;$/;"	v	typeref:typename:PFNGLHINTPROC
gl3wInit	src/gl3w.c	/^int gl3wInit(void)$/;"	f	typeref:typename:int
gl3wInvalidateBufferData	src/gl3w.c	/^PFNGLINVALIDATEBUFFERDATAPROC                        gl3wInvalidateBufferData;$/;"	v	typeref:typename:PFNGLINVALIDATEBUFFERDATAPROC
gl3wInvalidateBufferSubData	src/gl3w.c	/^PFNGLINVALIDATEBUFFERSUBDATAPROC                     gl3wInvalidateBufferSubData;$/;"	v	typeref:typename:PFNGLINVALIDATEBUFFERSUBDATAPROC
gl3wInvalidateFramebuffer	src/gl3w.c	/^PFNGLINVALIDATEFRAMEBUFFERPROC                       gl3wInvalidateFramebuffer;$/;"	v	typeref:typename:PFNGLINVALIDATEFRAMEBUFFERPROC
gl3wInvalidateNamedFramebufferData	src/gl3w.c	/^PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC              gl3wInvalidateNamedFramebufferData;$/;"	v	typeref:typename:PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
gl3wInvalidateNamedFramebufferSubData	src/gl3w.c	/^PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC           gl3wInvalidateNamedFramebufferSubData;$/;"	v	typeref:typename:PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
gl3wInvalidateSubFramebuffer	src/gl3w.c	/^PFNGLINVALIDATESUBFRAMEBUFFERPROC                    gl3wInvalidateSubFramebuffer;$/;"	v	typeref:typename:PFNGLINVALIDATESUBFRAMEBUFFERPROC
gl3wInvalidateTexImage	src/gl3w.c	/^PFNGLINVALIDATETEXIMAGEPROC                          gl3wInvalidateTexImage;$/;"	v	typeref:typename:PFNGLINVALIDATETEXIMAGEPROC
gl3wInvalidateTexSubImage	src/gl3w.c	/^PFNGLINVALIDATETEXSUBIMAGEPROC                       gl3wInvalidateTexSubImage;$/;"	v	typeref:typename:PFNGLINVALIDATETEXSUBIMAGEPROC
gl3wIsBuffer	src/gl3w.c	/^PFNGLISBUFFERPROC                                    gl3wIsBuffer;$/;"	v	typeref:typename:PFNGLISBUFFERPROC
gl3wIsEnabled	src/gl3w.c	/^PFNGLISENABLEDPROC                                   gl3wIsEnabled;$/;"	v	typeref:typename:PFNGLISENABLEDPROC
gl3wIsEnabledi	src/gl3w.c	/^PFNGLISENABLEDIPROC                                  gl3wIsEnabledi;$/;"	v	typeref:typename:PFNGLISENABLEDIPROC
gl3wIsFramebuffer	src/gl3w.c	/^PFNGLISFRAMEBUFFERPROC                               gl3wIsFramebuffer;$/;"	v	typeref:typename:PFNGLISFRAMEBUFFERPROC
gl3wIsImageHandleResidentARB	src/gl3w.c	/^PFNGLISIMAGEHANDLERESIDENTARBPROC                    gl3wIsImageHandleResidentARB;$/;"	v	typeref:typename:PFNGLISIMAGEHANDLERESIDENTARBPROC
gl3wIsNamedStringARB	src/gl3w.c	/^PFNGLISNAMEDSTRINGARBPROC                            gl3wIsNamedStringARB;$/;"	v	typeref:typename:PFNGLISNAMEDSTRINGARBPROC
gl3wIsProgram	src/gl3w.c	/^PFNGLISPROGRAMPROC                                   gl3wIsProgram;$/;"	v	typeref:typename:PFNGLISPROGRAMPROC
gl3wIsProgramPipeline	src/gl3w.c	/^PFNGLISPROGRAMPIPELINEPROC                           gl3wIsProgramPipeline;$/;"	v	typeref:typename:PFNGLISPROGRAMPIPELINEPROC
gl3wIsQuery	src/gl3w.c	/^PFNGLISQUERYPROC                                     gl3wIsQuery;$/;"	v	typeref:typename:PFNGLISQUERYPROC
gl3wIsRenderbuffer	src/gl3w.c	/^PFNGLISRENDERBUFFERPROC                              gl3wIsRenderbuffer;$/;"	v	typeref:typename:PFNGLISRENDERBUFFERPROC
gl3wIsSampler	src/gl3w.c	/^PFNGLISSAMPLERPROC                                   gl3wIsSampler;$/;"	v	typeref:typename:PFNGLISSAMPLERPROC
gl3wIsShader	src/gl3w.c	/^PFNGLISSHADERPROC                                    gl3wIsShader;$/;"	v	typeref:typename:PFNGLISSHADERPROC
gl3wIsSupported	src/gl3w.c	/^int gl3wIsSupported(int major, int minor)$/;"	f	typeref:typename:int
gl3wIsSync	src/gl3w.c	/^PFNGLISSYNCPROC                                      gl3wIsSync;$/;"	v	typeref:typename:PFNGLISSYNCPROC
gl3wIsTexture	src/gl3w.c	/^PFNGLISTEXTUREPROC                                   gl3wIsTexture;$/;"	v	typeref:typename:PFNGLISTEXTUREPROC
gl3wIsTextureHandleResidentARB	src/gl3w.c	/^PFNGLISTEXTUREHANDLERESIDENTARBPROC                  gl3wIsTextureHandleResidentARB;$/;"	v	typeref:typename:PFNGLISTEXTUREHANDLERESIDENTARBPROC
gl3wIsTransformFeedback	src/gl3w.c	/^PFNGLISTRANSFORMFEEDBACKPROC                         gl3wIsTransformFeedback;$/;"	v	typeref:typename:PFNGLISTRANSFORMFEEDBACKPROC
gl3wIsVertexArray	src/gl3w.c	/^PFNGLISVERTEXARRAYPROC                               gl3wIsVertexArray;$/;"	v	typeref:typename:PFNGLISVERTEXARRAYPROC
gl3wLineWidth	src/gl3w.c	/^PFNGLLINEWIDTHPROC                                   gl3wLineWidth;$/;"	v	typeref:typename:PFNGLLINEWIDTHPROC
gl3wLinkProgram	src/gl3w.c	/^PFNGLLINKPROGRAMPROC                                 gl3wLinkProgram;$/;"	v	typeref:typename:PFNGLLINKPROGRAMPROC
gl3wLogicOp	src/gl3w.c	/^PFNGLLOGICOPPROC                                     gl3wLogicOp;$/;"	v	typeref:typename:PFNGLLOGICOPPROC
gl3wMakeImageHandleNonResidentARB	src/gl3w.c	/^PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC               gl3wMakeImageHandleNonResidentARB;$/;"	v	typeref:typename:PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
gl3wMakeImageHandleResidentARB	src/gl3w.c	/^PFNGLMAKEIMAGEHANDLERESIDENTARBPROC                  gl3wMakeImageHandleResidentARB;$/;"	v	typeref:typename:PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
gl3wMakeTextureHandleNonResidentARB	src/gl3w.c	/^PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC             gl3wMakeTextureHandleNonResidentARB;$/;"	v	typeref:typename:PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
gl3wMakeTextureHandleResidentARB	src/gl3w.c	/^PFNGLMAKETEXTUREHANDLERESIDENTARBPROC                gl3wMakeTextureHandleResidentARB;$/;"	v	typeref:typename:PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
gl3wMapBuffer	src/gl3w.c	/^PFNGLMAPBUFFERPROC                                   gl3wMapBuffer;$/;"	v	typeref:typename:PFNGLMAPBUFFERPROC
gl3wMapBufferRange	src/gl3w.c	/^PFNGLMAPBUFFERRANGEPROC                              gl3wMapBufferRange;$/;"	v	typeref:typename:PFNGLMAPBUFFERRANGEPROC
gl3wMapNamedBuffer	src/gl3w.c	/^PFNGLMAPNAMEDBUFFERPROC                              gl3wMapNamedBuffer;$/;"	v	typeref:typename:PFNGLMAPNAMEDBUFFERPROC
gl3wMapNamedBufferRange	src/gl3w.c	/^PFNGLMAPNAMEDBUFFERRANGEPROC                         gl3wMapNamedBufferRange;$/;"	v	typeref:typename:PFNGLMAPNAMEDBUFFERRANGEPROC
gl3wMemoryBarrier	src/gl3w.c	/^PFNGLMEMORYBARRIERPROC                               gl3wMemoryBarrier;$/;"	v	typeref:typename:PFNGLMEMORYBARRIERPROC
gl3wMemoryBarrierByRegion	src/gl3w.c	/^PFNGLMEMORYBARRIERBYREGIONPROC                       gl3wMemoryBarrierByRegion;$/;"	v	typeref:typename:PFNGLMEMORYBARRIERBYREGIONPROC
gl3wMinSampleShading	src/gl3w.c	/^PFNGLMINSAMPLESHADINGPROC                            gl3wMinSampleShading;$/;"	v	typeref:typename:PFNGLMINSAMPLESHADINGPROC
gl3wMinSampleShadingARB	src/gl3w.c	/^PFNGLMINSAMPLESHADINGARBPROC                         gl3wMinSampleShadingARB;$/;"	v	typeref:typename:PFNGLMINSAMPLESHADINGARBPROC
gl3wMultiDrawArrays	src/gl3w.c	/^PFNGLMULTIDRAWARRAYSPROC                             gl3wMultiDrawArrays;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSPROC
gl3wMultiDrawArraysIndirect	src/gl3w.c	/^PFNGLMULTIDRAWARRAYSINDIRECTPROC                     gl3wMultiDrawArraysIndirect;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSINDIRECTPROC
gl3wMultiDrawArraysIndirectCountARB	src/gl3w.c	/^PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC             gl3wMultiDrawArraysIndirectCountARB;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
gl3wMultiDrawElements	src/gl3w.c	/^PFNGLMULTIDRAWELEMENTSPROC                           gl3wMultiDrawElements;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSPROC
gl3wMultiDrawElementsBaseVertex	src/gl3w.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC                 gl3wMultiDrawElementsBaseVertex;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
gl3wMultiDrawElementsIndirect	src/gl3w.c	/^PFNGLMULTIDRAWELEMENTSINDIRECTPROC                   gl3wMultiDrawElementsIndirect;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSINDIRECTPROC
gl3wMultiDrawElementsIndirectCountARB	src/gl3w.c	/^PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC           gl3wMultiDrawElementsIndirectCountARB;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
gl3wNamedBufferData	src/gl3w.c	/^PFNGLNAMEDBUFFERDATAPROC                             gl3wNamedBufferData;$/;"	v	typeref:typename:PFNGLNAMEDBUFFERDATAPROC
gl3wNamedBufferPageCommitmentARB	src/gl3w.c	/^PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC                gl3wNamedBufferPageCommitmentARB;$/;"	v	typeref:typename:PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC
gl3wNamedBufferPageCommitmentEXT	src/gl3w.c	/^PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC                gl3wNamedBufferPageCommitmentEXT;$/;"	v	typeref:typename:PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC
gl3wNamedBufferStorage	src/gl3w.c	/^PFNGLNAMEDBUFFERSTORAGEPROC                          gl3wNamedBufferStorage;$/;"	v	typeref:typename:PFNGLNAMEDBUFFERSTORAGEPROC
gl3wNamedBufferSubData	src/gl3w.c	/^PFNGLNAMEDBUFFERSUBDATAPROC                          gl3wNamedBufferSubData;$/;"	v	typeref:typename:PFNGLNAMEDBUFFERSUBDATAPROC
gl3wNamedFramebufferDrawBuffer	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC                  gl3wNamedFramebufferDrawBuffer;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
gl3wNamedFramebufferDrawBuffers	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC                 gl3wNamedFramebufferDrawBuffers;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
gl3wNamedFramebufferParameteri	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC                  gl3wNamedFramebufferParameteri;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
gl3wNamedFramebufferReadBuffer	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC                  gl3wNamedFramebufferReadBuffer;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
gl3wNamedFramebufferRenderbuffer	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC                gl3wNamedFramebufferRenderbuffer;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
gl3wNamedFramebufferTexture	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERTEXTUREPROC                     gl3wNamedFramebufferTexture;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
gl3wNamedFramebufferTextureLayer	src/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC                gl3wNamedFramebufferTextureLayer;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
gl3wNamedRenderbufferStorage	src/gl3w.c	/^PFNGLNAMEDRENDERBUFFERSTORAGEPROC                    gl3wNamedRenderbufferStorage;$/;"	v	typeref:typename:PFNGLNAMEDRENDERBUFFERSTORAGEPROC
gl3wNamedRenderbufferStorageMultisample	src/gl3w.c	/^PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC         gl3wNamedRenderbufferStorageMultisample;$/;"	v	typeref:typename:PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
gl3wNamedStringARB	src/gl3w.c	/^PFNGLNAMEDSTRINGARBPROC                              gl3wNamedStringARB;$/;"	v	typeref:typename:PFNGLNAMEDSTRINGARBPROC
gl3wObjectLabel	src/gl3w.c	/^PFNGLOBJECTLABELPROC                                 gl3wObjectLabel;$/;"	v	typeref:typename:PFNGLOBJECTLABELPROC
gl3wObjectPtrLabel	src/gl3w.c	/^PFNGLOBJECTPTRLABELPROC                              gl3wObjectPtrLabel;$/;"	v	typeref:typename:PFNGLOBJECTPTRLABELPROC
gl3wPatchParameterfv	src/gl3w.c	/^PFNGLPATCHPARAMETERFVPROC                            gl3wPatchParameterfv;$/;"	v	typeref:typename:PFNGLPATCHPARAMETERFVPROC
gl3wPatchParameteri	src/gl3w.c	/^PFNGLPATCHPARAMETERIPROC                             gl3wPatchParameteri;$/;"	v	typeref:typename:PFNGLPATCHPARAMETERIPROC
gl3wPauseTransformFeedback	src/gl3w.c	/^PFNGLPAUSETRANSFORMFEEDBACKPROC                      gl3wPauseTransformFeedback;$/;"	v	typeref:typename:PFNGLPAUSETRANSFORMFEEDBACKPROC
gl3wPixelStoref	src/gl3w.c	/^PFNGLPIXELSTOREFPROC                                 gl3wPixelStoref;$/;"	v	typeref:typename:PFNGLPIXELSTOREFPROC
gl3wPixelStorei	src/gl3w.c	/^PFNGLPIXELSTOREIPROC                                 gl3wPixelStorei;$/;"	v	typeref:typename:PFNGLPIXELSTOREIPROC
gl3wPointParameterf	src/gl3w.c	/^PFNGLPOINTPARAMETERFPROC                             gl3wPointParameterf;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFPROC
gl3wPointParameterfv	src/gl3w.c	/^PFNGLPOINTPARAMETERFVPROC                            gl3wPointParameterfv;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFVPROC
gl3wPointParameteri	src/gl3w.c	/^PFNGLPOINTPARAMETERIPROC                             gl3wPointParameteri;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIPROC
gl3wPointParameteriv	src/gl3w.c	/^PFNGLPOINTPARAMETERIVPROC                            gl3wPointParameteriv;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIVPROC
gl3wPointSize	src/gl3w.c	/^PFNGLPOINTSIZEPROC                                   gl3wPointSize;$/;"	v	typeref:typename:PFNGLPOINTSIZEPROC
gl3wPolygonMode	src/gl3w.c	/^PFNGLPOLYGONMODEPROC                                 gl3wPolygonMode;$/;"	v	typeref:typename:PFNGLPOLYGONMODEPROC
gl3wPolygonOffset	src/gl3w.c	/^PFNGLPOLYGONOFFSETPROC                               gl3wPolygonOffset;$/;"	v	typeref:typename:PFNGLPOLYGONOFFSETPROC
gl3wPopDebugGroup	src/gl3w.c	/^PFNGLPOPDEBUGGROUPPROC                               gl3wPopDebugGroup;$/;"	v	typeref:typename:PFNGLPOPDEBUGGROUPPROC
gl3wPrimitiveRestartIndex	src/gl3w.c	/^PFNGLPRIMITIVERESTARTINDEXPROC                       gl3wPrimitiveRestartIndex;$/;"	v	typeref:typename:PFNGLPRIMITIVERESTARTINDEXPROC
gl3wProgramBinary	src/gl3w.c	/^PFNGLPROGRAMBINARYPROC                               gl3wProgramBinary;$/;"	v	typeref:typename:PFNGLPROGRAMBINARYPROC
gl3wProgramParameteri	src/gl3w.c	/^PFNGLPROGRAMPARAMETERIPROC                           gl3wProgramParameteri;$/;"	v	typeref:typename:PFNGLPROGRAMPARAMETERIPROC
gl3wProgramUniform1d	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1DPROC                            gl3wProgramUniform1d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1DPROC
gl3wProgramUniform1dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1DVPROC                           gl3wProgramUniform1dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1DVPROC
gl3wProgramUniform1f	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1FPROC                            gl3wProgramUniform1f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1FPROC
gl3wProgramUniform1fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1FVPROC                           gl3wProgramUniform1fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1FVPROC
gl3wProgramUniform1i	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1IPROC                            gl3wProgramUniform1i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1IPROC
gl3wProgramUniform1iv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1IVPROC                           gl3wProgramUniform1iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1IVPROC
gl3wProgramUniform1ui	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIPROC                           gl3wProgramUniform1ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1UIPROC
gl3wProgramUniform1uiv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIVPROC                          gl3wProgramUniform1uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1UIVPROC
gl3wProgramUniform2d	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2DPROC                            gl3wProgramUniform2d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2DPROC
gl3wProgramUniform2dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2DVPROC                           gl3wProgramUniform2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2DVPROC
gl3wProgramUniform2f	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2FPROC                            gl3wProgramUniform2f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2FPROC
gl3wProgramUniform2fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2FVPROC                           gl3wProgramUniform2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2FVPROC
gl3wProgramUniform2i	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2IPROC                            gl3wProgramUniform2i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2IPROC
gl3wProgramUniform2iv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2IVPROC                           gl3wProgramUniform2iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2IVPROC
gl3wProgramUniform2ui	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIPROC                           gl3wProgramUniform2ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2UIPROC
gl3wProgramUniform2uiv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIVPROC                          gl3wProgramUniform2uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2UIVPROC
gl3wProgramUniform3d	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3DPROC                            gl3wProgramUniform3d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3DPROC
gl3wProgramUniform3dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3DVPROC                           gl3wProgramUniform3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3DVPROC
gl3wProgramUniform3f	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3FPROC                            gl3wProgramUniform3f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3FPROC
gl3wProgramUniform3fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3FVPROC                           gl3wProgramUniform3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3FVPROC
gl3wProgramUniform3i	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3IPROC                            gl3wProgramUniform3i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3IPROC
gl3wProgramUniform3iv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3IVPROC                           gl3wProgramUniform3iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3IVPROC
gl3wProgramUniform3ui	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIPROC                           gl3wProgramUniform3ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3UIPROC
gl3wProgramUniform3uiv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIVPROC                          gl3wProgramUniform3uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3UIVPROC
gl3wProgramUniform4d	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4DPROC                            gl3wProgramUniform4d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4DPROC
gl3wProgramUniform4dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4DVPROC                           gl3wProgramUniform4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4DVPROC
gl3wProgramUniform4f	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4FPROC                            gl3wProgramUniform4f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4FPROC
gl3wProgramUniform4fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4FVPROC                           gl3wProgramUniform4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4FVPROC
gl3wProgramUniform4i	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4IPROC                            gl3wProgramUniform4i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4IPROC
gl3wProgramUniform4iv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4IVPROC                           gl3wProgramUniform4iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4IVPROC
gl3wProgramUniform4ui	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIPROC                           gl3wProgramUniform4ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4UIPROC
gl3wProgramUniform4uiv	src/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIVPROC                          gl3wProgramUniform4uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4UIVPROC
gl3wProgramUniformHandleui64ARB	src/gl3w.c	/^PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC                 gl3wProgramUniformHandleui64ARB;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
gl3wProgramUniformHandleui64vARB	src/gl3w.c	/^PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC                gl3wProgramUniformHandleui64vARB;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
gl3wProgramUniformMatrix2dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2DVPROC                     gl3wProgramUniformMatrix2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2DVPROC
gl3wProgramUniformMatrix2fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2FVPROC                     gl3wProgramUniformMatrix2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2FVPROC
gl3wProgramUniformMatrix2x3dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC                   gl3wProgramUniformMatrix2x3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
gl3wProgramUniformMatrix2x3fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC                   gl3wProgramUniformMatrix2x3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
gl3wProgramUniformMatrix2x4dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC                   gl3wProgramUniformMatrix2x4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
gl3wProgramUniformMatrix2x4fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC                   gl3wProgramUniformMatrix2x4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
gl3wProgramUniformMatrix3dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3DVPROC                     gl3wProgramUniformMatrix3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3DVPROC
gl3wProgramUniformMatrix3fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3FVPROC                     gl3wProgramUniformMatrix3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3FVPROC
gl3wProgramUniformMatrix3x2dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC                   gl3wProgramUniformMatrix3x2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
gl3wProgramUniformMatrix3x2fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC                   gl3wProgramUniformMatrix3x2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
gl3wProgramUniformMatrix3x4dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC                   gl3wProgramUniformMatrix3x4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
gl3wProgramUniformMatrix3x4fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC                   gl3wProgramUniformMatrix3x4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
gl3wProgramUniformMatrix4dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4DVPROC                     gl3wProgramUniformMatrix4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4DVPROC
gl3wProgramUniformMatrix4fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4FVPROC                     gl3wProgramUniformMatrix4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4FVPROC
gl3wProgramUniformMatrix4x2dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC                   gl3wProgramUniformMatrix4x2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
gl3wProgramUniformMatrix4x2fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC                   gl3wProgramUniformMatrix4x2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
gl3wProgramUniformMatrix4x3dv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC                   gl3wProgramUniformMatrix4x3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
gl3wProgramUniformMatrix4x3fv	src/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC                   gl3wProgramUniformMatrix4x3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
gl3wProvokingVertex	src/gl3w.c	/^PFNGLPROVOKINGVERTEXPROC                             gl3wProvokingVertex;$/;"	v	typeref:typename:PFNGLPROVOKINGVERTEXPROC
gl3wPushDebugGroup	src/gl3w.c	/^PFNGLPUSHDEBUGGROUPPROC                              gl3wPushDebugGroup;$/;"	v	typeref:typename:PFNGLPUSHDEBUGGROUPPROC
gl3wQueryCounter	src/gl3w.c	/^PFNGLQUERYCOUNTERPROC                                gl3wQueryCounter;$/;"	v	typeref:typename:PFNGLQUERYCOUNTERPROC
gl3wReadBuffer	src/gl3w.c	/^PFNGLREADBUFFERPROC                                  gl3wReadBuffer;$/;"	v	typeref:typename:PFNGLREADBUFFERPROC
gl3wReadPixels	src/gl3w.c	/^PFNGLREADPIXELSPROC                                  gl3wReadPixels;$/;"	v	typeref:typename:PFNGLREADPIXELSPROC
gl3wReadnPixels	src/gl3w.c	/^PFNGLREADNPIXELSPROC                                 gl3wReadnPixels;$/;"	v	typeref:typename:PFNGLREADNPIXELSPROC
gl3wReadnPixelsARB	src/gl3w.c	/^PFNGLREADNPIXELSARBPROC                              gl3wReadnPixelsARB;$/;"	v	typeref:typename:PFNGLREADNPIXELSARBPROC
gl3wReleaseShaderCompiler	src/gl3w.c	/^PFNGLRELEASESHADERCOMPILERPROC                       gl3wReleaseShaderCompiler;$/;"	v	typeref:typename:PFNGLRELEASESHADERCOMPILERPROC
gl3wRenderbufferStorage	src/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEPROC                         gl3wRenderbufferStorage;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEPROC
gl3wRenderbufferStorageMultisample	src/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC              gl3wRenderbufferStorageMultisample;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
gl3wResumeTransformFeedback	src/gl3w.c	/^PFNGLRESUMETRANSFORMFEEDBACKPROC                     gl3wResumeTransformFeedback;$/;"	v	typeref:typename:PFNGLRESUMETRANSFORMFEEDBACKPROC
gl3wSampleCoverage	src/gl3w.c	/^PFNGLSAMPLECOVERAGEPROC                              gl3wSampleCoverage;$/;"	v	typeref:typename:PFNGLSAMPLECOVERAGEPROC
gl3wSampleMaski	src/gl3w.c	/^PFNGLSAMPLEMASKIPROC                                 gl3wSampleMaski;$/;"	v	typeref:typename:PFNGLSAMPLEMASKIPROC
gl3wSamplerParameterIiv	src/gl3w.c	/^PFNGLSAMPLERPARAMETERIIVPROC                         gl3wSamplerParameterIiv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIIVPROC
gl3wSamplerParameterIuiv	src/gl3w.c	/^PFNGLSAMPLERPARAMETERIUIVPROC                        gl3wSamplerParameterIuiv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIUIVPROC
gl3wSamplerParameterf	src/gl3w.c	/^PFNGLSAMPLERPARAMETERFPROC                           gl3wSamplerParameterf;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFPROC
gl3wSamplerParameterfv	src/gl3w.c	/^PFNGLSAMPLERPARAMETERFVPROC                          gl3wSamplerParameterfv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFVPROC
gl3wSamplerParameteri	src/gl3w.c	/^PFNGLSAMPLERPARAMETERIPROC                           gl3wSamplerParameteri;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIPROC
gl3wSamplerParameteriv	src/gl3w.c	/^PFNGLSAMPLERPARAMETERIVPROC                          gl3wSamplerParameteriv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIVPROC
gl3wScissor	src/gl3w.c	/^PFNGLSCISSORPROC                                     gl3wScissor;$/;"	v	typeref:typename:PFNGLSCISSORPROC
gl3wScissorArrayv	src/gl3w.c	/^PFNGLSCISSORARRAYVPROC                               gl3wScissorArrayv;$/;"	v	typeref:typename:PFNGLSCISSORARRAYVPROC
gl3wScissorIndexed	src/gl3w.c	/^PFNGLSCISSORINDEXEDPROC                              gl3wScissorIndexed;$/;"	v	typeref:typename:PFNGLSCISSORINDEXEDPROC
gl3wScissorIndexedv	src/gl3w.c	/^PFNGLSCISSORINDEXEDVPROC                             gl3wScissorIndexedv;$/;"	v	typeref:typename:PFNGLSCISSORINDEXEDVPROC
gl3wShaderBinary	src/gl3w.c	/^PFNGLSHADERBINARYPROC                                gl3wShaderBinary;$/;"	v	typeref:typename:PFNGLSHADERBINARYPROC
gl3wShaderSource	src/gl3w.c	/^PFNGLSHADERSOURCEPROC                                gl3wShaderSource;$/;"	v	typeref:typename:PFNGLSHADERSOURCEPROC
gl3wShaderStorageBlockBinding	src/gl3w.c	/^PFNGLSHADERSTORAGEBLOCKBINDINGPROC                   gl3wShaderStorageBlockBinding;$/;"	v	typeref:typename:PFNGLSHADERSTORAGEBLOCKBINDINGPROC
gl3wStencilFunc	src/gl3w.c	/^PFNGLSTENCILFUNCPROC                                 gl3wStencilFunc;$/;"	v	typeref:typename:PFNGLSTENCILFUNCPROC
gl3wStencilFuncSeparate	src/gl3w.c	/^PFNGLSTENCILFUNCSEPARATEPROC                         gl3wStencilFuncSeparate;$/;"	v	typeref:typename:PFNGLSTENCILFUNCSEPARATEPROC
gl3wStencilMask	src/gl3w.c	/^PFNGLSTENCILMASKPROC                                 gl3wStencilMask;$/;"	v	typeref:typename:PFNGLSTENCILMASKPROC
gl3wStencilMaskSeparate	src/gl3w.c	/^PFNGLSTENCILMASKSEPARATEPROC                         gl3wStencilMaskSeparate;$/;"	v	typeref:typename:PFNGLSTENCILMASKSEPARATEPROC
gl3wStencilOp	src/gl3w.c	/^PFNGLSTENCILOPPROC                                   gl3wStencilOp;$/;"	v	typeref:typename:PFNGLSTENCILOPPROC
gl3wStencilOpSeparate	src/gl3w.c	/^PFNGLSTENCILOPSEPARATEPROC                           gl3wStencilOpSeparate;$/;"	v	typeref:typename:PFNGLSTENCILOPSEPARATEPROC
gl3wTexBuffer	src/gl3w.c	/^PFNGLTEXBUFFERPROC                                   gl3wTexBuffer;$/;"	v	typeref:typename:PFNGLTEXBUFFERPROC
gl3wTexBufferRange	src/gl3w.c	/^PFNGLTEXBUFFERRANGEPROC                              gl3wTexBufferRange;$/;"	v	typeref:typename:PFNGLTEXBUFFERRANGEPROC
gl3wTexImage1D	src/gl3w.c	/^PFNGLTEXIMAGE1DPROC                                  gl3wTexImage1D;$/;"	v	typeref:typename:PFNGLTEXIMAGE1DPROC
gl3wTexImage2D	src/gl3w.c	/^PFNGLTEXIMAGE2DPROC                                  gl3wTexImage2D;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DPROC
gl3wTexImage2DMultisample	src/gl3w.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC                       gl3wTexImage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DMULTISAMPLEPROC
gl3wTexImage3D	src/gl3w.c	/^PFNGLTEXIMAGE3DPROC                                  gl3wTexImage3D;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DPROC
gl3wTexImage3DMultisample	src/gl3w.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC                       gl3wTexImage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DMULTISAMPLEPROC
gl3wTexPageCommitmentARB	src/gl3w.c	/^PFNGLTEXPAGECOMMITMENTARBPROC                        gl3wTexPageCommitmentARB;$/;"	v	typeref:typename:PFNGLTEXPAGECOMMITMENTARBPROC
gl3wTexParameterIiv	src/gl3w.c	/^PFNGLTEXPARAMETERIIVPROC                             gl3wTexParameterIiv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIIVPROC
gl3wTexParameterIuiv	src/gl3w.c	/^PFNGLTEXPARAMETERIUIVPROC                            gl3wTexParameterIuiv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIUIVPROC
gl3wTexParameterf	src/gl3w.c	/^PFNGLTEXPARAMETERFPROC                               gl3wTexParameterf;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFPROC
gl3wTexParameterfv	src/gl3w.c	/^PFNGLTEXPARAMETERFVPROC                              gl3wTexParameterfv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFVPROC
gl3wTexParameteri	src/gl3w.c	/^PFNGLTEXPARAMETERIPROC                               gl3wTexParameteri;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIPROC
gl3wTexParameteriv	src/gl3w.c	/^PFNGLTEXPARAMETERIVPROC                              gl3wTexParameteriv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIVPROC
gl3wTexStorage1D	src/gl3w.c	/^PFNGLTEXSTORAGE1DPROC                                gl3wTexStorage1D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE1DPROC
gl3wTexStorage2D	src/gl3w.c	/^PFNGLTEXSTORAGE2DPROC                                gl3wTexStorage2D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE2DPROC
gl3wTexStorage2DMultisample	src/gl3w.c	/^PFNGLTEXSTORAGE2DMULTISAMPLEPROC                     gl3wTexStorage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXSTORAGE2DMULTISAMPLEPROC
gl3wTexStorage3D	src/gl3w.c	/^PFNGLTEXSTORAGE3DPROC                                gl3wTexStorage3D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE3DPROC
gl3wTexStorage3DMultisample	src/gl3w.c	/^PFNGLTEXSTORAGE3DMULTISAMPLEPROC                     gl3wTexStorage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXSTORAGE3DMULTISAMPLEPROC
gl3wTexSubImage1D	src/gl3w.c	/^PFNGLTEXSUBIMAGE1DPROC                               gl3wTexSubImage1D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE1DPROC
gl3wTexSubImage2D	src/gl3w.c	/^PFNGLTEXSUBIMAGE2DPROC                               gl3wTexSubImage2D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE2DPROC
gl3wTexSubImage3D	src/gl3w.c	/^PFNGLTEXSUBIMAGE3DPROC                               gl3wTexSubImage3D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE3DPROC
gl3wTextureBarrier	src/gl3w.c	/^PFNGLTEXTUREBARRIERPROC                              gl3wTextureBarrier;$/;"	v	typeref:typename:PFNGLTEXTUREBARRIERPROC
gl3wTextureBuffer	src/gl3w.c	/^PFNGLTEXTUREBUFFERPROC                               gl3wTextureBuffer;$/;"	v	typeref:typename:PFNGLTEXTUREBUFFERPROC
gl3wTextureBufferRange	src/gl3w.c	/^PFNGLTEXTUREBUFFERRANGEPROC                          gl3wTextureBufferRange;$/;"	v	typeref:typename:PFNGLTEXTUREBUFFERRANGEPROC
gl3wTextureParameterIiv	src/gl3w.c	/^PFNGLTEXTUREPARAMETERIIVPROC                         gl3wTextureParameterIiv;$/;"	v	typeref:typename:PFNGLTEXTUREPARAMETERIIVPROC
gl3wTextureParameterIuiv	src/gl3w.c	/^PFNGLTEXTUREPARAMETERIUIVPROC                        gl3wTextureParameterIuiv;$/;"	v	typeref:typename:PFNGLTEXTUREPARAMETERIUIVPROC
gl3wTextureParameterf	src/gl3w.c	/^PFNGLTEXTUREPARAMETERFPROC                           gl3wTextureParameterf;$/;"	v	typeref:typename:PFNGLTEXTUREPARAMETERFPROC
gl3wTextureParameterfv	src/gl3w.c	/^PFNGLTEXTUREPARAMETERFVPROC                          gl3wTextureParameterfv;$/;"	v	typeref:typename:PFNGLTEXTUREPARAMETERFVPROC
gl3wTextureParameteri	src/gl3w.c	/^PFNGLTEXTUREPARAMETERIPROC                           gl3wTextureParameteri;$/;"	v	typeref:typename:PFNGLTEXTUREPARAMETERIPROC
gl3wTextureParameteriv	src/gl3w.c	/^PFNGLTEXTUREPARAMETERIVPROC                          gl3wTextureParameteriv;$/;"	v	typeref:typename:PFNGLTEXTUREPARAMETERIVPROC
gl3wTextureStorage1D	src/gl3w.c	/^PFNGLTEXTURESTORAGE1DPROC                            gl3wTextureStorage1D;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE1DPROC
gl3wTextureStorage2D	src/gl3w.c	/^PFNGLTEXTURESTORAGE2DPROC                            gl3wTextureStorage2D;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE2DPROC
gl3wTextureStorage2DMultisample	src/gl3w.c	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC                 gl3wTextureStorage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
gl3wTextureStorage3D	src/gl3w.c	/^PFNGLTEXTURESTORAGE3DPROC                            gl3wTextureStorage3D;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE3DPROC
gl3wTextureStorage3DMultisample	src/gl3w.c	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC                 gl3wTextureStorage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
gl3wTextureSubImage1D	src/gl3w.c	/^PFNGLTEXTURESUBIMAGE1DPROC                           gl3wTextureSubImage1D;$/;"	v	typeref:typename:PFNGLTEXTURESUBIMAGE1DPROC
gl3wTextureSubImage2D	src/gl3w.c	/^PFNGLTEXTURESUBIMAGE2DPROC                           gl3wTextureSubImage2D;$/;"	v	typeref:typename:PFNGLTEXTURESUBIMAGE2DPROC
gl3wTextureSubImage3D	src/gl3w.c	/^PFNGLTEXTURESUBIMAGE3DPROC                           gl3wTextureSubImage3D;$/;"	v	typeref:typename:PFNGLTEXTURESUBIMAGE3DPROC
gl3wTextureView	src/gl3w.c	/^PFNGLTEXTUREVIEWPROC                                 gl3wTextureView;$/;"	v	typeref:typename:PFNGLTEXTUREVIEWPROC
gl3wTransformFeedbackBufferBase	src/gl3w.c	/^PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC                 gl3wTransformFeedbackBufferBase;$/;"	v	typeref:typename:PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
gl3wTransformFeedbackBufferRange	src/gl3w.c	/^PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC                gl3wTransformFeedbackBufferRange;$/;"	v	typeref:typename:PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
gl3wTransformFeedbackVaryings	src/gl3w.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC                   gl3wTransformFeedbackVaryings;$/;"	v	typeref:typename:PFNGLTRANSFORMFEEDBACKVARYINGSPROC
gl3wUniform1d	src/gl3w.c	/^PFNGLUNIFORM1DPROC                                   gl3wUniform1d;$/;"	v	typeref:typename:PFNGLUNIFORM1DPROC
gl3wUniform1dv	src/gl3w.c	/^PFNGLUNIFORM1DVPROC                                  gl3wUniform1dv;$/;"	v	typeref:typename:PFNGLUNIFORM1DVPROC
gl3wUniform1f	src/gl3w.c	/^PFNGLUNIFORM1FPROC                                   gl3wUniform1f;$/;"	v	typeref:typename:PFNGLUNIFORM1FPROC
gl3wUniform1fv	src/gl3w.c	/^PFNGLUNIFORM1FVPROC                                  gl3wUniform1fv;$/;"	v	typeref:typename:PFNGLUNIFORM1FVPROC
gl3wUniform1i	src/gl3w.c	/^PFNGLUNIFORM1IPROC                                   gl3wUniform1i;$/;"	v	typeref:typename:PFNGLUNIFORM1IPROC
gl3wUniform1iv	src/gl3w.c	/^PFNGLUNIFORM1IVPROC                                  gl3wUniform1iv;$/;"	v	typeref:typename:PFNGLUNIFORM1IVPROC
gl3wUniform1ui	src/gl3w.c	/^PFNGLUNIFORM1UIPROC                                  gl3wUniform1ui;$/;"	v	typeref:typename:PFNGLUNIFORM1UIPROC
gl3wUniform1uiv	src/gl3w.c	/^PFNGLUNIFORM1UIVPROC                                 gl3wUniform1uiv;$/;"	v	typeref:typename:PFNGLUNIFORM1UIVPROC
gl3wUniform2d	src/gl3w.c	/^PFNGLUNIFORM2DPROC                                   gl3wUniform2d;$/;"	v	typeref:typename:PFNGLUNIFORM2DPROC
gl3wUniform2dv	src/gl3w.c	/^PFNGLUNIFORM2DVPROC                                  gl3wUniform2dv;$/;"	v	typeref:typename:PFNGLUNIFORM2DVPROC
gl3wUniform2f	src/gl3w.c	/^PFNGLUNIFORM2FPROC                                   gl3wUniform2f;$/;"	v	typeref:typename:PFNGLUNIFORM2FPROC
gl3wUniform2fv	src/gl3w.c	/^PFNGLUNIFORM2FVPROC                                  gl3wUniform2fv;$/;"	v	typeref:typename:PFNGLUNIFORM2FVPROC
gl3wUniform2i	src/gl3w.c	/^PFNGLUNIFORM2IPROC                                   gl3wUniform2i;$/;"	v	typeref:typename:PFNGLUNIFORM2IPROC
gl3wUniform2iv	src/gl3w.c	/^PFNGLUNIFORM2IVPROC                                  gl3wUniform2iv;$/;"	v	typeref:typename:PFNGLUNIFORM2IVPROC
gl3wUniform2ui	src/gl3w.c	/^PFNGLUNIFORM2UIPROC                                  gl3wUniform2ui;$/;"	v	typeref:typename:PFNGLUNIFORM2UIPROC
gl3wUniform2uiv	src/gl3w.c	/^PFNGLUNIFORM2UIVPROC                                 gl3wUniform2uiv;$/;"	v	typeref:typename:PFNGLUNIFORM2UIVPROC
gl3wUniform3d	src/gl3w.c	/^PFNGLUNIFORM3DPROC                                   gl3wUniform3d;$/;"	v	typeref:typename:PFNGLUNIFORM3DPROC
gl3wUniform3dv	src/gl3w.c	/^PFNGLUNIFORM3DVPROC                                  gl3wUniform3dv;$/;"	v	typeref:typename:PFNGLUNIFORM3DVPROC
gl3wUniform3f	src/gl3w.c	/^PFNGLUNIFORM3FPROC                                   gl3wUniform3f;$/;"	v	typeref:typename:PFNGLUNIFORM3FPROC
gl3wUniform3fv	src/gl3w.c	/^PFNGLUNIFORM3FVPROC                                  gl3wUniform3fv;$/;"	v	typeref:typename:PFNGLUNIFORM3FVPROC
gl3wUniform3i	src/gl3w.c	/^PFNGLUNIFORM3IPROC                                   gl3wUniform3i;$/;"	v	typeref:typename:PFNGLUNIFORM3IPROC
gl3wUniform3iv	src/gl3w.c	/^PFNGLUNIFORM3IVPROC                                  gl3wUniform3iv;$/;"	v	typeref:typename:PFNGLUNIFORM3IVPROC
gl3wUniform3ui	src/gl3w.c	/^PFNGLUNIFORM3UIPROC                                  gl3wUniform3ui;$/;"	v	typeref:typename:PFNGLUNIFORM3UIPROC
gl3wUniform3uiv	src/gl3w.c	/^PFNGLUNIFORM3UIVPROC                                 gl3wUniform3uiv;$/;"	v	typeref:typename:PFNGLUNIFORM3UIVPROC
gl3wUniform4d	src/gl3w.c	/^PFNGLUNIFORM4DPROC                                   gl3wUniform4d;$/;"	v	typeref:typename:PFNGLUNIFORM4DPROC
gl3wUniform4dv	src/gl3w.c	/^PFNGLUNIFORM4DVPROC                                  gl3wUniform4dv;$/;"	v	typeref:typename:PFNGLUNIFORM4DVPROC
gl3wUniform4f	src/gl3w.c	/^PFNGLUNIFORM4FPROC                                   gl3wUniform4f;$/;"	v	typeref:typename:PFNGLUNIFORM4FPROC
gl3wUniform4fv	src/gl3w.c	/^PFNGLUNIFORM4FVPROC                                  gl3wUniform4fv;$/;"	v	typeref:typename:PFNGLUNIFORM4FVPROC
gl3wUniform4i	src/gl3w.c	/^PFNGLUNIFORM4IPROC                                   gl3wUniform4i;$/;"	v	typeref:typename:PFNGLUNIFORM4IPROC
gl3wUniform4iv	src/gl3w.c	/^PFNGLUNIFORM4IVPROC                                  gl3wUniform4iv;$/;"	v	typeref:typename:PFNGLUNIFORM4IVPROC
gl3wUniform4ui	src/gl3w.c	/^PFNGLUNIFORM4UIPROC                                  gl3wUniform4ui;$/;"	v	typeref:typename:PFNGLUNIFORM4UIPROC
gl3wUniform4uiv	src/gl3w.c	/^PFNGLUNIFORM4UIVPROC                                 gl3wUniform4uiv;$/;"	v	typeref:typename:PFNGLUNIFORM4UIVPROC
gl3wUniformBlockBinding	src/gl3w.c	/^PFNGLUNIFORMBLOCKBINDINGPROC                         gl3wUniformBlockBinding;$/;"	v	typeref:typename:PFNGLUNIFORMBLOCKBINDINGPROC
gl3wUniformHandleui64ARB	src/gl3w.c	/^PFNGLUNIFORMHANDLEUI64ARBPROC                        gl3wUniformHandleui64ARB;$/;"	v	typeref:typename:PFNGLUNIFORMHANDLEUI64ARBPROC
gl3wUniformHandleui64vARB	src/gl3w.c	/^PFNGLUNIFORMHANDLEUI64VARBPROC                       gl3wUniformHandleui64vARB;$/;"	v	typeref:typename:PFNGLUNIFORMHANDLEUI64VARBPROC
gl3wUniformMatrix2dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX2DVPROC                            gl3wUniformMatrix2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2DVPROC
gl3wUniformMatrix2fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX2FVPROC                            gl3wUniformMatrix2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2FVPROC
gl3wUniformMatrix2x3dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX2X3DVPROC                          gl3wUniformMatrix2x3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3DVPROC
gl3wUniformMatrix2x3fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX2X3FVPROC                          gl3wUniformMatrix2x3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3FVPROC
gl3wUniformMatrix2x4dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX2X4DVPROC                          gl3wUniformMatrix2x4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4DVPROC
gl3wUniformMatrix2x4fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX2X4FVPROC                          gl3wUniformMatrix2x4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4FVPROC
gl3wUniformMatrix3dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX3DVPROC                            gl3wUniformMatrix3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3DVPROC
gl3wUniformMatrix3fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX3FVPROC                            gl3wUniformMatrix3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3FVPROC
gl3wUniformMatrix3x2dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX3X2DVPROC                          gl3wUniformMatrix3x2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2DVPROC
gl3wUniformMatrix3x2fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX3X2FVPROC                          gl3wUniformMatrix3x2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2FVPROC
gl3wUniformMatrix3x4dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX3X4DVPROC                          gl3wUniformMatrix3x4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4DVPROC
gl3wUniformMatrix3x4fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX3X4FVPROC                          gl3wUniformMatrix3x4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4FVPROC
gl3wUniformMatrix4dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX4DVPROC                            gl3wUniformMatrix4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4DVPROC
gl3wUniformMatrix4fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX4FVPROC                            gl3wUniformMatrix4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4FVPROC
gl3wUniformMatrix4x2dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX4X2DVPROC                          gl3wUniformMatrix4x2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2DVPROC
gl3wUniformMatrix4x2fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX4X2FVPROC                          gl3wUniformMatrix4x2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2FVPROC
gl3wUniformMatrix4x3dv	src/gl3w.c	/^PFNGLUNIFORMMATRIX4X3DVPROC                          gl3wUniformMatrix4x3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3DVPROC
gl3wUniformMatrix4x3fv	src/gl3w.c	/^PFNGLUNIFORMMATRIX4X3FVPROC                          gl3wUniformMatrix4x3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3FVPROC
gl3wUniformSubroutinesuiv	src/gl3w.c	/^PFNGLUNIFORMSUBROUTINESUIVPROC                       gl3wUniformSubroutinesuiv;$/;"	v	typeref:typename:PFNGLUNIFORMSUBROUTINESUIVPROC
gl3wUnmapBuffer	src/gl3w.c	/^PFNGLUNMAPBUFFERPROC                                 gl3wUnmapBuffer;$/;"	v	typeref:typename:PFNGLUNMAPBUFFERPROC
gl3wUnmapNamedBuffer	src/gl3w.c	/^PFNGLUNMAPNAMEDBUFFERPROC                            gl3wUnmapNamedBuffer;$/;"	v	typeref:typename:PFNGLUNMAPNAMEDBUFFERPROC
gl3wUseProgram	src/gl3w.c	/^PFNGLUSEPROGRAMPROC                                  gl3wUseProgram;$/;"	v	typeref:typename:PFNGLUSEPROGRAMPROC
gl3wUseProgramStages	src/gl3w.c	/^PFNGLUSEPROGRAMSTAGESPROC                            gl3wUseProgramStages;$/;"	v	typeref:typename:PFNGLUSEPROGRAMSTAGESPROC
gl3wValidateProgram	src/gl3w.c	/^PFNGLVALIDATEPROGRAMPROC                             gl3wValidateProgram;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPROC
gl3wValidateProgramPipeline	src/gl3w.c	/^PFNGLVALIDATEPROGRAMPIPELINEPROC                     gl3wValidateProgramPipeline;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPIPELINEPROC
gl3wVertexArrayAttribBinding	src/gl3w.c	/^PFNGLVERTEXARRAYATTRIBBINDINGPROC                    gl3wVertexArrayAttribBinding;$/;"	v	typeref:typename:PFNGLVERTEXARRAYATTRIBBINDINGPROC
gl3wVertexArrayAttribFormat	src/gl3w.c	/^PFNGLVERTEXARRAYATTRIBFORMATPROC                     gl3wVertexArrayAttribFormat;$/;"	v	typeref:typename:PFNGLVERTEXARRAYATTRIBFORMATPROC
gl3wVertexArrayAttribIFormat	src/gl3w.c	/^PFNGLVERTEXARRAYATTRIBIFORMATPROC                    gl3wVertexArrayAttribIFormat;$/;"	v	typeref:typename:PFNGLVERTEXARRAYATTRIBIFORMATPROC
gl3wVertexArrayAttribLFormat	src/gl3w.c	/^PFNGLVERTEXARRAYATTRIBLFORMATPROC                    gl3wVertexArrayAttribLFormat;$/;"	v	typeref:typename:PFNGLVERTEXARRAYATTRIBLFORMATPROC
gl3wVertexArrayBindingDivisor	src/gl3w.c	/^PFNGLVERTEXARRAYBINDINGDIVISORPROC                   gl3wVertexArrayBindingDivisor;$/;"	v	typeref:typename:PFNGLVERTEXARRAYBINDINGDIVISORPROC
gl3wVertexArrayElementBuffer	src/gl3w.c	/^PFNGLVERTEXARRAYELEMENTBUFFERPROC                    gl3wVertexArrayElementBuffer;$/;"	v	typeref:typename:PFNGLVERTEXARRAYELEMENTBUFFERPROC
gl3wVertexArrayVertexBuffer	src/gl3w.c	/^PFNGLVERTEXARRAYVERTEXBUFFERPROC                     gl3wVertexArrayVertexBuffer;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXBUFFERPROC
gl3wVertexArrayVertexBuffers	src/gl3w.c	/^PFNGLVERTEXARRAYVERTEXBUFFERSPROC                    gl3wVertexArrayVertexBuffers;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXBUFFERSPROC
gl3wVertexAttrib1d	src/gl3w.c	/^PFNGLVERTEXATTRIB1DPROC                              gl3wVertexAttrib1d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DPROC
gl3wVertexAttrib1dv	src/gl3w.c	/^PFNGLVERTEXATTRIB1DVPROC                             gl3wVertexAttrib1dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DVPROC
gl3wVertexAttrib1f	src/gl3w.c	/^PFNGLVERTEXATTRIB1FPROC                              gl3wVertexAttrib1f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FPROC
gl3wVertexAttrib1fv	src/gl3w.c	/^PFNGLVERTEXATTRIB1FVPROC                             gl3wVertexAttrib1fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FVPROC
gl3wVertexAttrib1s	src/gl3w.c	/^PFNGLVERTEXATTRIB1SPROC                              gl3wVertexAttrib1s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SPROC
gl3wVertexAttrib1sv	src/gl3w.c	/^PFNGLVERTEXATTRIB1SVPROC                             gl3wVertexAttrib1sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SVPROC
gl3wVertexAttrib2d	src/gl3w.c	/^PFNGLVERTEXATTRIB2DPROC                              gl3wVertexAttrib2d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DPROC
gl3wVertexAttrib2dv	src/gl3w.c	/^PFNGLVERTEXATTRIB2DVPROC                             gl3wVertexAttrib2dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DVPROC
gl3wVertexAttrib2f	src/gl3w.c	/^PFNGLVERTEXATTRIB2FPROC                              gl3wVertexAttrib2f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FPROC
gl3wVertexAttrib2fv	src/gl3w.c	/^PFNGLVERTEXATTRIB2FVPROC                             gl3wVertexAttrib2fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FVPROC
gl3wVertexAttrib2s	src/gl3w.c	/^PFNGLVERTEXATTRIB2SPROC                              gl3wVertexAttrib2s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SPROC
gl3wVertexAttrib2sv	src/gl3w.c	/^PFNGLVERTEXATTRIB2SVPROC                             gl3wVertexAttrib2sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SVPROC
gl3wVertexAttrib3d	src/gl3w.c	/^PFNGLVERTEXATTRIB3DPROC                              gl3wVertexAttrib3d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DPROC
gl3wVertexAttrib3dv	src/gl3w.c	/^PFNGLVERTEXATTRIB3DVPROC                             gl3wVertexAttrib3dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DVPROC
gl3wVertexAttrib3f	src/gl3w.c	/^PFNGLVERTEXATTRIB3FPROC                              gl3wVertexAttrib3f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FPROC
gl3wVertexAttrib3fv	src/gl3w.c	/^PFNGLVERTEXATTRIB3FVPROC                             gl3wVertexAttrib3fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FVPROC
gl3wVertexAttrib3s	src/gl3w.c	/^PFNGLVERTEXATTRIB3SPROC                              gl3wVertexAttrib3s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SPROC
gl3wVertexAttrib3sv	src/gl3w.c	/^PFNGLVERTEXATTRIB3SVPROC                             gl3wVertexAttrib3sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SVPROC
gl3wVertexAttrib4Nbv	src/gl3w.c	/^PFNGLVERTEXATTRIB4NBVPROC                            gl3wVertexAttrib4Nbv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NBVPROC
gl3wVertexAttrib4Niv	src/gl3w.c	/^PFNGLVERTEXATTRIB4NIVPROC                            gl3wVertexAttrib4Niv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NIVPROC
gl3wVertexAttrib4Nsv	src/gl3w.c	/^PFNGLVERTEXATTRIB4NSVPROC                            gl3wVertexAttrib4Nsv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NSVPROC
gl3wVertexAttrib4Nub	src/gl3w.c	/^PFNGLVERTEXATTRIB4NUBPROC                            gl3wVertexAttrib4Nub;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBPROC
gl3wVertexAttrib4Nubv	src/gl3w.c	/^PFNGLVERTEXATTRIB4NUBVPROC                           gl3wVertexAttrib4Nubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBVPROC
gl3wVertexAttrib4Nuiv	src/gl3w.c	/^PFNGLVERTEXATTRIB4NUIVPROC                           gl3wVertexAttrib4Nuiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUIVPROC
gl3wVertexAttrib4Nusv	src/gl3w.c	/^PFNGLVERTEXATTRIB4NUSVPROC                           gl3wVertexAttrib4Nusv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUSVPROC
gl3wVertexAttrib4bv	src/gl3w.c	/^PFNGLVERTEXATTRIB4BVPROC                             gl3wVertexAttrib4bv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4BVPROC
gl3wVertexAttrib4d	src/gl3w.c	/^PFNGLVERTEXATTRIB4DPROC                              gl3wVertexAttrib4d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DPROC
gl3wVertexAttrib4dv	src/gl3w.c	/^PFNGLVERTEXATTRIB4DVPROC                             gl3wVertexAttrib4dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DVPROC
gl3wVertexAttrib4f	src/gl3w.c	/^PFNGLVERTEXATTRIB4FPROC                              gl3wVertexAttrib4f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FPROC
gl3wVertexAttrib4fv	src/gl3w.c	/^PFNGLVERTEXATTRIB4FVPROC                             gl3wVertexAttrib4fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FVPROC
gl3wVertexAttrib4iv	src/gl3w.c	/^PFNGLVERTEXATTRIB4IVPROC                             gl3wVertexAttrib4iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4IVPROC
gl3wVertexAttrib4s	src/gl3w.c	/^PFNGLVERTEXATTRIB4SPROC                              gl3wVertexAttrib4s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SPROC
gl3wVertexAttrib4sv	src/gl3w.c	/^PFNGLVERTEXATTRIB4SVPROC                             gl3wVertexAttrib4sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SVPROC
gl3wVertexAttrib4ubv	src/gl3w.c	/^PFNGLVERTEXATTRIB4UBVPROC                            gl3wVertexAttrib4ubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UBVPROC
gl3wVertexAttrib4uiv	src/gl3w.c	/^PFNGLVERTEXATTRIB4UIVPROC                            gl3wVertexAttrib4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UIVPROC
gl3wVertexAttrib4usv	src/gl3w.c	/^PFNGLVERTEXATTRIB4USVPROC                            gl3wVertexAttrib4usv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4USVPROC
gl3wVertexAttribBinding	src/gl3w.c	/^PFNGLVERTEXATTRIBBINDINGPROC                         gl3wVertexAttribBinding;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBBINDINGPROC
gl3wVertexAttribDivisor	src/gl3w.c	/^PFNGLVERTEXATTRIBDIVISORPROC                         gl3wVertexAttribDivisor;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBDIVISORPROC
gl3wVertexAttribFormat	src/gl3w.c	/^PFNGLVERTEXATTRIBFORMATPROC                          gl3wVertexAttribFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBFORMATPROC
gl3wVertexAttribI1i	src/gl3w.c	/^PFNGLVERTEXATTRIBI1IPROC                             gl3wVertexAttribI1i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IPROC
gl3wVertexAttribI1iv	src/gl3w.c	/^PFNGLVERTEXATTRIBI1IVPROC                            gl3wVertexAttribI1iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IVPROC
gl3wVertexAttribI1ui	src/gl3w.c	/^PFNGLVERTEXATTRIBI1UIPROC                            gl3wVertexAttribI1ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIPROC
gl3wVertexAttribI1uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBI1UIVPROC                           gl3wVertexAttribI1uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIVPROC
gl3wVertexAttribI2i	src/gl3w.c	/^PFNGLVERTEXATTRIBI2IPROC                             gl3wVertexAttribI2i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IPROC
gl3wVertexAttribI2iv	src/gl3w.c	/^PFNGLVERTEXATTRIBI2IVPROC                            gl3wVertexAttribI2iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IVPROC
gl3wVertexAttribI2ui	src/gl3w.c	/^PFNGLVERTEXATTRIBI2UIPROC                            gl3wVertexAttribI2ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIPROC
gl3wVertexAttribI2uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBI2UIVPROC                           gl3wVertexAttribI2uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIVPROC
gl3wVertexAttribI3i	src/gl3w.c	/^PFNGLVERTEXATTRIBI3IPROC                             gl3wVertexAttribI3i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IPROC
gl3wVertexAttribI3iv	src/gl3w.c	/^PFNGLVERTEXATTRIBI3IVPROC                            gl3wVertexAttribI3iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IVPROC
gl3wVertexAttribI3ui	src/gl3w.c	/^PFNGLVERTEXATTRIBI3UIPROC                            gl3wVertexAttribI3ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIPROC
gl3wVertexAttribI3uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBI3UIVPROC                           gl3wVertexAttribI3uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIVPROC
gl3wVertexAttribI4bv	src/gl3w.c	/^PFNGLVERTEXATTRIBI4BVPROC                            gl3wVertexAttribI4bv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4BVPROC
gl3wVertexAttribI4i	src/gl3w.c	/^PFNGLVERTEXATTRIBI4IPROC                             gl3wVertexAttribI4i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IPROC
gl3wVertexAttribI4iv	src/gl3w.c	/^PFNGLVERTEXATTRIBI4IVPROC                            gl3wVertexAttribI4iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IVPROC
gl3wVertexAttribI4sv	src/gl3w.c	/^PFNGLVERTEXATTRIBI4SVPROC                            gl3wVertexAttribI4sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4SVPROC
gl3wVertexAttribI4ubv	src/gl3w.c	/^PFNGLVERTEXATTRIBI4UBVPROC                           gl3wVertexAttribI4ubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UBVPROC
gl3wVertexAttribI4ui	src/gl3w.c	/^PFNGLVERTEXATTRIBI4UIPROC                            gl3wVertexAttribI4ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIPROC
gl3wVertexAttribI4uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBI4UIVPROC                           gl3wVertexAttribI4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIVPROC
gl3wVertexAttribI4usv	src/gl3w.c	/^PFNGLVERTEXATTRIBI4USVPROC                           gl3wVertexAttribI4usv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4USVPROC
gl3wVertexAttribIFormat	src/gl3w.c	/^PFNGLVERTEXATTRIBIFORMATPROC                         gl3wVertexAttribIFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIFORMATPROC
gl3wVertexAttribIPointer	src/gl3w.c	/^PFNGLVERTEXATTRIBIPOINTERPROC                        gl3wVertexAttribIPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIPOINTERPROC
gl3wVertexAttribL1d	src/gl3w.c	/^PFNGLVERTEXATTRIBL1DPROC                             gl3wVertexAttribL1d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1DPROC
gl3wVertexAttribL1dv	src/gl3w.c	/^PFNGLVERTEXATTRIBL1DVPROC                            gl3wVertexAttribL1dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1DVPROC
gl3wVertexAttribL1ui64ARB	src/gl3w.c	/^PFNGLVERTEXATTRIBL1UI64ARBPROC                       gl3wVertexAttribL1ui64ARB;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1UI64ARBPROC
gl3wVertexAttribL1ui64vARB	src/gl3w.c	/^PFNGLVERTEXATTRIBL1UI64VARBPROC                      gl3wVertexAttribL1ui64vARB;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1UI64VARBPROC
gl3wVertexAttribL2d	src/gl3w.c	/^PFNGLVERTEXATTRIBL2DPROC                             gl3wVertexAttribL2d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL2DPROC
gl3wVertexAttribL2dv	src/gl3w.c	/^PFNGLVERTEXATTRIBL2DVPROC                            gl3wVertexAttribL2dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL2DVPROC
gl3wVertexAttribL3d	src/gl3w.c	/^PFNGLVERTEXATTRIBL3DPROC                             gl3wVertexAttribL3d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL3DPROC
gl3wVertexAttribL3dv	src/gl3w.c	/^PFNGLVERTEXATTRIBL3DVPROC                            gl3wVertexAttribL3dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL3DVPROC
gl3wVertexAttribL4d	src/gl3w.c	/^PFNGLVERTEXATTRIBL4DPROC                             gl3wVertexAttribL4d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL4DPROC
gl3wVertexAttribL4dv	src/gl3w.c	/^PFNGLVERTEXATTRIBL4DVPROC                            gl3wVertexAttribL4dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL4DVPROC
gl3wVertexAttribLFormat	src/gl3w.c	/^PFNGLVERTEXATTRIBLFORMATPROC                         gl3wVertexAttribLFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBLFORMATPROC
gl3wVertexAttribLPointer	src/gl3w.c	/^PFNGLVERTEXATTRIBLPOINTERPROC                        gl3wVertexAttribLPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBLPOINTERPROC
gl3wVertexAttribP1ui	src/gl3w.c	/^PFNGLVERTEXATTRIBP1UIPROC                            gl3wVertexAttribP1ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIPROC
gl3wVertexAttribP1uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBP1UIVPROC                           gl3wVertexAttribP1uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIVPROC
gl3wVertexAttribP2ui	src/gl3w.c	/^PFNGLVERTEXATTRIBP2UIPROC                            gl3wVertexAttribP2ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIPROC
gl3wVertexAttribP2uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBP2UIVPROC                           gl3wVertexAttribP2uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIVPROC
gl3wVertexAttribP3ui	src/gl3w.c	/^PFNGLVERTEXATTRIBP3UIPROC                            gl3wVertexAttribP3ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIPROC
gl3wVertexAttribP3uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBP3UIVPROC                           gl3wVertexAttribP3uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIVPROC
gl3wVertexAttribP4ui	src/gl3w.c	/^PFNGLVERTEXATTRIBP4UIPROC                            gl3wVertexAttribP4ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIPROC
gl3wVertexAttribP4uiv	src/gl3w.c	/^PFNGLVERTEXATTRIBP4UIVPROC                           gl3wVertexAttribP4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIVPROC
gl3wVertexAttribPointer	src/gl3w.c	/^PFNGLVERTEXATTRIBPOINTERPROC                         gl3wVertexAttribPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBPOINTERPROC
gl3wVertexBindingDivisor	src/gl3w.c	/^PFNGLVERTEXBINDINGDIVISORPROC                        gl3wVertexBindingDivisor;$/;"	v	typeref:typename:PFNGLVERTEXBINDINGDIVISORPROC
gl3wViewport	src/gl3w.c	/^PFNGLVIEWPORTPROC                                    gl3wViewport;$/;"	v	typeref:typename:PFNGLVIEWPORTPROC
gl3wViewportArrayv	src/gl3w.c	/^PFNGLVIEWPORTARRAYVPROC                              gl3wViewportArrayv;$/;"	v	typeref:typename:PFNGLVIEWPORTARRAYVPROC
gl3wViewportIndexedf	src/gl3w.c	/^PFNGLVIEWPORTINDEXEDFPROC                            gl3wViewportIndexedf;$/;"	v	typeref:typename:PFNGLVIEWPORTINDEXEDFPROC
gl3wViewportIndexedfv	src/gl3w.c	/^PFNGLVIEWPORTINDEXEDFVPROC                           gl3wViewportIndexedfv;$/;"	v	typeref:typename:PFNGLVIEWPORTINDEXEDFVPROC
gl3wWaitSync	src/gl3w.c	/^PFNGLWAITSYNCPROC                                    gl3wWaitSync;$/;"	v	typeref:typename:PFNGLWAITSYNCPROC
glActiveShaderProgram	include/GL/gl3w.h	/^#define glActiveShaderProgram /;"	d
glActiveTexture	include/GL/gl3w.h	/^#define glActiveTexture /;"	d
glAttachShader	include/GL/gl3w.h	/^#define glAttachShader /;"	d
glBeginConditionalRender	include/GL/gl3w.h	/^#define glBeginConditionalRender /;"	d
glBeginQuery	include/GL/gl3w.h	/^#define glBeginQuery /;"	d
glBeginQueryIndexed	include/GL/gl3w.h	/^#define glBeginQueryIndexed /;"	d
glBeginTransformFeedback	include/GL/gl3w.h	/^#define glBeginTransformFeedback /;"	d
glBindAttribLocation	include/GL/gl3w.h	/^#define glBindAttribLocation /;"	d
glBindBuffer	include/GL/gl3w.h	/^#define glBindBuffer /;"	d
glBindBufferBase	include/GL/gl3w.h	/^#define glBindBufferBase /;"	d
glBindBufferRange	include/GL/gl3w.h	/^#define glBindBufferRange /;"	d
glBindBuffersBase	include/GL/gl3w.h	/^#define glBindBuffersBase /;"	d
glBindBuffersRange	include/GL/gl3w.h	/^#define glBindBuffersRange /;"	d
glBindFragDataLocation	include/GL/gl3w.h	/^#define glBindFragDataLocation /;"	d
glBindFragDataLocationIndexed	include/GL/gl3w.h	/^#define glBindFragDataLocationIndexed /;"	d
glBindFramebuffer	include/GL/gl3w.h	/^#define glBindFramebuffer /;"	d
glBindImageTexture	include/GL/gl3w.h	/^#define glBindImageTexture /;"	d
glBindImageTextures	include/GL/gl3w.h	/^#define glBindImageTextures /;"	d
glBindProgramPipeline	include/GL/gl3w.h	/^#define glBindProgramPipeline /;"	d
glBindRenderbuffer	include/GL/gl3w.h	/^#define glBindRenderbuffer /;"	d
glBindSampler	include/GL/gl3w.h	/^#define glBindSampler /;"	d
glBindSamplers	include/GL/gl3w.h	/^#define glBindSamplers /;"	d
glBindTexture	include/GL/gl3w.h	/^#define glBindTexture /;"	d
glBindTextureUnit	include/GL/gl3w.h	/^#define glBindTextureUnit /;"	d
glBindTextures	include/GL/gl3w.h	/^#define glBindTextures /;"	d
glBindTransformFeedback	include/GL/gl3w.h	/^#define glBindTransformFeedback /;"	d
glBindVertexArray	include/GL/gl3w.h	/^#define glBindVertexArray /;"	d
glBindVertexBuffer	include/GL/gl3w.h	/^#define glBindVertexBuffer /;"	d
glBindVertexBuffers	include/GL/gl3w.h	/^#define glBindVertexBuffers /;"	d
glBlendColor	include/GL/gl3w.h	/^#define glBlendColor /;"	d
glBlendEquation	include/GL/gl3w.h	/^#define glBlendEquation /;"	d
glBlendEquationSeparate	include/GL/gl3w.h	/^#define glBlendEquationSeparate /;"	d
glBlendEquationSeparatei	include/GL/gl3w.h	/^#define glBlendEquationSeparatei /;"	d
glBlendEquationSeparateiARB	include/GL/gl3w.h	/^#define glBlendEquationSeparateiARB /;"	d
glBlendEquationi	include/GL/gl3w.h	/^#define glBlendEquationi /;"	d
glBlendEquationiARB	include/GL/gl3w.h	/^#define glBlendEquationiARB /;"	d
glBlendFunc	include/GL/gl3w.h	/^#define glBlendFunc /;"	d
glBlendFuncSeparate	include/GL/gl3w.h	/^#define glBlendFuncSeparate /;"	d
glBlendFuncSeparatei	include/GL/gl3w.h	/^#define glBlendFuncSeparatei /;"	d
glBlendFuncSeparateiARB	include/GL/gl3w.h	/^#define glBlendFuncSeparateiARB /;"	d
glBlendFunci	include/GL/gl3w.h	/^#define glBlendFunci /;"	d
glBlendFunciARB	include/GL/gl3w.h	/^#define glBlendFunciARB /;"	d
glBlitFramebuffer	include/GL/gl3w.h	/^#define glBlitFramebuffer /;"	d
glBlitNamedFramebuffer	include/GL/gl3w.h	/^#define glBlitNamedFramebuffer /;"	d
glBufferData	include/GL/gl3w.h	/^#define glBufferData /;"	d
glBufferPageCommitmentARB	include/GL/gl3w.h	/^#define glBufferPageCommitmentARB /;"	d
glBufferStorage	include/GL/gl3w.h	/^#define glBufferStorage /;"	d
glBufferSubData	include/GL/gl3w.h	/^#define glBufferSubData /;"	d
glCheckFramebufferStatus	include/GL/gl3w.h	/^#define glCheckFramebufferStatus /;"	d
glCheckNamedFramebufferStatus	include/GL/gl3w.h	/^#define glCheckNamedFramebufferStatus /;"	d
glClampColor	include/GL/gl3w.h	/^#define glClampColor /;"	d
glClear	include/GL/gl3w.h	/^#define glClear /;"	d
glClearBufferData	include/GL/gl3w.h	/^#define glClearBufferData /;"	d
glClearBufferSubData	include/GL/gl3w.h	/^#define glClearBufferSubData /;"	d
glClearBufferfi	include/GL/gl3w.h	/^#define glClearBufferfi /;"	d
glClearBufferfv	include/GL/gl3w.h	/^#define glClearBufferfv /;"	d
glClearBufferiv	include/GL/gl3w.h	/^#define glClearBufferiv /;"	d
glClearBufferuiv	include/GL/gl3w.h	/^#define glClearBufferuiv /;"	d
glClearColor	include/GL/gl3w.h	/^#define glClearColor /;"	d
glClearDepth	include/GL/gl3w.h	/^#define glClearDepth /;"	d
glClearDepthf	include/GL/gl3w.h	/^#define glClearDepthf /;"	d
glClearNamedBufferData	include/GL/gl3w.h	/^#define glClearNamedBufferData /;"	d
glClearNamedBufferSubData	include/GL/gl3w.h	/^#define glClearNamedBufferSubData /;"	d
glClearNamedFramebufferfi	include/GL/gl3w.h	/^#define glClearNamedFramebufferfi /;"	d
glClearNamedFramebufferfv	include/GL/gl3w.h	/^#define glClearNamedFramebufferfv /;"	d
glClearNamedFramebufferiv	include/GL/gl3w.h	/^#define glClearNamedFramebufferiv /;"	d
glClearNamedFramebufferuiv	include/GL/gl3w.h	/^#define glClearNamedFramebufferuiv /;"	d
glClearStencil	include/GL/gl3w.h	/^#define glClearStencil /;"	d
glClearTexImage	include/GL/gl3w.h	/^#define glClearTexImage /;"	d
glClearTexSubImage	include/GL/gl3w.h	/^#define glClearTexSubImage /;"	d
glClientWaitSync	include/GL/gl3w.h	/^#define glClientWaitSync /;"	d
glClipControl	include/GL/gl3w.h	/^#define glClipControl /;"	d
glColorMask	include/GL/gl3w.h	/^#define glColorMask /;"	d
glColorMaski	include/GL/gl3w.h	/^#define glColorMaski /;"	d
glCompileShader	include/GL/gl3w.h	/^#define glCompileShader /;"	d
glCompileShaderIncludeARB	include/GL/gl3w.h	/^#define glCompileShaderIncludeARB /;"	d
glCompressedTexImage1D	include/GL/gl3w.h	/^#define glCompressedTexImage1D /;"	d
glCompressedTexImage2D	include/GL/gl3w.h	/^#define glCompressedTexImage2D /;"	d
glCompressedTexImage3D	include/GL/gl3w.h	/^#define glCompressedTexImage3D /;"	d
glCompressedTexSubImage1D	include/GL/gl3w.h	/^#define glCompressedTexSubImage1D /;"	d
glCompressedTexSubImage2D	include/GL/gl3w.h	/^#define glCompressedTexSubImage2D /;"	d
glCompressedTexSubImage3D	include/GL/gl3w.h	/^#define glCompressedTexSubImage3D /;"	d
glCompressedTextureSubImage1D	include/GL/gl3w.h	/^#define glCompressedTextureSubImage1D /;"	d
glCompressedTextureSubImage2D	include/GL/gl3w.h	/^#define glCompressedTextureSubImage2D /;"	d
glCompressedTextureSubImage3D	include/GL/gl3w.h	/^#define glCompressedTextureSubImage3D /;"	d
glCopyBufferSubData	include/GL/gl3w.h	/^#define glCopyBufferSubData /;"	d
glCopyImageSubData	include/GL/gl3w.h	/^#define glCopyImageSubData /;"	d
glCopyNamedBufferSubData	include/GL/gl3w.h	/^#define glCopyNamedBufferSubData /;"	d
glCopyTexImage1D	include/GL/gl3w.h	/^#define glCopyTexImage1D /;"	d
glCopyTexImage2D	include/GL/gl3w.h	/^#define glCopyTexImage2D /;"	d
glCopyTexSubImage1D	include/GL/gl3w.h	/^#define glCopyTexSubImage1D /;"	d
glCopyTexSubImage2D	include/GL/gl3w.h	/^#define glCopyTexSubImage2D /;"	d
glCopyTexSubImage3D	include/GL/gl3w.h	/^#define glCopyTexSubImage3D /;"	d
glCopyTextureSubImage1D	include/GL/gl3w.h	/^#define glCopyTextureSubImage1D /;"	d
glCopyTextureSubImage2D	include/GL/gl3w.h	/^#define glCopyTextureSubImage2D /;"	d
glCopyTextureSubImage3D	include/GL/gl3w.h	/^#define glCopyTextureSubImage3D /;"	d
glCreateBuffers	include/GL/gl3w.h	/^#define glCreateBuffers /;"	d
glCreateFramebuffers	include/GL/gl3w.h	/^#define glCreateFramebuffers /;"	d
glCreateProgram	include/GL/gl3w.h	/^#define glCreateProgram /;"	d
glCreateProgramPipelines	include/GL/gl3w.h	/^#define glCreateProgramPipelines /;"	d
glCreateQueries	include/GL/gl3w.h	/^#define glCreateQueries /;"	d
glCreateRenderbuffers	include/GL/gl3w.h	/^#define glCreateRenderbuffers /;"	d
glCreateSamplers	include/GL/gl3w.h	/^#define glCreateSamplers /;"	d
glCreateShader	include/GL/gl3w.h	/^#define glCreateShader /;"	d
glCreateShaderProgramv	include/GL/gl3w.h	/^#define glCreateShaderProgramv /;"	d
glCreateSyncFromCLeventARB	include/GL/gl3w.h	/^#define glCreateSyncFromCLeventARB /;"	d
glCreateTextures	include/GL/gl3w.h	/^#define glCreateTextures /;"	d
glCreateTransformFeedbacks	include/GL/gl3w.h	/^#define glCreateTransformFeedbacks /;"	d
glCreateVertexArrays	include/GL/gl3w.h	/^#define glCreateVertexArrays /;"	d
glCullFace	include/GL/gl3w.h	/^#define glCullFace /;"	d
glDebugMessageCallback	include/GL/gl3w.h	/^#define glDebugMessageCallback /;"	d
glDebugMessageCallbackARB	include/GL/gl3w.h	/^#define glDebugMessageCallbackARB /;"	d
glDebugMessageControl	include/GL/gl3w.h	/^#define glDebugMessageControl /;"	d
glDebugMessageControlARB	include/GL/gl3w.h	/^#define glDebugMessageControlARB /;"	d
glDebugMessageInsert	include/GL/gl3w.h	/^#define glDebugMessageInsert /;"	d
glDebugMessageInsertARB	include/GL/gl3w.h	/^#define glDebugMessageInsertARB /;"	d
glDeleteBuffers	include/GL/gl3w.h	/^#define glDeleteBuffers /;"	d
glDeleteFramebuffers	include/GL/gl3w.h	/^#define glDeleteFramebuffers /;"	d
glDeleteNamedStringARB	include/GL/gl3w.h	/^#define glDeleteNamedStringARB /;"	d
glDeleteProgram	include/GL/gl3w.h	/^#define glDeleteProgram /;"	d
glDeleteProgramPipelines	include/GL/gl3w.h	/^#define glDeleteProgramPipelines /;"	d
glDeleteQueries	include/GL/gl3w.h	/^#define glDeleteQueries /;"	d
glDeleteRenderbuffers	include/GL/gl3w.h	/^#define glDeleteRenderbuffers /;"	d
glDeleteSamplers	include/GL/gl3w.h	/^#define glDeleteSamplers /;"	d
glDeleteShader	include/GL/gl3w.h	/^#define glDeleteShader /;"	d
glDeleteSync	include/GL/gl3w.h	/^#define glDeleteSync /;"	d
glDeleteTextures	include/GL/gl3w.h	/^#define glDeleteTextures /;"	d
glDeleteTransformFeedbacks	include/GL/gl3w.h	/^#define glDeleteTransformFeedbacks /;"	d
glDeleteVertexArrays	include/GL/gl3w.h	/^#define glDeleteVertexArrays /;"	d
glDepthFunc	include/GL/gl3w.h	/^#define glDepthFunc /;"	d
glDepthMask	include/GL/gl3w.h	/^#define glDepthMask /;"	d
glDepthRange	include/GL/gl3w.h	/^#define glDepthRange /;"	d
glDepthRangeArrayv	include/GL/gl3w.h	/^#define glDepthRangeArrayv /;"	d
glDepthRangeIndexed	include/GL/gl3w.h	/^#define glDepthRangeIndexed /;"	d
glDepthRangef	include/GL/gl3w.h	/^#define glDepthRangef /;"	d
glDetachShader	include/GL/gl3w.h	/^#define glDetachShader /;"	d
glDisable	include/GL/gl3w.h	/^#define glDisable /;"	d
glDisableVertexArrayAttrib	include/GL/gl3w.h	/^#define glDisableVertexArrayAttrib /;"	d
glDisableVertexAttribArray	include/GL/gl3w.h	/^#define glDisableVertexAttribArray /;"	d
glDisablei	include/GL/gl3w.h	/^#define glDisablei /;"	d
glDispatchCompute	include/GL/gl3w.h	/^#define glDispatchCompute /;"	d
glDispatchComputeGroupSizeARB	include/GL/gl3w.h	/^#define glDispatchComputeGroupSizeARB /;"	d
glDispatchComputeIndirect	include/GL/gl3w.h	/^#define glDispatchComputeIndirect /;"	d
glDrawArrays	include/GL/gl3w.h	/^#define glDrawArrays /;"	d
glDrawArraysIndirect	include/GL/gl3w.h	/^#define glDrawArraysIndirect /;"	d
glDrawArraysInstanced	include/GL/gl3w.h	/^#define glDrawArraysInstanced /;"	d
glDrawArraysInstancedBaseInstance	include/GL/gl3w.h	/^#define glDrawArraysInstancedBaseInstance /;"	d
glDrawBuffer	include/GL/gl3w.h	/^#define glDrawBuffer /;"	d
glDrawBuffers	include/GL/gl3w.h	/^#define glDrawBuffers /;"	d
glDrawElements	include/GL/gl3w.h	/^#define glDrawElements /;"	d
glDrawElementsBaseVertex	include/GL/gl3w.h	/^#define glDrawElementsBaseVertex /;"	d
glDrawElementsIndirect	include/GL/gl3w.h	/^#define glDrawElementsIndirect /;"	d
glDrawElementsInstanced	include/GL/gl3w.h	/^#define glDrawElementsInstanced /;"	d
glDrawElementsInstancedBaseInstance	include/GL/gl3w.h	/^#define glDrawElementsInstancedBaseInstance /;"	d
glDrawElementsInstancedBaseVertex	include/GL/gl3w.h	/^#define glDrawElementsInstancedBaseVertex /;"	d
glDrawElementsInstancedBaseVertexBaseInstance	include/GL/gl3w.h	/^#define glDrawElementsInstancedBaseVertexBaseInstance /;"	d
glDrawRangeElements	include/GL/gl3w.h	/^#define glDrawRangeElements /;"	d
glDrawRangeElementsBaseVertex	include/GL/gl3w.h	/^#define glDrawRangeElementsBaseVertex /;"	d
glDrawTransformFeedback	include/GL/gl3w.h	/^#define glDrawTransformFeedback /;"	d
glDrawTransformFeedbackInstanced	include/GL/gl3w.h	/^#define glDrawTransformFeedbackInstanced /;"	d
glDrawTransformFeedbackStream	include/GL/gl3w.h	/^#define glDrawTransformFeedbackStream /;"	d
glDrawTransformFeedbackStreamInstanced	include/GL/gl3w.h	/^#define glDrawTransformFeedbackStreamInstanced /;"	d
glEnable	include/GL/gl3w.h	/^#define glEnable /;"	d
glEnableVertexArrayAttrib	include/GL/gl3w.h	/^#define glEnableVertexArrayAttrib /;"	d
glEnableVertexAttribArray	include/GL/gl3w.h	/^#define glEnableVertexAttribArray /;"	d
glEnablei	include/GL/gl3w.h	/^#define glEnablei /;"	d
glEndConditionalRender	include/GL/gl3w.h	/^#define glEndConditionalRender /;"	d
glEndQuery	include/GL/gl3w.h	/^#define glEndQuery /;"	d
glEndQueryIndexed	include/GL/gl3w.h	/^#define glEndQueryIndexed /;"	d
glEndTransformFeedback	include/GL/gl3w.h	/^#define glEndTransformFeedback /;"	d
glFenceSync	include/GL/gl3w.h	/^#define glFenceSync /;"	d
glFinish	include/GL/gl3w.h	/^#define glFinish /;"	d
glFlush	include/GL/gl3w.h	/^#define glFlush /;"	d
glFlushMappedBufferRange	include/GL/gl3w.h	/^#define glFlushMappedBufferRange /;"	d
glFlushMappedNamedBufferRange	include/GL/gl3w.h	/^#define glFlushMappedNamedBufferRange /;"	d
glFramebufferParameteri	include/GL/gl3w.h	/^#define glFramebufferParameteri /;"	d
glFramebufferRenderbuffer	include/GL/gl3w.h	/^#define glFramebufferRenderbuffer /;"	d
glFramebufferTexture	include/GL/gl3w.h	/^#define glFramebufferTexture /;"	d
glFramebufferTexture1D	include/GL/gl3w.h	/^#define glFramebufferTexture1D /;"	d
glFramebufferTexture2D	include/GL/gl3w.h	/^#define glFramebufferTexture2D /;"	d
glFramebufferTexture3D	include/GL/gl3w.h	/^#define glFramebufferTexture3D /;"	d
glFramebufferTextureLayer	include/GL/gl3w.h	/^#define glFramebufferTextureLayer /;"	d
glFrontFace	include/GL/gl3w.h	/^#define glFrontFace /;"	d
glGenBuffers	include/GL/gl3w.h	/^#define glGenBuffers /;"	d
glGenFramebuffers	include/GL/gl3w.h	/^#define glGenFramebuffers /;"	d
glGenProgramPipelines	include/GL/gl3w.h	/^#define glGenProgramPipelines /;"	d
glGenQueries	include/GL/gl3w.h	/^#define glGenQueries /;"	d
glGenRenderbuffers	include/GL/gl3w.h	/^#define glGenRenderbuffers /;"	d
glGenSamplers	include/GL/gl3w.h	/^#define glGenSamplers /;"	d
glGenTextures	include/GL/gl3w.h	/^#define glGenTextures /;"	d
glGenTransformFeedbacks	include/GL/gl3w.h	/^#define glGenTransformFeedbacks /;"	d
glGenVertexArrays	include/GL/gl3w.h	/^#define glGenVertexArrays /;"	d
glGenerateMipmap	include/GL/gl3w.h	/^#define glGenerateMipmap /;"	d
glGenerateTextureMipmap	include/GL/gl3w.h	/^#define glGenerateTextureMipmap /;"	d
glGetActiveAtomicCounterBufferiv	include/GL/gl3w.h	/^#define glGetActiveAtomicCounterBufferiv /;"	d
glGetActiveAttrib	include/GL/gl3w.h	/^#define glGetActiveAttrib /;"	d
glGetActiveSubroutineName	include/GL/gl3w.h	/^#define glGetActiveSubroutineName /;"	d
glGetActiveSubroutineUniformName	include/GL/gl3w.h	/^#define glGetActiveSubroutineUniformName /;"	d
glGetActiveSubroutineUniformiv	include/GL/gl3w.h	/^#define glGetActiveSubroutineUniformiv /;"	d
glGetActiveUniform	include/GL/gl3w.h	/^#define glGetActiveUniform /;"	d
glGetActiveUniformBlockName	include/GL/gl3w.h	/^#define glGetActiveUniformBlockName /;"	d
glGetActiveUniformBlockiv	include/GL/gl3w.h	/^#define glGetActiveUniformBlockiv /;"	d
glGetActiveUniformName	include/GL/gl3w.h	/^#define glGetActiveUniformName /;"	d
glGetActiveUniformsiv	include/GL/gl3w.h	/^#define glGetActiveUniformsiv /;"	d
glGetAttachedShaders	include/GL/gl3w.h	/^#define glGetAttachedShaders /;"	d
glGetAttribLocation	include/GL/gl3w.h	/^#define glGetAttribLocation /;"	d
glGetBooleani_v	include/GL/gl3w.h	/^#define glGetBooleani_v /;"	d
glGetBooleanv	include/GL/gl3w.h	/^#define glGetBooleanv /;"	d
glGetBufferParameteri64v	include/GL/gl3w.h	/^#define glGetBufferParameteri64v /;"	d
glGetBufferParameteriv	include/GL/gl3w.h	/^#define glGetBufferParameteriv /;"	d
glGetBufferPointerv	include/GL/gl3w.h	/^#define glGetBufferPointerv /;"	d
glGetBufferSubData	include/GL/gl3w.h	/^#define glGetBufferSubData /;"	d
glGetCompressedTexImage	include/GL/gl3w.h	/^#define glGetCompressedTexImage /;"	d
glGetCompressedTextureImage	include/GL/gl3w.h	/^#define glGetCompressedTextureImage /;"	d
glGetCompressedTextureSubImage	include/GL/gl3w.h	/^#define glGetCompressedTextureSubImage /;"	d
glGetDebugMessageLog	include/GL/gl3w.h	/^#define glGetDebugMessageLog /;"	d
glGetDebugMessageLogARB	include/GL/gl3w.h	/^#define glGetDebugMessageLogARB /;"	d
glGetDoublei_v	include/GL/gl3w.h	/^#define glGetDoublei_v /;"	d
glGetDoublev	include/GL/gl3w.h	/^#define glGetDoublev /;"	d
glGetError	include/GL/gl3w.h	/^#define glGetError /;"	d
glGetFloati_v	include/GL/gl3w.h	/^#define glGetFloati_v /;"	d
glGetFloatv	include/GL/gl3w.h	/^#define glGetFloatv /;"	d
glGetFragDataIndex	include/GL/gl3w.h	/^#define glGetFragDataIndex /;"	d
glGetFragDataLocation	include/GL/gl3w.h	/^#define glGetFragDataLocation /;"	d
glGetFramebufferAttachmentParameteriv	include/GL/gl3w.h	/^#define glGetFramebufferAttachmentParameteriv /;"	d
glGetFramebufferParameteriv	include/GL/gl3w.h	/^#define glGetFramebufferParameteriv /;"	d
glGetGraphicsResetStatus	include/GL/gl3w.h	/^#define glGetGraphicsResetStatus /;"	d
glGetGraphicsResetStatusARB	include/GL/gl3w.h	/^#define glGetGraphicsResetStatusARB /;"	d
glGetImageHandleARB	include/GL/gl3w.h	/^#define glGetImageHandleARB /;"	d
glGetInteger64i_v	include/GL/gl3w.h	/^#define glGetInteger64i_v /;"	d
glGetInteger64v	include/GL/gl3w.h	/^#define glGetInteger64v /;"	d
glGetIntegeri_v	include/GL/gl3w.h	/^#define glGetIntegeri_v /;"	d
glGetIntegerv	include/GL/gl3w.h	/^#define glGetIntegerv /;"	d
glGetInternalformati64v	include/GL/gl3w.h	/^#define glGetInternalformati64v /;"	d
glGetInternalformativ	include/GL/gl3w.h	/^#define glGetInternalformativ /;"	d
glGetMultisamplefv	include/GL/gl3w.h	/^#define glGetMultisamplefv /;"	d
glGetNamedBufferParameteri64v	include/GL/gl3w.h	/^#define glGetNamedBufferParameteri64v /;"	d
glGetNamedBufferParameteriv	include/GL/gl3w.h	/^#define glGetNamedBufferParameteriv /;"	d
glGetNamedBufferPointerv	include/GL/gl3w.h	/^#define glGetNamedBufferPointerv /;"	d
glGetNamedBufferSubData	include/GL/gl3w.h	/^#define glGetNamedBufferSubData /;"	d
glGetNamedFramebufferAttachmentParameteriv	include/GL/gl3w.h	/^#define glGetNamedFramebufferAttachmentParameteriv /;"	d
glGetNamedFramebufferParameteriv	include/GL/gl3w.h	/^#define glGetNamedFramebufferParameteriv /;"	d
glGetNamedRenderbufferParameteriv	include/GL/gl3w.h	/^#define glGetNamedRenderbufferParameteriv /;"	d
glGetNamedStringARB	include/GL/gl3w.h	/^#define glGetNamedStringARB /;"	d
glGetNamedStringivARB	include/GL/gl3w.h	/^#define glGetNamedStringivARB /;"	d
glGetObjectLabel	include/GL/gl3w.h	/^#define glGetObjectLabel /;"	d
glGetObjectPtrLabel	include/GL/gl3w.h	/^#define glGetObjectPtrLabel /;"	d
glGetPointerv	include/GL/gl3w.h	/^#define glGetPointerv /;"	d
glGetProgramBinary	include/GL/gl3w.h	/^#define glGetProgramBinary /;"	d
glGetProgramInfoLog	include/GL/gl3w.h	/^#define glGetProgramInfoLog /;"	d
glGetProgramInterfaceiv	include/GL/gl3w.h	/^#define glGetProgramInterfaceiv /;"	d
glGetProgramPipelineInfoLog	include/GL/gl3w.h	/^#define glGetProgramPipelineInfoLog /;"	d
glGetProgramPipelineiv	include/GL/gl3w.h	/^#define glGetProgramPipelineiv /;"	d
glGetProgramResourceIndex	include/GL/gl3w.h	/^#define glGetProgramResourceIndex /;"	d
glGetProgramResourceLocation	include/GL/gl3w.h	/^#define glGetProgramResourceLocation /;"	d
glGetProgramResourceLocationIndex	include/GL/gl3w.h	/^#define glGetProgramResourceLocationIndex /;"	d
glGetProgramResourceName	include/GL/gl3w.h	/^#define glGetProgramResourceName /;"	d
glGetProgramResourceiv	include/GL/gl3w.h	/^#define glGetProgramResourceiv /;"	d
glGetProgramStageiv	include/GL/gl3w.h	/^#define glGetProgramStageiv /;"	d
glGetProgramiv	include/GL/gl3w.h	/^#define glGetProgramiv /;"	d
glGetQueryBufferObjecti64v	include/GL/gl3w.h	/^#define glGetQueryBufferObjecti64v /;"	d
glGetQueryBufferObjectiv	include/GL/gl3w.h	/^#define glGetQueryBufferObjectiv /;"	d
glGetQueryBufferObjectui64v	include/GL/gl3w.h	/^#define glGetQueryBufferObjectui64v /;"	d
glGetQueryBufferObjectuiv	include/GL/gl3w.h	/^#define glGetQueryBufferObjectuiv /;"	d
glGetQueryIndexediv	include/GL/gl3w.h	/^#define glGetQueryIndexediv /;"	d
glGetQueryObjecti64v	include/GL/gl3w.h	/^#define glGetQueryObjecti64v /;"	d
glGetQueryObjectiv	include/GL/gl3w.h	/^#define glGetQueryObjectiv /;"	d
glGetQueryObjectui64v	include/GL/gl3w.h	/^#define glGetQueryObjectui64v /;"	d
glGetQueryObjectuiv	include/GL/gl3w.h	/^#define glGetQueryObjectuiv /;"	d
glGetQueryiv	include/GL/gl3w.h	/^#define glGetQueryiv /;"	d
glGetRenderbufferParameteriv	include/GL/gl3w.h	/^#define glGetRenderbufferParameteriv /;"	d
glGetSamplerParameterIiv	include/GL/gl3w.h	/^#define glGetSamplerParameterIiv /;"	d
glGetSamplerParameterIuiv	include/GL/gl3w.h	/^#define glGetSamplerParameterIuiv /;"	d
glGetSamplerParameterfv	include/GL/gl3w.h	/^#define glGetSamplerParameterfv /;"	d
glGetSamplerParameteriv	include/GL/gl3w.h	/^#define glGetSamplerParameteriv /;"	d
glGetShaderInfoLog	include/GL/gl3w.h	/^#define glGetShaderInfoLog /;"	d
glGetShaderPrecisionFormat	include/GL/gl3w.h	/^#define glGetShaderPrecisionFormat /;"	d
glGetShaderSource	include/GL/gl3w.h	/^#define glGetShaderSource /;"	d
glGetShaderiv	include/GL/gl3w.h	/^#define glGetShaderiv /;"	d
glGetString	include/GL/gl3w.h	/^#define glGetString /;"	d
glGetStringi	include/GL/gl3w.h	/^#define glGetStringi /;"	d
glGetSubroutineIndex	include/GL/gl3w.h	/^#define glGetSubroutineIndex /;"	d
glGetSubroutineUniformLocation	include/GL/gl3w.h	/^#define glGetSubroutineUniformLocation /;"	d
glGetSynciv	include/GL/gl3w.h	/^#define glGetSynciv /;"	d
glGetTexImage	include/GL/gl3w.h	/^#define glGetTexImage /;"	d
glGetTexLevelParameterfv	include/GL/gl3w.h	/^#define glGetTexLevelParameterfv /;"	d
glGetTexLevelParameteriv	include/GL/gl3w.h	/^#define glGetTexLevelParameteriv /;"	d
glGetTexParameterIiv	include/GL/gl3w.h	/^#define glGetTexParameterIiv /;"	d
glGetTexParameterIuiv	include/GL/gl3w.h	/^#define glGetTexParameterIuiv /;"	d
glGetTexParameterfv	include/GL/gl3w.h	/^#define glGetTexParameterfv /;"	d
glGetTexParameteriv	include/GL/gl3w.h	/^#define glGetTexParameteriv /;"	d
glGetTextureHandleARB	include/GL/gl3w.h	/^#define glGetTextureHandleARB /;"	d
glGetTextureImage	include/GL/gl3w.h	/^#define glGetTextureImage /;"	d
glGetTextureLevelParameterfv	include/GL/gl3w.h	/^#define glGetTextureLevelParameterfv /;"	d
glGetTextureLevelParameteriv	include/GL/gl3w.h	/^#define glGetTextureLevelParameteriv /;"	d
glGetTextureParameterIiv	include/GL/gl3w.h	/^#define glGetTextureParameterIiv /;"	d
glGetTextureParameterIuiv	include/GL/gl3w.h	/^#define glGetTextureParameterIuiv /;"	d
glGetTextureParameterfv	include/GL/gl3w.h	/^#define glGetTextureParameterfv /;"	d
glGetTextureParameteriv	include/GL/gl3w.h	/^#define glGetTextureParameteriv /;"	d
glGetTextureSamplerHandleARB	include/GL/gl3w.h	/^#define glGetTextureSamplerHandleARB /;"	d
glGetTextureSubImage	include/GL/gl3w.h	/^#define glGetTextureSubImage /;"	d
glGetTransformFeedbackVarying	include/GL/gl3w.h	/^#define glGetTransformFeedbackVarying /;"	d
glGetTransformFeedbacki64_v	include/GL/gl3w.h	/^#define glGetTransformFeedbacki64_v /;"	d
glGetTransformFeedbacki_v	include/GL/gl3w.h	/^#define glGetTransformFeedbacki_v /;"	d
glGetTransformFeedbackiv	include/GL/gl3w.h	/^#define glGetTransformFeedbackiv /;"	d
glGetUniformBlockIndex	include/GL/gl3w.h	/^#define glGetUniformBlockIndex /;"	d
glGetUniformIndices	include/GL/gl3w.h	/^#define glGetUniformIndices /;"	d
glGetUniformLocation	include/GL/gl3w.h	/^#define glGetUniformLocation /;"	d
glGetUniformSubroutineuiv	include/GL/gl3w.h	/^#define glGetUniformSubroutineuiv /;"	d
glGetUniformdv	include/GL/gl3w.h	/^#define glGetUniformdv /;"	d
glGetUniformfv	include/GL/gl3w.h	/^#define glGetUniformfv /;"	d
glGetUniformiv	include/GL/gl3w.h	/^#define glGetUniformiv /;"	d
glGetUniformuiv	include/GL/gl3w.h	/^#define glGetUniformuiv /;"	d
glGetVertexArrayIndexed64iv	include/GL/gl3w.h	/^#define glGetVertexArrayIndexed64iv /;"	d
glGetVertexArrayIndexediv	include/GL/gl3w.h	/^#define glGetVertexArrayIndexediv /;"	d
glGetVertexArrayiv	include/GL/gl3w.h	/^#define glGetVertexArrayiv /;"	d
glGetVertexAttribIiv	include/GL/gl3w.h	/^#define glGetVertexAttribIiv /;"	d
glGetVertexAttribIuiv	include/GL/gl3w.h	/^#define glGetVertexAttribIuiv /;"	d
glGetVertexAttribLdv	include/GL/gl3w.h	/^#define glGetVertexAttribLdv /;"	d
glGetVertexAttribLui64vARB	include/GL/gl3w.h	/^#define glGetVertexAttribLui64vARB /;"	d
glGetVertexAttribPointerv	include/GL/gl3w.h	/^#define glGetVertexAttribPointerv /;"	d
glGetVertexAttribdv	include/GL/gl3w.h	/^#define glGetVertexAttribdv /;"	d
glGetVertexAttribfv	include/GL/gl3w.h	/^#define glGetVertexAttribfv /;"	d
glGetVertexAttribiv	include/GL/gl3w.h	/^#define glGetVertexAttribiv /;"	d
glGetnCompressedTexImage	include/GL/gl3w.h	/^#define glGetnCompressedTexImage /;"	d
glGetnCompressedTexImageARB	include/GL/gl3w.h	/^#define glGetnCompressedTexImageARB /;"	d
glGetnTexImage	include/GL/gl3w.h	/^#define glGetnTexImage /;"	d
glGetnTexImageARB	include/GL/gl3w.h	/^#define glGetnTexImageARB /;"	d
glGetnUniformdv	include/GL/gl3w.h	/^#define glGetnUniformdv /;"	d
glGetnUniformdvARB	include/GL/gl3w.h	/^#define glGetnUniformdvARB /;"	d
glGetnUniformfv	include/GL/gl3w.h	/^#define glGetnUniformfv /;"	d
glGetnUniformfvARB	include/GL/gl3w.h	/^#define glGetnUniformfvARB /;"	d
glGetnUniformiv	include/GL/gl3w.h	/^#define glGetnUniformiv /;"	d
glGetnUniformivARB	include/GL/gl3w.h	/^#define glGetnUniformivARB /;"	d
glGetnUniformuiv	include/GL/gl3w.h	/^#define glGetnUniformuiv /;"	d
glGetnUniformuivARB	include/GL/gl3w.h	/^#define glGetnUniformuivARB /;"	d
glHint	include/GL/gl3w.h	/^#define glHint /;"	d
glInvalidateBufferData	include/GL/gl3w.h	/^#define glInvalidateBufferData /;"	d
glInvalidateBufferSubData	include/GL/gl3w.h	/^#define glInvalidateBufferSubData /;"	d
glInvalidateFramebuffer	include/GL/gl3w.h	/^#define glInvalidateFramebuffer /;"	d
glInvalidateNamedFramebufferData	include/GL/gl3w.h	/^#define glInvalidateNamedFramebufferData /;"	d
glInvalidateNamedFramebufferSubData	include/GL/gl3w.h	/^#define glInvalidateNamedFramebufferSubData /;"	d
glInvalidateSubFramebuffer	include/GL/gl3w.h	/^#define glInvalidateSubFramebuffer /;"	d
glInvalidateTexImage	include/GL/gl3w.h	/^#define glInvalidateTexImage /;"	d
glInvalidateTexSubImage	include/GL/gl3w.h	/^#define glInvalidateTexSubImage /;"	d
glIsBuffer	include/GL/gl3w.h	/^#define glIsBuffer /;"	d
glIsEnabled	include/GL/gl3w.h	/^#define glIsEnabled /;"	d
glIsEnabledi	include/GL/gl3w.h	/^#define glIsEnabledi /;"	d
glIsFramebuffer	include/GL/gl3w.h	/^#define glIsFramebuffer /;"	d
glIsImageHandleResidentARB	include/GL/gl3w.h	/^#define glIsImageHandleResidentARB /;"	d
glIsNamedStringARB	include/GL/gl3w.h	/^#define glIsNamedStringARB /;"	d
glIsProgram	include/GL/gl3w.h	/^#define glIsProgram /;"	d
glIsProgramPipeline	include/GL/gl3w.h	/^#define glIsProgramPipeline /;"	d
glIsQuery	include/GL/gl3w.h	/^#define glIsQuery /;"	d
glIsRenderbuffer	include/GL/gl3w.h	/^#define glIsRenderbuffer /;"	d
glIsSampler	include/GL/gl3w.h	/^#define glIsSampler /;"	d
glIsShader	include/GL/gl3w.h	/^#define glIsShader /;"	d
glIsSync	include/GL/gl3w.h	/^#define glIsSync /;"	d
glIsTexture	include/GL/gl3w.h	/^#define glIsTexture /;"	d
glIsTextureHandleResidentARB	include/GL/gl3w.h	/^#define glIsTextureHandleResidentARB /;"	d
glIsTransformFeedback	include/GL/gl3w.h	/^#define glIsTransformFeedback /;"	d
glIsVertexArray	include/GL/gl3w.h	/^#define glIsVertexArray /;"	d
glLineWidth	include/GL/gl3w.h	/^#define glLineWidth /;"	d
glLinkProgram	include/GL/gl3w.h	/^#define glLinkProgram /;"	d
glLogicOp	include/GL/gl3w.h	/^#define glLogicOp /;"	d
glMakeImageHandleNonResidentARB	include/GL/gl3w.h	/^#define glMakeImageHandleNonResidentARB /;"	d
glMakeImageHandleResidentARB	include/GL/gl3w.h	/^#define glMakeImageHandleResidentARB /;"	d
glMakeTextureHandleNonResidentARB	include/GL/gl3w.h	/^#define glMakeTextureHandleNonResidentARB /;"	d
glMakeTextureHandleResidentARB	include/GL/gl3w.h	/^#define glMakeTextureHandleResidentARB /;"	d
glMapBuffer	include/GL/gl3w.h	/^#define glMapBuffer /;"	d
glMapBufferRange	include/GL/gl3w.h	/^#define glMapBufferRange /;"	d
glMapNamedBuffer	include/GL/gl3w.h	/^#define glMapNamedBuffer /;"	d
glMapNamedBufferRange	include/GL/gl3w.h	/^#define glMapNamedBufferRange /;"	d
glMemoryBarrier	include/GL/gl3w.h	/^#define glMemoryBarrier /;"	d
glMemoryBarrierByRegion	include/GL/gl3w.h	/^#define glMemoryBarrierByRegion /;"	d
glMinSampleShading	include/GL/gl3w.h	/^#define glMinSampleShading /;"	d
glMinSampleShadingARB	include/GL/gl3w.h	/^#define glMinSampleShadingARB /;"	d
glMultiDrawArrays	include/GL/gl3w.h	/^#define glMultiDrawArrays /;"	d
glMultiDrawArraysIndirect	include/GL/gl3w.h	/^#define glMultiDrawArraysIndirect /;"	d
glMultiDrawArraysIndirectCountARB	include/GL/gl3w.h	/^#define glMultiDrawArraysIndirectCountARB /;"	d
glMultiDrawElements	include/GL/gl3w.h	/^#define glMultiDrawElements /;"	d
glMultiDrawElementsBaseVertex	include/GL/gl3w.h	/^#define glMultiDrawElementsBaseVertex /;"	d
glMultiDrawElementsIndirect	include/GL/gl3w.h	/^#define glMultiDrawElementsIndirect /;"	d
glMultiDrawElementsIndirectCountARB	include/GL/gl3w.h	/^#define glMultiDrawElementsIndirectCountARB /;"	d
glNamedBufferData	include/GL/gl3w.h	/^#define glNamedBufferData /;"	d
glNamedBufferPageCommitmentARB	include/GL/gl3w.h	/^#define glNamedBufferPageCommitmentARB /;"	d
glNamedBufferPageCommitmentEXT	include/GL/gl3w.h	/^#define glNamedBufferPageCommitmentEXT /;"	d
glNamedBufferStorage	include/GL/gl3w.h	/^#define glNamedBufferStorage /;"	d
glNamedBufferSubData	include/GL/gl3w.h	/^#define glNamedBufferSubData /;"	d
glNamedFramebufferDrawBuffer	include/GL/gl3w.h	/^#define glNamedFramebufferDrawBuffer /;"	d
glNamedFramebufferDrawBuffers	include/GL/gl3w.h	/^#define glNamedFramebufferDrawBuffers /;"	d
glNamedFramebufferParameteri	include/GL/gl3w.h	/^#define glNamedFramebufferParameteri /;"	d
glNamedFramebufferReadBuffer	include/GL/gl3w.h	/^#define glNamedFramebufferReadBuffer /;"	d
glNamedFramebufferRenderbuffer	include/GL/gl3w.h	/^#define glNamedFramebufferRenderbuffer /;"	d
glNamedFramebufferTexture	include/GL/gl3w.h	/^#define glNamedFramebufferTexture /;"	d
glNamedFramebufferTextureLayer	include/GL/gl3w.h	/^#define glNamedFramebufferTextureLayer /;"	d
glNamedRenderbufferStorage	include/GL/gl3w.h	/^#define glNamedRenderbufferStorage /;"	d
glNamedRenderbufferStorageMultisample	include/GL/gl3w.h	/^#define glNamedRenderbufferStorageMultisample /;"	d
glNamedStringARB	include/GL/gl3w.h	/^#define glNamedStringARB /;"	d
glObjectLabel	include/GL/gl3w.h	/^#define glObjectLabel /;"	d
glObjectPtrLabel	include/GL/gl3w.h	/^#define glObjectPtrLabel /;"	d
glPatchParameterfv	include/GL/gl3w.h	/^#define glPatchParameterfv /;"	d
glPatchParameteri	include/GL/gl3w.h	/^#define glPatchParameteri /;"	d
glPauseTransformFeedback	include/GL/gl3w.h	/^#define glPauseTransformFeedback /;"	d
glPixelStoref	include/GL/gl3w.h	/^#define glPixelStoref /;"	d
glPixelStorei	include/GL/gl3w.h	/^#define glPixelStorei /;"	d
glPointParameterf	include/GL/gl3w.h	/^#define glPointParameterf /;"	d
glPointParameterfv	include/GL/gl3w.h	/^#define glPointParameterfv /;"	d
glPointParameteri	include/GL/gl3w.h	/^#define glPointParameteri /;"	d
glPointParameteriv	include/GL/gl3w.h	/^#define glPointParameteriv /;"	d
glPointSize	include/GL/gl3w.h	/^#define glPointSize /;"	d
glPolygonMode	include/GL/gl3w.h	/^#define glPolygonMode /;"	d
glPolygonOffset	include/GL/gl3w.h	/^#define glPolygonOffset /;"	d
glPopDebugGroup	include/GL/gl3w.h	/^#define glPopDebugGroup /;"	d
glPrimitiveRestartIndex	include/GL/gl3w.h	/^#define glPrimitiveRestartIndex /;"	d
glProgramBinary	include/GL/gl3w.h	/^#define glProgramBinary /;"	d
glProgramParameteri	include/GL/gl3w.h	/^#define glProgramParameteri /;"	d
glProgramUniform1d	include/GL/gl3w.h	/^#define glProgramUniform1d /;"	d
glProgramUniform1dv	include/GL/gl3w.h	/^#define glProgramUniform1dv /;"	d
glProgramUniform1f	include/GL/gl3w.h	/^#define glProgramUniform1f /;"	d
glProgramUniform1fv	include/GL/gl3w.h	/^#define glProgramUniform1fv /;"	d
glProgramUniform1i	include/GL/gl3w.h	/^#define glProgramUniform1i /;"	d
glProgramUniform1iv	include/GL/gl3w.h	/^#define glProgramUniform1iv /;"	d
glProgramUniform1ui	include/GL/gl3w.h	/^#define glProgramUniform1ui /;"	d
glProgramUniform1uiv	include/GL/gl3w.h	/^#define glProgramUniform1uiv /;"	d
glProgramUniform2d	include/GL/gl3w.h	/^#define glProgramUniform2d /;"	d
glProgramUniform2dv	include/GL/gl3w.h	/^#define glProgramUniform2dv /;"	d
glProgramUniform2f	include/GL/gl3w.h	/^#define glProgramUniform2f /;"	d
glProgramUniform2fv	include/GL/gl3w.h	/^#define glProgramUniform2fv /;"	d
glProgramUniform2i	include/GL/gl3w.h	/^#define glProgramUniform2i /;"	d
glProgramUniform2iv	include/GL/gl3w.h	/^#define glProgramUniform2iv /;"	d
glProgramUniform2ui	include/GL/gl3w.h	/^#define glProgramUniform2ui /;"	d
glProgramUniform2uiv	include/GL/gl3w.h	/^#define glProgramUniform2uiv /;"	d
glProgramUniform3d	include/GL/gl3w.h	/^#define glProgramUniform3d /;"	d
glProgramUniform3dv	include/GL/gl3w.h	/^#define glProgramUniform3dv /;"	d
glProgramUniform3f	include/GL/gl3w.h	/^#define glProgramUniform3f /;"	d
glProgramUniform3fv	include/GL/gl3w.h	/^#define glProgramUniform3fv /;"	d
glProgramUniform3i	include/GL/gl3w.h	/^#define glProgramUniform3i /;"	d
glProgramUniform3iv	include/GL/gl3w.h	/^#define glProgramUniform3iv /;"	d
glProgramUniform3ui	include/GL/gl3w.h	/^#define glProgramUniform3ui /;"	d
glProgramUniform3uiv	include/GL/gl3w.h	/^#define glProgramUniform3uiv /;"	d
glProgramUniform4d	include/GL/gl3w.h	/^#define glProgramUniform4d /;"	d
glProgramUniform4dv	include/GL/gl3w.h	/^#define glProgramUniform4dv /;"	d
glProgramUniform4f	include/GL/gl3w.h	/^#define glProgramUniform4f /;"	d
glProgramUniform4fv	include/GL/gl3w.h	/^#define glProgramUniform4fv /;"	d
glProgramUniform4i	include/GL/gl3w.h	/^#define glProgramUniform4i /;"	d
glProgramUniform4iv	include/GL/gl3w.h	/^#define glProgramUniform4iv /;"	d
glProgramUniform4ui	include/GL/gl3w.h	/^#define glProgramUniform4ui /;"	d
glProgramUniform4uiv	include/GL/gl3w.h	/^#define glProgramUniform4uiv /;"	d
glProgramUniformHandleui64ARB	include/GL/gl3w.h	/^#define glProgramUniformHandleui64ARB /;"	d
glProgramUniformHandleui64vARB	include/GL/gl3w.h	/^#define glProgramUniformHandleui64vARB /;"	d
glProgramUniformMatrix2dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix2dv /;"	d
glProgramUniformMatrix2fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix2fv /;"	d
glProgramUniformMatrix2x3dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix2x3dv /;"	d
glProgramUniformMatrix2x3fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix2x3fv /;"	d
glProgramUniformMatrix2x4dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix2x4dv /;"	d
glProgramUniformMatrix2x4fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix2x4fv /;"	d
glProgramUniformMatrix3dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix3dv /;"	d
glProgramUniformMatrix3fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix3fv /;"	d
glProgramUniformMatrix3x2dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix3x2dv /;"	d
glProgramUniformMatrix3x2fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix3x2fv /;"	d
glProgramUniformMatrix3x4dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix3x4dv /;"	d
glProgramUniformMatrix3x4fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix3x4fv /;"	d
glProgramUniformMatrix4dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix4dv /;"	d
glProgramUniformMatrix4fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix4fv /;"	d
glProgramUniformMatrix4x2dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix4x2dv /;"	d
glProgramUniformMatrix4x2fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix4x2fv /;"	d
glProgramUniformMatrix4x3dv	include/GL/gl3w.h	/^#define glProgramUniformMatrix4x3dv /;"	d
glProgramUniformMatrix4x3fv	include/GL/gl3w.h	/^#define glProgramUniformMatrix4x3fv /;"	d
glProvokingVertex	include/GL/gl3w.h	/^#define glProvokingVertex /;"	d
glPushDebugGroup	include/GL/gl3w.h	/^#define glPushDebugGroup /;"	d
glQueryCounter	include/GL/gl3w.h	/^#define glQueryCounter /;"	d
glReadBuffer	include/GL/gl3w.h	/^#define glReadBuffer /;"	d
glReadPixels	include/GL/gl3w.h	/^#define glReadPixels /;"	d
glReadnPixels	include/GL/gl3w.h	/^#define glReadnPixels /;"	d
glReadnPixelsARB	include/GL/gl3w.h	/^#define glReadnPixelsARB /;"	d
glReleaseShaderCompiler	include/GL/gl3w.h	/^#define glReleaseShaderCompiler /;"	d
glRenderbufferStorage	include/GL/gl3w.h	/^#define glRenderbufferStorage /;"	d
glRenderbufferStorageMultisample	include/GL/gl3w.h	/^#define glRenderbufferStorageMultisample /;"	d
glResumeTransformFeedback	include/GL/gl3w.h	/^#define glResumeTransformFeedback /;"	d
glSampleCoverage	include/GL/gl3w.h	/^#define glSampleCoverage /;"	d
glSampleMaski	include/GL/gl3w.h	/^#define glSampleMaski /;"	d
glSamplerParameterIiv	include/GL/gl3w.h	/^#define glSamplerParameterIiv /;"	d
glSamplerParameterIuiv	include/GL/gl3w.h	/^#define glSamplerParameterIuiv /;"	d
glSamplerParameterf	include/GL/gl3w.h	/^#define glSamplerParameterf /;"	d
glSamplerParameterfv	include/GL/gl3w.h	/^#define glSamplerParameterfv /;"	d
glSamplerParameteri	include/GL/gl3w.h	/^#define glSamplerParameteri /;"	d
glSamplerParameteriv	include/GL/gl3w.h	/^#define glSamplerParameteriv /;"	d
glScissor	include/GL/gl3w.h	/^#define glScissor /;"	d
glScissorArrayv	include/GL/gl3w.h	/^#define glScissorArrayv /;"	d
glScissorIndexed	include/GL/gl3w.h	/^#define glScissorIndexed /;"	d
glScissorIndexedv	include/GL/gl3w.h	/^#define glScissorIndexedv /;"	d
glShaderBinary	include/GL/gl3w.h	/^#define glShaderBinary /;"	d
glShaderSource	include/GL/gl3w.h	/^#define glShaderSource /;"	d
glShaderStorageBlockBinding	include/GL/gl3w.h	/^#define glShaderStorageBlockBinding /;"	d
glStencilFunc	include/GL/gl3w.h	/^#define glStencilFunc /;"	d
glStencilFuncSeparate	include/GL/gl3w.h	/^#define glStencilFuncSeparate /;"	d
glStencilMask	include/GL/gl3w.h	/^#define glStencilMask /;"	d
glStencilMaskSeparate	include/GL/gl3w.h	/^#define glStencilMaskSeparate /;"	d
glStencilOp	include/GL/gl3w.h	/^#define glStencilOp /;"	d
glStencilOpSeparate	include/GL/gl3w.h	/^#define glStencilOpSeparate /;"	d
glTexBuffer	include/GL/gl3w.h	/^#define glTexBuffer /;"	d
glTexBufferRange	include/GL/gl3w.h	/^#define glTexBufferRange /;"	d
glTexImage1D	include/GL/gl3w.h	/^#define glTexImage1D /;"	d
glTexImage2D	include/GL/gl3w.h	/^#define glTexImage2D /;"	d
glTexImage2DMultisample	include/GL/gl3w.h	/^#define glTexImage2DMultisample /;"	d
glTexImage3D	include/GL/gl3w.h	/^#define glTexImage3D /;"	d
glTexImage3DMultisample	include/GL/gl3w.h	/^#define glTexImage3DMultisample /;"	d
glTexPageCommitmentARB	include/GL/gl3w.h	/^#define glTexPageCommitmentARB /;"	d
glTexParameterIiv	include/GL/gl3w.h	/^#define glTexParameterIiv /;"	d
glTexParameterIuiv	include/GL/gl3w.h	/^#define glTexParameterIuiv /;"	d
glTexParameterf	include/GL/gl3w.h	/^#define glTexParameterf /;"	d
glTexParameterfv	include/GL/gl3w.h	/^#define glTexParameterfv /;"	d
glTexParameteri	include/GL/gl3w.h	/^#define glTexParameteri /;"	d
glTexParameteriv	include/GL/gl3w.h	/^#define glTexParameteriv /;"	d
glTexStorage1D	include/GL/gl3w.h	/^#define glTexStorage1D /;"	d
glTexStorage2D	include/GL/gl3w.h	/^#define glTexStorage2D /;"	d
glTexStorage2DMultisample	include/GL/gl3w.h	/^#define glTexStorage2DMultisample /;"	d
glTexStorage3D	include/GL/gl3w.h	/^#define glTexStorage3D /;"	d
glTexStorage3DMultisample	include/GL/gl3w.h	/^#define glTexStorage3DMultisample /;"	d
glTexSubImage1D	include/GL/gl3w.h	/^#define glTexSubImage1D /;"	d
glTexSubImage2D	include/GL/gl3w.h	/^#define glTexSubImage2D /;"	d
glTexSubImage3D	include/GL/gl3w.h	/^#define glTexSubImage3D /;"	d
glTextureBarrier	include/GL/gl3w.h	/^#define glTextureBarrier /;"	d
glTextureBuffer	include/GL/gl3w.h	/^#define glTextureBuffer /;"	d
glTextureBufferRange	include/GL/gl3w.h	/^#define glTextureBufferRange /;"	d
glTextureParameterIiv	include/GL/gl3w.h	/^#define glTextureParameterIiv /;"	d
glTextureParameterIuiv	include/GL/gl3w.h	/^#define glTextureParameterIuiv /;"	d
glTextureParameterf	include/GL/gl3w.h	/^#define glTextureParameterf /;"	d
glTextureParameterfv	include/GL/gl3w.h	/^#define glTextureParameterfv /;"	d
glTextureParameteri	include/GL/gl3w.h	/^#define glTextureParameteri /;"	d
glTextureParameteriv	include/GL/gl3w.h	/^#define glTextureParameteriv /;"	d
glTextureStorage1D	include/GL/gl3w.h	/^#define glTextureStorage1D /;"	d
glTextureStorage2D	include/GL/gl3w.h	/^#define glTextureStorage2D /;"	d
glTextureStorage2DMultisample	include/GL/gl3w.h	/^#define glTextureStorage2DMultisample /;"	d
glTextureStorage3D	include/GL/gl3w.h	/^#define glTextureStorage3D /;"	d
glTextureStorage3DMultisample	include/GL/gl3w.h	/^#define glTextureStorage3DMultisample /;"	d
glTextureSubImage1D	include/GL/gl3w.h	/^#define glTextureSubImage1D /;"	d
glTextureSubImage2D	include/GL/gl3w.h	/^#define glTextureSubImage2D /;"	d
glTextureSubImage3D	include/GL/gl3w.h	/^#define glTextureSubImage3D /;"	d
glTextureView	include/GL/gl3w.h	/^#define glTextureView /;"	d
glTransformFeedbackBufferBase	include/GL/gl3w.h	/^#define glTransformFeedbackBufferBase /;"	d
glTransformFeedbackBufferRange	include/GL/gl3w.h	/^#define glTransformFeedbackBufferRange /;"	d
glTransformFeedbackVaryings	include/GL/gl3w.h	/^#define glTransformFeedbackVaryings /;"	d
glUniform1d	include/GL/gl3w.h	/^#define glUniform1d /;"	d
glUniform1dv	include/GL/gl3w.h	/^#define glUniform1dv /;"	d
glUniform1f	include/GL/gl3w.h	/^#define glUniform1f /;"	d
glUniform1fv	include/GL/gl3w.h	/^#define glUniform1fv /;"	d
glUniform1i	include/GL/gl3w.h	/^#define glUniform1i /;"	d
glUniform1iv	include/GL/gl3w.h	/^#define glUniform1iv /;"	d
glUniform1ui	include/GL/gl3w.h	/^#define glUniform1ui /;"	d
glUniform1uiv	include/GL/gl3w.h	/^#define glUniform1uiv /;"	d
glUniform2d	include/GL/gl3w.h	/^#define glUniform2d /;"	d
glUniform2dv	include/GL/gl3w.h	/^#define glUniform2dv /;"	d
glUniform2f	include/GL/gl3w.h	/^#define glUniform2f /;"	d
glUniform2fv	include/GL/gl3w.h	/^#define glUniform2fv /;"	d
glUniform2i	include/GL/gl3w.h	/^#define glUniform2i /;"	d
glUniform2iv	include/GL/gl3w.h	/^#define glUniform2iv /;"	d
glUniform2ui	include/GL/gl3w.h	/^#define glUniform2ui /;"	d
glUniform2uiv	include/GL/gl3w.h	/^#define glUniform2uiv /;"	d
glUniform3d	include/GL/gl3w.h	/^#define glUniform3d /;"	d
glUniform3dv	include/GL/gl3w.h	/^#define glUniform3dv /;"	d
glUniform3f	include/GL/gl3w.h	/^#define glUniform3f /;"	d
glUniform3fv	include/GL/gl3w.h	/^#define glUniform3fv /;"	d
glUniform3i	include/GL/gl3w.h	/^#define glUniform3i /;"	d
glUniform3iv	include/GL/gl3w.h	/^#define glUniform3iv /;"	d
glUniform3ui	include/GL/gl3w.h	/^#define glUniform3ui /;"	d
glUniform3uiv	include/GL/gl3w.h	/^#define glUniform3uiv /;"	d
glUniform4d	include/GL/gl3w.h	/^#define glUniform4d /;"	d
glUniform4dv	include/GL/gl3w.h	/^#define glUniform4dv /;"	d
glUniform4f	include/GL/gl3w.h	/^#define glUniform4f /;"	d
glUniform4fv	include/GL/gl3w.h	/^#define glUniform4fv /;"	d
glUniform4i	include/GL/gl3w.h	/^#define glUniform4i /;"	d
glUniform4iv	include/GL/gl3w.h	/^#define glUniform4iv /;"	d
glUniform4ui	include/GL/gl3w.h	/^#define glUniform4ui /;"	d
glUniform4uiv	include/GL/gl3w.h	/^#define glUniform4uiv /;"	d
glUniformBlockBinding	include/GL/gl3w.h	/^#define glUniformBlockBinding /;"	d
glUniformHandleui64ARB	include/GL/gl3w.h	/^#define glUniformHandleui64ARB /;"	d
glUniformHandleui64vARB	include/GL/gl3w.h	/^#define glUniformHandleui64vARB /;"	d
glUniformMatrix2dv	include/GL/gl3w.h	/^#define glUniformMatrix2dv /;"	d
glUniformMatrix2fv	include/GL/gl3w.h	/^#define glUniformMatrix2fv /;"	d
glUniformMatrix2x3dv	include/GL/gl3w.h	/^#define glUniformMatrix2x3dv /;"	d
glUniformMatrix2x3fv	include/GL/gl3w.h	/^#define glUniformMatrix2x3fv /;"	d
glUniformMatrix2x4dv	include/GL/gl3w.h	/^#define glUniformMatrix2x4dv /;"	d
glUniformMatrix2x4fv	include/GL/gl3w.h	/^#define glUniformMatrix2x4fv /;"	d
glUniformMatrix3dv	include/GL/gl3w.h	/^#define glUniformMatrix3dv /;"	d
glUniformMatrix3fv	include/GL/gl3w.h	/^#define glUniformMatrix3fv /;"	d
glUniformMatrix3x2dv	include/GL/gl3w.h	/^#define glUniformMatrix3x2dv /;"	d
glUniformMatrix3x2fv	include/GL/gl3w.h	/^#define glUniformMatrix3x2fv /;"	d
glUniformMatrix3x4dv	include/GL/gl3w.h	/^#define glUniformMatrix3x4dv /;"	d
glUniformMatrix3x4fv	include/GL/gl3w.h	/^#define glUniformMatrix3x4fv /;"	d
glUniformMatrix4dv	include/GL/gl3w.h	/^#define glUniformMatrix4dv /;"	d
glUniformMatrix4fv	include/GL/gl3w.h	/^#define glUniformMatrix4fv /;"	d
glUniformMatrix4fv	include/glm/detail/dummy.cpp	/^void glUniformMatrix4fv(GLuint, int, int, float*){}$/;"	f	typeref:typename:void
glUniformMatrix4x2dv	include/GL/gl3w.h	/^#define glUniformMatrix4x2dv /;"	d
glUniformMatrix4x2fv	include/GL/gl3w.h	/^#define glUniformMatrix4x2fv /;"	d
glUniformMatrix4x3dv	include/GL/gl3w.h	/^#define glUniformMatrix4x3dv /;"	d
glUniformMatrix4x3fv	include/GL/gl3w.h	/^#define glUniformMatrix4x3fv /;"	d
glUniformSubroutinesuiv	include/GL/gl3w.h	/^#define glUniformSubroutinesuiv /;"	d
glUnmapBuffer	include/GL/gl3w.h	/^#define glUnmapBuffer /;"	d
glUnmapNamedBuffer	include/GL/gl3w.h	/^#define glUnmapNamedBuffer /;"	d
glUseProgram	include/GL/gl3w.h	/^#define glUseProgram /;"	d
glUseProgramStages	include/GL/gl3w.h	/^#define glUseProgramStages /;"	d
glValidateProgram	include/GL/gl3w.h	/^#define glValidateProgram /;"	d
glValidateProgramPipeline	include/GL/gl3w.h	/^#define glValidateProgramPipeline /;"	d
glVertexArrayAttribBinding	include/GL/gl3w.h	/^#define glVertexArrayAttribBinding /;"	d
glVertexArrayAttribFormat	include/GL/gl3w.h	/^#define glVertexArrayAttribFormat /;"	d
glVertexArrayAttribIFormat	include/GL/gl3w.h	/^#define glVertexArrayAttribIFormat /;"	d
glVertexArrayAttribLFormat	include/GL/gl3w.h	/^#define glVertexArrayAttribLFormat /;"	d
glVertexArrayBindingDivisor	include/GL/gl3w.h	/^#define glVertexArrayBindingDivisor /;"	d
glVertexArrayElementBuffer	include/GL/gl3w.h	/^#define glVertexArrayElementBuffer /;"	d
glVertexArrayVertexBuffer	include/GL/gl3w.h	/^#define glVertexArrayVertexBuffer /;"	d
glVertexArrayVertexBuffers	include/GL/gl3w.h	/^#define glVertexArrayVertexBuffers /;"	d
glVertexAttrib1d	include/GL/gl3w.h	/^#define glVertexAttrib1d /;"	d
glVertexAttrib1dv	include/GL/gl3w.h	/^#define glVertexAttrib1dv /;"	d
glVertexAttrib1f	include/GL/gl3w.h	/^#define glVertexAttrib1f /;"	d
glVertexAttrib1fv	include/GL/gl3w.h	/^#define glVertexAttrib1fv /;"	d
glVertexAttrib1s	include/GL/gl3w.h	/^#define glVertexAttrib1s /;"	d
glVertexAttrib1sv	include/GL/gl3w.h	/^#define glVertexAttrib1sv /;"	d
glVertexAttrib2d	include/GL/gl3w.h	/^#define glVertexAttrib2d /;"	d
glVertexAttrib2dv	include/GL/gl3w.h	/^#define glVertexAttrib2dv /;"	d
glVertexAttrib2f	include/GL/gl3w.h	/^#define glVertexAttrib2f /;"	d
glVertexAttrib2fv	include/GL/gl3w.h	/^#define glVertexAttrib2fv /;"	d
glVertexAttrib2s	include/GL/gl3w.h	/^#define glVertexAttrib2s /;"	d
glVertexAttrib2sv	include/GL/gl3w.h	/^#define glVertexAttrib2sv /;"	d
glVertexAttrib3d	include/GL/gl3w.h	/^#define glVertexAttrib3d /;"	d
glVertexAttrib3dv	include/GL/gl3w.h	/^#define glVertexAttrib3dv /;"	d
glVertexAttrib3f	include/GL/gl3w.h	/^#define glVertexAttrib3f /;"	d
glVertexAttrib3fv	include/GL/gl3w.h	/^#define glVertexAttrib3fv /;"	d
glVertexAttrib3s	include/GL/gl3w.h	/^#define glVertexAttrib3s /;"	d
glVertexAttrib3sv	include/GL/gl3w.h	/^#define glVertexAttrib3sv /;"	d
glVertexAttrib4Nbv	include/GL/gl3w.h	/^#define glVertexAttrib4Nbv /;"	d
glVertexAttrib4Niv	include/GL/gl3w.h	/^#define glVertexAttrib4Niv /;"	d
glVertexAttrib4Nsv	include/GL/gl3w.h	/^#define glVertexAttrib4Nsv /;"	d
glVertexAttrib4Nub	include/GL/gl3w.h	/^#define glVertexAttrib4Nub /;"	d
glVertexAttrib4Nubv	include/GL/gl3w.h	/^#define glVertexAttrib4Nubv /;"	d
glVertexAttrib4Nuiv	include/GL/gl3w.h	/^#define glVertexAttrib4Nuiv /;"	d
glVertexAttrib4Nusv	include/GL/gl3w.h	/^#define glVertexAttrib4Nusv /;"	d
glVertexAttrib4bv	include/GL/gl3w.h	/^#define glVertexAttrib4bv /;"	d
glVertexAttrib4d	include/GL/gl3w.h	/^#define glVertexAttrib4d /;"	d
glVertexAttrib4dv	include/GL/gl3w.h	/^#define glVertexAttrib4dv /;"	d
glVertexAttrib4f	include/GL/gl3w.h	/^#define glVertexAttrib4f /;"	d
glVertexAttrib4fv	include/GL/gl3w.h	/^#define glVertexAttrib4fv /;"	d
glVertexAttrib4iv	include/GL/gl3w.h	/^#define glVertexAttrib4iv /;"	d
glVertexAttrib4s	include/GL/gl3w.h	/^#define glVertexAttrib4s /;"	d
glVertexAttrib4sv	include/GL/gl3w.h	/^#define glVertexAttrib4sv /;"	d
glVertexAttrib4ubv	include/GL/gl3w.h	/^#define glVertexAttrib4ubv /;"	d
glVertexAttrib4uiv	include/GL/gl3w.h	/^#define glVertexAttrib4uiv /;"	d
glVertexAttrib4usv	include/GL/gl3w.h	/^#define glVertexAttrib4usv /;"	d
glVertexAttribBinding	include/GL/gl3w.h	/^#define glVertexAttribBinding /;"	d
glVertexAttribDivisor	include/GL/gl3w.h	/^#define glVertexAttribDivisor /;"	d
glVertexAttribFormat	include/GL/gl3w.h	/^#define glVertexAttribFormat /;"	d
glVertexAttribI1i	include/GL/gl3w.h	/^#define glVertexAttribI1i /;"	d
glVertexAttribI1iv	include/GL/gl3w.h	/^#define glVertexAttribI1iv /;"	d
glVertexAttribI1ui	include/GL/gl3w.h	/^#define glVertexAttribI1ui /;"	d
glVertexAttribI1uiv	include/GL/gl3w.h	/^#define glVertexAttribI1uiv /;"	d
glVertexAttribI2i	include/GL/gl3w.h	/^#define glVertexAttribI2i /;"	d
glVertexAttribI2iv	include/GL/gl3w.h	/^#define glVertexAttribI2iv /;"	d
glVertexAttribI2ui	include/GL/gl3w.h	/^#define glVertexAttribI2ui /;"	d
glVertexAttribI2uiv	include/GL/gl3w.h	/^#define glVertexAttribI2uiv /;"	d
glVertexAttribI3i	include/GL/gl3w.h	/^#define glVertexAttribI3i /;"	d
glVertexAttribI3iv	include/GL/gl3w.h	/^#define glVertexAttribI3iv /;"	d
glVertexAttribI3ui	include/GL/gl3w.h	/^#define glVertexAttribI3ui /;"	d
glVertexAttribI3uiv	include/GL/gl3w.h	/^#define glVertexAttribI3uiv /;"	d
glVertexAttribI4bv	include/GL/gl3w.h	/^#define glVertexAttribI4bv /;"	d
glVertexAttribI4i	include/GL/gl3w.h	/^#define glVertexAttribI4i /;"	d
glVertexAttribI4iv	include/GL/gl3w.h	/^#define glVertexAttribI4iv /;"	d
glVertexAttribI4sv	include/GL/gl3w.h	/^#define glVertexAttribI4sv /;"	d
glVertexAttribI4ubv	include/GL/gl3w.h	/^#define glVertexAttribI4ubv /;"	d
glVertexAttribI4ui	include/GL/gl3w.h	/^#define glVertexAttribI4ui /;"	d
glVertexAttribI4uiv	include/GL/gl3w.h	/^#define glVertexAttribI4uiv /;"	d
glVertexAttribI4usv	include/GL/gl3w.h	/^#define glVertexAttribI4usv /;"	d
glVertexAttribIFormat	include/GL/gl3w.h	/^#define glVertexAttribIFormat /;"	d
glVertexAttribIPointer	include/GL/gl3w.h	/^#define glVertexAttribIPointer /;"	d
glVertexAttribL1d	include/GL/gl3w.h	/^#define glVertexAttribL1d /;"	d
glVertexAttribL1dv	include/GL/gl3w.h	/^#define glVertexAttribL1dv /;"	d
glVertexAttribL1ui64ARB	include/GL/gl3w.h	/^#define glVertexAttribL1ui64ARB /;"	d
glVertexAttribL1ui64vARB	include/GL/gl3w.h	/^#define glVertexAttribL1ui64vARB /;"	d
glVertexAttribL2d	include/GL/gl3w.h	/^#define glVertexAttribL2d /;"	d
glVertexAttribL2dv	include/GL/gl3w.h	/^#define glVertexAttribL2dv /;"	d
glVertexAttribL3d	include/GL/gl3w.h	/^#define glVertexAttribL3d /;"	d
glVertexAttribL3dv	include/GL/gl3w.h	/^#define glVertexAttribL3dv /;"	d
glVertexAttribL4d	include/GL/gl3w.h	/^#define glVertexAttribL4d /;"	d
glVertexAttribL4dv	include/GL/gl3w.h	/^#define glVertexAttribL4dv /;"	d
glVertexAttribLFormat	include/GL/gl3w.h	/^#define glVertexAttribLFormat /;"	d
glVertexAttribLPointer	include/GL/gl3w.h	/^#define glVertexAttribLPointer /;"	d
glVertexAttribP1ui	include/GL/gl3w.h	/^#define glVertexAttribP1ui /;"	d
glVertexAttribP1uiv	include/GL/gl3w.h	/^#define glVertexAttribP1uiv /;"	d
glVertexAttribP2ui	include/GL/gl3w.h	/^#define glVertexAttribP2ui /;"	d
glVertexAttribP2uiv	include/GL/gl3w.h	/^#define glVertexAttribP2uiv /;"	d
glVertexAttribP3ui	include/GL/gl3w.h	/^#define glVertexAttribP3ui /;"	d
glVertexAttribP3uiv	include/GL/gl3w.h	/^#define glVertexAttribP3uiv /;"	d
glVertexAttribP4ui	include/GL/gl3w.h	/^#define glVertexAttribP4ui /;"	d
glVertexAttribP4uiv	include/GL/gl3w.h	/^#define glVertexAttribP4uiv /;"	d
glVertexAttribPointer	include/GL/gl3w.h	/^#define glVertexAttribPointer /;"	d
glVertexBindingDivisor	include/GL/gl3w.h	/^#define glVertexBindingDivisor /;"	d
glViewport	include/GL/gl3w.h	/^#define glViewport /;"	d
glViewportArrayv	include/GL/gl3w.h	/^#define glViewportArrayv /;"	d
glViewportIndexedf	include/GL/gl3w.h	/^#define glViewportIndexedf /;"	d
glViewportIndexedfv	include/GL/gl3w.h	/^#define glViewportIndexedfv /;"	d
glWaitSync	include/GL/gl3w.h	/^#define glWaitSync /;"	d
glm	include/glm/detail/_noise.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/_swizzle.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/_swizzle.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/_vectorize.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/func_common.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_common.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/func_exponential.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_exponential.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/func_geometric.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_geometric.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/func_integer.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_integer.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/func_matrix.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/func_matrix.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/func_noise.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_noise.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/func_packing.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_packing.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/func_trigonometric.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_trigonometric.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/func_vector_relational.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/func_vector_relational.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/glm.cpp	/^namespace glm$/;"	n	file:
glm	include/glm/detail/intrinsic_common.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/intrinsic_common.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/intrinsic_exponential.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/intrinsic_geometric.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/intrinsic_geometric.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/intrinsic_integer.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/intrinsic_integer.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/intrinsic_matrix.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/intrinsic_matrix.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/intrinsic_trigonometric.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/intrinsic_vector_relational.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/precision.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/setup.hpp	/^	namespace glm$/;"	n
glm	include/glm/detail/setup.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_float.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/type_gentype.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_gentype.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_half.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/type_half.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_int.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/type_mat.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/type_mat2x2.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat2x2.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_mat2x3.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat2x3.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_mat2x4.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat2x4.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_mat3x2.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat3x2.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_mat3x3.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat3x3.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_mat3x4.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat3x4.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_mat4x2.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat4x2.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_mat4x3.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat4x3.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_mat4x4.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_mat4x4.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_vec.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_vec1.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_vec1.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_vec2.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_vec2.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_vec3.hpp	/^namespace glm$/;"	n
glm	include/glm/detail/type_vec3.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_vec4.hpp	/^namespace glm{$/;"	n
glm	include/glm/detail/type_vec4.inl	/^namespace glm$/;"	n	file:
glm	include/glm/detail/type_vec4_avx.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_vec4_avx2.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/detail/type_vec4_sse2.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/fwd.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/bitfield.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/bitfield.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/constants.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/constants.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/epsilon.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/epsilon.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/integer.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/integer.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/matrix_access.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/matrix_access.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/matrix_integer.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/matrix_inverse.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/matrix_inverse.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/matrix_transform.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/matrix_transform.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/noise.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/noise.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/packing.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/packing.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/quaternion.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/quaternion.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/random.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/random.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/reciprocal.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/reciprocal.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/round.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/round.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/type_precision.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/type_precision.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/type_ptr.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/type_ptr.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/ulp.hpp	/^namespace glm$/;"	n
glm	include/glm/gtc/ulp.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtc/ulp.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtc/vec1.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/associated_min_max.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/associated_min_max.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/bit.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/bit.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/closest_point.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/closest_point.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/color_space.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/color_space.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/color_space_YCoCg.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/common.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/common.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/compatibility.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/compatibility.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/component_wise.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/component_wise.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/dual_quaternion.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/dual_quaternion.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/euler_angles.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/euler_angles.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/extend.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/extend.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/extented_min_max.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/extented_min_max.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/fast_exponential.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/fast_exponential.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/fast_square_root.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/fast_square_root.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/fast_trigonometry.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/gradient_paint.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/gradient_paint.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/handed_coordinate_space.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/integer.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/integer.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/intersect.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/intersect.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/io.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/io.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/log_base.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/log_base.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_cross_product.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_decompose.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_decompose.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_interpolation.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_major_storage.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_operation.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_operation.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_query.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_query.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/matrix_transform_2d.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/mixed_product.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/mixed_product.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/multiple.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/multiple.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/norm.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/norm.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/normal.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/normal.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/normalize_dot.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/normalize_dot.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/number_precision.hpp	/^namespace glm{$/;"	n
glm	include/glm/gtx/number_precision.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/optimum_pow.hpp	/^namespace glm{$/;"	n
glm	include/glm/gtx/optimum_pow.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/orthonormalize.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/orthonormalize.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/perpendicular.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/perpendicular.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/polar_coordinates.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/polar_coordinates.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/projection.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/projection.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/quaternion.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/quaternion.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/range.hpp	/^namespace glm{$/;"	n
glm	include/glm/gtx/raw_data.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/rotate_normalized_axis.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/rotate_vector.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/rotate_vector.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/scalar_relational.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/scalar_relational.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/simd_mat4.hpp	/^namespace glm{$/;"	n
glm	include/glm/gtx/simd_mat4.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/simd_quat.hpp	/^namespace glm{$/;"	n
glm	include/glm/gtx/simd_quat.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/simd_vec4.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/simd_vec4.hpp	/^namespace glm{$/;"	n
glm	include/glm/gtx/simd_vec4.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/spline.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/spline.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/std_based_type.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/std_based_type.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/string_cast.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/string_cast.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/transform.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/transform.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/transform2.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/transform2.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/type_aligned.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/type_aligned.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/vector_angle.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/vector_angle.inl	/^namespace glm$/;"	n	file:
glm	include/glm/gtx/vector_query.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/vector_query.inl	/^namespace glm{$/;"	n	file:
glm	include/glm/gtx/wrap.hpp	/^namespace glm$/;"	n
glm	include/glm/gtx/wrap.inl	/^namespace glm$/;"	n	file:
glm	include/glm/mat2x2.hpp	/^namespace glm$/;"	n
glm	include/glm/mat2x3.hpp	/^namespace glm$/;"	n
glm	include/glm/mat2x4.hpp	/^namespace glm$/;"	n
glm	include/glm/mat3x2.hpp	/^namespace glm$/;"	n
glm	include/glm/mat3x3.hpp	/^namespace glm$/;"	n
glm	include/glm/mat3x4.hpp	/^namespace glm$/;"	n
glm	include/glm/mat4x2.hpp	/^namespace glm$/;"	n
glm	include/glm/mat4x3.hpp	/^namespace glm$/;"	n
glm	include/glm/mat4x4.hpp	/^namespace glm$/;"	n
glx_get_proc_address	src/gl3w.c	/^static PFNGLXGETPROCADDRESSPROC glx_get_proc_address;$/;"	v	typeref:typename:PFNGLXGETPROCADDRESSPROC	file:
golden_ratio	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType golden_ratio()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
grad4	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> grad4(T const & j, tvec4<T, P> const & ip)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
grad4	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> grad4(T const & j, tvec4<T, P> const & ip)$/;"	f	namespace:glm::gtc	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
greaterThan	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> greaterThan(vecType<T, P> const & x, vecType<T, P> const & /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
greaterThan	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> greaterThan(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
greaterThan	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
greaterThanEqual	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> greaterThanEqual(vecType<T, P> const & x, vecType<T, P> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
greaterThanEqual	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> greaterThanEqual(tquat<T, P> const & x, tquat<T, P> const & y/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
greaterThanEqual	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
gtc	include/glm/gtc/noise.inl	/^namespace gtc$/;"	n	namespace:glm	file:
gtx	include/glm/gtx/number_precision.hpp	/^namespace gtx$/;"	n	namespace:glm
gtx	include/glm/gtx/optimum_pow.hpp	/^namespace gtx$/;"	n	namespace:glm
half2float	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint half2float(glm::uint h)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
halfVector	include/glm/detail/dummy.cpp	/^	glm::vec4 halfVector; \/\/ Derived: Hi$/;"	m	struct:light	typeref:typename:glm::vec4	file:
half_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
hash_cleanup	src/lodepng.cpp	/^static void hash_cleanup(Hash* hash)$/;"	f	typeref:typename:void	file:
hash_init	src/lodepng.cpp	/^static unsigned hash_init(Hash* hash, unsigned windowsize)$/;"	f	typeref:typename:unsigned	file:
hdata	include/glm/detail/type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail	typeref:typename:short
head	src/lodepng.cpp	/^  int* head; \/*hash value to head circular pos - can be outdated if went around window*\/$/;"	m	struct:Hash	typeref:typename:int *	file:
headz	src/lodepng.cpp	/^  int* headz; \/*similar to head, but for chainz*\/$/;"	m	struct:Hash	typeref:typename:int *	file:
help	build/Makefile	/^help:$/;"	t
hermite	include/glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType hermite$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
higherMultiple	include/glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER genType higherMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
higherMultiple	include/glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> higherMultiple(vecType<T, P> const & Source, vecType<T, P> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
highestBitValue	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genIUType highestBitValue(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
highestBitValue	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> highestBitValue(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
highp	include/glm/detail/precision.hpp	/^		highp,$/;"	e	enum:glm::precision
highp_bvec1	include/glm/gtc/vec1.hpp	/^	typedef highp_bvec1_t			highp_bvec1;$/;"	t	namespace:glm	typeref:typename:highp_bvec1_t
highp_bvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<bool, highp>		highp_bvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<bool,highp>
highp_bvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<bool, highp>		highp_bvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<bool,highp>
highp_bvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<bool, highp>		highp_bvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<bool,highp>
highp_bvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<bool, highp>		highp_bvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<bool,highp>
highp_ddualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,highp>
highp_dmat2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,highp>
highp_dmat2x2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,highp>
highp_dmat2x3	include/glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, highp>		highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<double,highp>
highp_dmat2x4	include/glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, highp>		highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<double,highp>
highp_dmat3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,highp>
highp_dmat3x2	include/glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, highp>		highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<double,highp>
highp_dmat3x3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,highp>
highp_dmat3x4	include/glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, highp>		highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<double,highp>
highp_dmat4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,highp>
highp_dmat4x2	include/glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, highp>		highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<double,highp>
highp_dmat4x3	include/glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, highp>		highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<double,highp>
highp_dmat4x4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,highp>
highp_dquat	include/glm/fwd.hpp	/^	typedef tquat<double, highp>	highp_dquat;$/;"	t	namespace:glm	typeref:typename:tquat<double,highp>
highp_dualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_dvec1	include/glm/gtc/vec1.hpp	/^	typedef highp_dvec1_t			highp_dvec1;$/;"	t	namespace:glm	typeref:typename:highp_dvec1_t
highp_dvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<double, highp>	highp_dvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<double,highp>
highp_dvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<double, highp>	highp_dvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<double,highp>
highp_dvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<double, highp>	highp_dvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<double,highp>
highp_dvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<double, highp>	highp_dvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<double,highp>
highp_f32	include/glm/fwd.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm	typeref:typename:float32
highp_f32mat2	include/glm/fwd.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
highp_f32mat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,highp>
highp_f32mat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,highp>
highp_f32mat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,highp>
highp_f32mat3	include/glm/fwd.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
highp_f32mat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,highp>
highp_f32mat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,highp>
highp_f32mat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,highp>
highp_f32mat4	include/glm/fwd.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
highp_f32mat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,highp>
highp_f32mat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,highp>
highp_f32mat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,highp>
highp_f32quat	include/glm/fwd.hpp	/^	typedef tquat<f32, highp> highp_f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,highp>
highp_f32vec1	include/glm/fwd.hpp	/^	typedef tvec1<f32, highp> highp_f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,highp>
highp_f32vec2	include/glm/fwd.hpp	/^	typedef tvec2<f32, highp> highp_f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,highp>
highp_f32vec3	include/glm/fwd.hpp	/^	typedef tvec3<f32, highp> highp_f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,highp>
highp_f32vec4	include/glm/fwd.hpp	/^	typedef tvec4<f32, highp> highp_f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,highp>
highp_f64	include/glm/fwd.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm	typeref:typename:float64
highp_f64mat2	include/glm/fwd.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x2
highp_f64mat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,highp>
highp_f64mat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,highp>
highp_f64mat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,highp>
highp_f64mat3	include/glm/fwd.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x3
highp_f64mat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,highp>
highp_f64mat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,highp>
highp_f64mat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,highp>
highp_f64mat4	include/glm/fwd.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x4
highp_f64mat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,highp>
highp_f64mat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,highp>
highp_f64mat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,highp>
highp_f64quat	include/glm/fwd.hpp	/^	typedef tquat<f64, highp> highp_f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,highp>
highp_f64vec1	include/glm/fwd.hpp	/^	typedef tvec1<f64, highp> highp_f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,highp>
highp_f64vec2	include/glm/fwd.hpp	/^	typedef tvec2<f64, highp> highp_f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,highp>
highp_f64vec3	include/glm/fwd.hpp	/^	typedef tvec3<f64, highp> highp_f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,highp>
highp_f64vec4	include/glm/fwd.hpp	/^	typedef tvec4<f64, highp> highp_f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,highp>
highp_fdualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_float	include/glm/detail/type_float.hpp	/^	typedef highp_float_t		highp_float;$/;"	t	namespace:glm	typeref:typename:highp_float_t
highp_float32	include/glm/fwd.hpp	/^	typedef detail::float32 highp_float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
highp_float32_t	include/glm/fwd.hpp	/^	typedef detail::float32 highp_float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
highp_float64	include/glm/fwd.hpp	/^	typedef detail::float64 highp_float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
highp_float64_t	include/glm/fwd.hpp	/^	typedef detail::float64 highp_float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
highp_float_t	include/glm/detail/type_float.hpp	/^	typedef double				highp_float_t;$/;"	t	namespace:glm	typeref:typename:double
highp_fmat2	include/glm/fwd.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm	typeref:typename:highp_fmat2x2
highp_fmat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,highp>
highp_fmat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,highp>
highp_fmat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,highp>
highp_fmat3	include/glm/fwd.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm	typeref:typename:highp_fmat3x3
highp_fmat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,highp>
highp_fmat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,highp>
highp_fmat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,highp>
highp_fmat4	include/glm/fwd.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm	typeref:typename:highp_fmat4x4
highp_fmat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,highp>
highp_fmat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,highp>
highp_fmat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,highp>
highp_fquat	include/glm/fwd.hpp	/^	typedef highp_quat			highp_fquat;$/;"	t	namespace:glm	typeref:typename:highp_quat
highp_fvec1	include/glm/fwd.hpp	/^	typedef tvec1<float, highp> highp_fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,highp>
highp_fvec2	include/glm/fwd.hpp	/^	typedef tvec2<float, highp> highp_fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
highp_fvec3	include/glm/fwd.hpp	/^	typedef tvec3<float, highp> highp_fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
highp_fvec4	include/glm/fwd.hpp	/^	typedef tvec4<float, highp> highp_fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
highp_i16	include/glm/fwd.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_i16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_i16vec1	include/glm/fwd.hpp	/^	typedef tvec1<i16, highp>		highp_i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,highp>
highp_i16vec2	include/glm/fwd.hpp	/^	typedef tvec2<i16, highp>		highp_i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,highp>
highp_i16vec3	include/glm/fwd.hpp	/^	typedef tvec3<i16, highp>		highp_i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,highp>
highp_i16vec4	include/glm/fwd.hpp	/^	typedef tvec4<i16, highp>		highp_i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,highp>
highp_i32	include/glm/fwd.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_i32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_i32vec1	include/glm/fwd.hpp	/^	typedef tvec1<i32, highp>		highp_i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,highp>
highp_i32vec2	include/glm/fwd.hpp	/^	typedef tvec2<i32, highp>		highp_i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,highp>
highp_i32vec3	include/glm/fwd.hpp	/^	typedef tvec3<i32, highp>		highp_i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,highp>
highp_i32vec4	include/glm/fwd.hpp	/^	typedef tvec4<i32, highp>		highp_i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,highp>
highp_i64	include/glm/fwd.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_i64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_i64vec1	include/glm/fwd.hpp	/^	typedef tvec1<i64, highp>		highp_i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,highp>
highp_i64vec2	include/glm/fwd.hpp	/^	typedef tvec2<i64, highp>		highp_i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,highp>
highp_i64vec3	include/glm/fwd.hpp	/^	typedef tvec3<i64, highp>		highp_i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,highp>
highp_i64vec4	include/glm/fwd.hpp	/^	typedef tvec4<i64, highp>		highp_i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,highp>
highp_i8	include/glm/fwd.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_i8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_i8vec1	include/glm/fwd.hpp	/^	typedef tvec1<i8, highp> highp_i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,highp>
highp_i8vec2	include/glm/fwd.hpp	/^	typedef tvec2<i8, highp> highp_i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,highp>
highp_i8vec3	include/glm/fwd.hpp	/^	typedef tvec3<i8, highp> highp_i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,highp>
highp_i8vec4	include/glm/fwd.hpp	/^	typedef tvec4<i8, highp> highp_i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,highp>
highp_imat2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,highp>
highp_imat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,highp>
highp_imat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, highp>				highp_imat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<int,highp>
highp_imat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, highp>				highp_imat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<int,highp>
highp_imat3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,highp>
highp_imat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, highp>				highp_imat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<int,highp>
highp_imat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,highp>
highp_imat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, highp>				highp_imat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<int,highp>
highp_imat4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,highp>
highp_imat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, highp>				highp_imat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<int,highp>
highp_imat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, highp>				highp_imat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<int,highp>
highp_imat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,highp>
highp_int	include/glm/detail/type_int.hpp	/^	typedef detail::highp_int_t				highp_int;$/;"	t	namespace:glm	typeref:typename:detail::highp_int_t
highp_int16	include/glm/fwd.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16_t	include/glm/fwd.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int32	include/glm/fwd.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32_t	include/glm/fwd.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int64	include/glm/fwd.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64_t	include/glm/fwd.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int8	include/glm/fwd.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8_t	include/glm/fwd.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int_t	include/glm/detail/type_int.hpp	/^	typedef signed int						highp_int_t;$/;"	t	namespace:glm::detail	typeref:typename:signed int
highp_ivec1	include/glm/gtc/vec1.hpp	/^	typedef highp_ivec1_t			highp_ivec1;$/;"	t	namespace:glm	typeref:typename:highp_ivec1_t
highp_ivec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<int, highp>		highp_ivec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<int,highp>
highp_ivec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<int, highp>		highp_ivec2;$/;"	t	namespace:glm	typeref:typename:tvec2<int,highp>
highp_ivec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<int, highp>		highp_ivec3;$/;"	t	namespace:glm	typeref:typename:tvec3<int,highp>
highp_ivec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<int, highp>		highp_ivec4;$/;"	t	namespace:glm	typeref:typename:tvec4<int,highp>
highp_mat2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2	include/glm/mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2x2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2x2	include/glm/mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2x3	include/glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,highp>
highp_mat2x3	include/glm/mat2x3.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,highp>
highp_mat2x4	include/glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,highp>
highp_mat2x4	include/glm/mat2x4.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,highp>
highp_mat3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3	include/glm/mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3x2	include/glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,highp>
highp_mat3x2	include/glm/mat3x2.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,highp>
highp_mat3x3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3x3	include/glm/mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3x4	include/glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,highp>
highp_mat3x4	include/glm/mat3x4.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,highp>
highp_mat4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_mat4	include/glm/mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_mat4x2	include/glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,highp>
highp_mat4x2	include/glm/mat4x2.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,highp>
highp_mat4x3	include/glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,highp>
highp_mat4x3	include/glm/mat4x3.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,highp>
highp_mat4x4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_mat4x4	include/glm/mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_quat	include/glm/fwd.hpp	/^	typedef tquat<float, highp>		highp_quat;$/;"	t	namespace:glm	typeref:typename:tquat<float,highp>
highp_u16	include/glm/fwd.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_u16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_u16vec1	include/glm/fwd.hpp	/^	typedef tvec1<u16, highp>		highp_u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,highp>
highp_u16vec2	include/glm/fwd.hpp	/^	typedef tvec2<u16, highp>		highp_u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,highp>
highp_u16vec3	include/glm/fwd.hpp	/^	typedef tvec3<u16, highp>		highp_u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,highp>
highp_u16vec4	include/glm/fwd.hpp	/^	typedef tvec4<u16, highp>		highp_u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,highp>
highp_u32	include/glm/fwd.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_u32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_u32vec1	include/glm/fwd.hpp	/^	typedef tvec1<u32, highp>		highp_u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,highp>
highp_u32vec2	include/glm/fwd.hpp	/^	typedef tvec2<u32, highp>		highp_u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,highp>
highp_u32vec3	include/glm/fwd.hpp	/^	typedef tvec3<u32, highp>		highp_u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,highp>
highp_u32vec4	include/glm/fwd.hpp	/^	typedef tvec4<u32, highp>		highp_u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,highp>
highp_u64	include/glm/fwd.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_u64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_u64vec1	include/glm/fwd.hpp	/^	typedef tvec1<u64, highp>		highp_u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,highp>
highp_u64vec2	include/glm/fwd.hpp	/^	typedef tvec2<u64, highp>		highp_u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,highp>
highp_u64vec3	include/glm/fwd.hpp	/^	typedef tvec3<u64, highp>		highp_u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,highp>
highp_u64vec4	include/glm/fwd.hpp	/^	typedef tvec4<u64, highp>		highp_u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,highp>
highp_u8	include/glm/fwd.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_u8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_u8vec1	include/glm/fwd.hpp	/^	typedef tvec1<u8, highp> highp_u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,highp>
highp_u8vec2	include/glm/fwd.hpp	/^	typedef tvec2<u8, highp> highp_u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,highp>
highp_u8vec3	include/glm/fwd.hpp	/^	typedef tvec3<u8, highp> highp_u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,highp>
highp_u8vec4	include/glm/fwd.hpp	/^	typedef tvec4<u8, highp> highp_u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,highp>
highp_uint	include/glm/detail/type_int.hpp	/^	typedef detail::highp_uint_t			highp_uint;$/;"	t	namespace:glm	typeref:typename:detail::highp_uint_t
highp_uint16	include/glm/fwd.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16_t	include/glm/fwd.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint32	include/glm/fwd.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32_t	include/glm/fwd.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint64	include/glm/fwd.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64_t	include/glm/fwd.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint8	include/glm/fwd.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8_t	include/glm/fwd.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint_t	include/glm/detail/type_int.hpp	/^	typedef unsigned int					highp_uint_t;$/;"	t	namespace:glm::detail	typeref:typename:unsigned int
highp_umat2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2;	$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,highp>
highp_umat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,highp>
highp_umat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, highp>				highp_umat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<uint,highp>
highp_umat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, highp>				highp_umat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<uint,highp>
highp_umat3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,highp>
highp_umat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, highp>				highp_umat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<uint,highp>
highp_umat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,highp>
highp_umat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, highp>				highp_umat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<uint,highp>
highp_umat4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,highp>
highp_umat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, highp>				highp_umat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<uint,highp>
highp_umat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, highp>				highp_umat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<uint,highp>
highp_umat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,highp>
highp_uvec1	include/glm/gtc/vec1.hpp	/^	typedef highp_uvec1_t			highp_uvec1;$/;"	t	namespace:glm	typeref:typename:highp_uvec1_t
highp_uvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<uint, highp>		highp_uvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<uint,highp>
highp_uvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<uint, highp>		highp_uvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<uint,highp>
highp_uvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<uint, highp>		highp_uvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<uint,highp>
highp_uvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<uint, highp>		highp_uvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<uint,highp>
highp_vec1	include/glm/fwd.hpp	/^	typedef tvec1<float, highp> highp_vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,highp>
highp_vec1	include/glm/gtc/vec1.hpp	/^	typedef highp_vec1_t			highp_vec1;$/;"	t	namespace:glm	typeref:typename:highp_vec1_t
highp_vec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<float, highp>		highp_vec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<float,highp>
highp_vec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<float, highp>		highp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
highp_vec2	include/glm/fwd.hpp	/^	typedef tvec2<float, highp> highp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
highp_vec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<float, highp>		highp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
highp_vec3	include/glm/fwd.hpp	/^	typedef tvec3<float, highp> highp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
highp_vec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<float, highp>		highp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
highp_vec4	include/glm/fwd.hpp	/^	typedef tvec4<float, highp> highp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
horizontalAngle	include/camera.h	/^        float horizontalAngle;$/;"	m	class:Camera	typeref:typename:float
hour	include/lodepng.h	/^  unsigned hour;    \/*0-23*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
hsvColor	include/glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> hsvColor(const tvec3<T, P>& rgbColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
huffmanDecodeSymbol	src/lodepng.cpp	/^static unsigned huffmanDecodeSymbol(const unsigned char* in, size_t* bp,$/;"	f	typeref:typename:unsigned	file:
hundred_eighty	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED hundred_eighty = _mm_set_ps1(180.f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
hundred_eighty_over_pi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED hundred_eighty_over_pi = _mm_set_ps1(57.2957795130823208767981/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
i	include/glm/detail/intrinsic_common.inl	/^		struct i$/;"	s	union:glm::detail::ieee754_QNAN	file:
i	include/glm/detail/type_half.inl	/^		uint32 i;$/;"	m	union:glm::detail::uif32	typeref:typename:uint32	file:
i	include/glm/gtc/bitfield.inl	/^			int16 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int16	file:
i	include/glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int32	file:
i	include/glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:int32	file:
i	include/glm/gtc/bitfield.inl	/^			int64 i;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:int64	file:
i	include/glm/gtc/bitfield.inl	/^			int8 i;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:int8	file:
i10i10i10i2	include/glm/gtc/packing.inl	/^	union i10i10i10i2$/;"	u	namespace:glm::detail	file:
i16	include/glm/fwd.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
i16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
i16vec1	include/glm/fwd.hpp	/^	typedef highp_i16vec1			i16vec1;$/;"	t	namespace:glm	typeref:typename:highp_i16vec1
i16vec1	include/glm/fwd.hpp	/^	typedef lowp_i16vec1			i16vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec1
i16vec1	include/glm/fwd.hpp	/^	typedef mediump_i16vec1			i16vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec1
i16vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<i16, defaultp> i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,defaultp>
i16vec2	include/glm/fwd.hpp	/^	typedef highp_i16vec2			i16vec2;$/;"	t	namespace:glm	typeref:typename:highp_i16vec2
i16vec2	include/glm/fwd.hpp	/^	typedef lowp_i16vec2			i16vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec2
i16vec2	include/glm/fwd.hpp	/^	typedef mediump_i16vec2			i16vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec2
i16vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<i16, defaultp> i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,defaultp>
i16vec3	include/glm/fwd.hpp	/^	typedef highp_i16vec3			i16vec3;$/;"	t	namespace:glm	typeref:typename:highp_i16vec3
i16vec3	include/glm/fwd.hpp	/^	typedef lowp_i16vec3			i16vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec3
i16vec3	include/glm/fwd.hpp	/^	typedef mediump_i16vec3			i16vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec3
i16vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<i16, defaultp> i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,defaultp>
i16vec4	include/glm/fwd.hpp	/^	typedef highp_i16vec4			i16vec4;$/;"	t	namespace:glm	typeref:typename:highp_i16vec4
i16vec4	include/glm/fwd.hpp	/^	typedef lowp_i16vec4			i16vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec4
i16vec4	include/glm/fwd.hpp	/^	typedef mediump_i16vec4			i16vec4;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec4
i16vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<i16, defaultp> i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,defaultp>
i32	include/glm/fwd.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
i32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
i32vec1	include/glm/fwd.hpp	/^	typedef highp_i32vec1			i32vec1;$/;"	t	namespace:glm	typeref:typename:highp_i32vec1
i32vec1	include/glm/fwd.hpp	/^	typedef lowp_i32vec1			i32vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec1
i32vec1	include/glm/fwd.hpp	/^	typedef mediump_i32vec1			i32vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec1
i32vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<i32, defaultp> i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,defaultp>
i32vec2	include/glm/fwd.hpp	/^	typedef highp_i32vec2			i32vec2;$/;"	t	namespace:glm	typeref:typename:highp_i32vec2
i32vec2	include/glm/fwd.hpp	/^	typedef lowp_i32vec2			i32vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec2
i32vec2	include/glm/fwd.hpp	/^	typedef mediump_i32vec2			i32vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec2
i32vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<i32, defaultp> i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,defaultp>
i32vec3	include/glm/fwd.hpp	/^	typedef highp_i32vec3			i32vec3;$/;"	t	namespace:glm	typeref:typename:highp_i32vec3
i32vec3	include/glm/fwd.hpp	/^	typedef lowp_i32vec3			i32vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec3
i32vec3	include/glm/fwd.hpp	/^	typedef mediump_i32vec3			i32vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec3
i32vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<i32, defaultp> i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,defaultp>
i32vec4	include/glm/fwd.hpp	/^	typedef highp_i32vec4			i32vec4;$/;"	t	namespace:glm	typeref:typename:highp_i32vec4
i32vec4	include/glm/fwd.hpp	/^	typedef lowp_i32vec4			i32vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec4
i32vec4	include/glm/fwd.hpp	/^	typedef mediump_i32vec4			i32vec4;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec4
i32vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<i32, defaultp> i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,defaultp>
i64	include/glm/fwd.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
i64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
i64vec1	include/glm/fwd.hpp	/^	typedef highp_i64vec1			i64vec1;$/;"	t	namespace:glm	typeref:typename:highp_i64vec1
i64vec1	include/glm/fwd.hpp	/^	typedef lowp_i64vec1			i64vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec1
i64vec1	include/glm/fwd.hpp	/^	typedef mediump_i64vec1			i64vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec1
i64vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<i64, defaultp> i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,defaultp>
i64vec2	include/glm/fwd.hpp	/^	typedef highp_i64vec2			i64vec2;$/;"	t	namespace:glm	typeref:typename:highp_i64vec2
i64vec2	include/glm/fwd.hpp	/^	typedef lowp_i64vec2			i64vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec2
i64vec2	include/glm/fwd.hpp	/^	typedef mediump_i64vec2			i64vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec2
i64vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<i64, defaultp> i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,defaultp>
i64vec3	include/glm/fwd.hpp	/^	typedef highp_i64vec3			i64vec3;$/;"	t	namespace:glm	typeref:typename:highp_i64vec3
i64vec3	include/glm/fwd.hpp	/^	typedef lowp_i64vec3			i64vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec3
i64vec3	include/glm/fwd.hpp	/^	typedef mediump_i64vec3			i64vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec3
i64vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<i64, defaultp> i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,defaultp>
i64vec4	include/glm/fwd.hpp	/^	typedef highp_i64vec4			i64vec4;$/;"	t	namespace:glm	typeref:typename:highp_i64vec4
i64vec4	include/glm/fwd.hpp	/^	typedef lowp_i64vec4			i64vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec4
i64vec4	include/glm/fwd.hpp	/^	typedef mediump_i64vec4			i64vec4;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec4
i64vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<i64, defaultp> i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,defaultp>
i8	include/glm/fwd.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
i8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
i8vec1	include/glm/fwd.hpp	/^	typedef highp_i8vec1			i8vec1;$/;"	t	namespace:glm	typeref:typename:highp_i8vec1
i8vec1	include/glm/fwd.hpp	/^	typedef lowp_i8vec1				i8vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec1
i8vec1	include/glm/fwd.hpp	/^	typedef mediump_i8vec1			i8vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i8vec1
i8vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<i8, defaultp> i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,defaultp>
i8vec2	include/glm/fwd.hpp	/^	typedef highp_i8vec2			i8vec2;$/;"	t	namespace:glm	typeref:typename:highp_i8vec2
i8vec2	include/glm/fwd.hpp	/^	typedef lowp_i8vec2				i8vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec2
i8vec2	include/glm/fwd.hpp	/^	typedef mediump_i8vec2			i8vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i8vec2
i8vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<i8, defaultp> i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,defaultp>
i8vec3	include/glm/fwd.hpp	/^	typedef highp_i8vec3			i8vec3;$/;"	t	namespace:glm	typeref:typename:highp_i8vec3
i8vec3	include/glm/fwd.hpp	/^	typedef lowp_i8vec3				i8vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec3
i8vec3	include/glm/fwd.hpp	/^	typedef mediump_i8vec3			i8vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i8vec3
i8vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<i8, defaultp> i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,defaultp>
i8vec4	include/glm/fwd.hpp	/^	typedef highp_i8vec4			i8vec4;$/;"	t	namespace:glm	typeref:typename:highp_i8vec4
i8vec4	include/glm/fwd.hpp	/^	typedef lowp_i8vec4				i8vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec4
i8vec4	include/glm/fwd.hpp	/^	typedef mediump_i8vec4			i8vec4;	$/;"	t	namespace:glm	typeref:typename:mediump_i8vec4
i8vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<i8, defaultp> i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,defaultp>
id	include/glm/gtx/io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct	typeref:typename:std::locale::id
id	include/glm/gtx/io.inl	/^	template <typename CTy> std::locale::id format_punct<CTy>::id;$/;"	m	class:glm::io::format_punct<CTy>	typeref:typename:std::locale::id
id	include/lights/directional.h	/^    size_t id;$/;"	m	struct:DirectionalLight	typeref:typename:size_t
ieee754_QNAN	include/glm/detail/intrinsic_common.inl	/^		ieee754_QNAN() : f(0.0)\/*, mantissa(0x7FFFFF), exp(0xFF), sign(0x0)*\/ {}$/;"	f	union:glm::detail::ieee754_QNAN	file:
ieee754_QNAN	include/glm/detail/intrinsic_common.inl	/^	union ieee754_QNAN$/;"	u	namespace:glm::detail	file:
ieee_double_shape_type	include/glm/gtc/ulp.inl	/^} ieee_double_shape_type;$/;"	t	typeref:union:__anona4a85f36020a	file:
ieee_float_shape_type	include/glm/gtc/ulp.inl	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anona4a85f36010a	file:
ignore_adler32	include/lodepng.h	/^  unsigned ignore_adler32; \/*if 1, continue and don't give an error message if the Adler32 chec/;"	m	struct:LodePNGDecompressSettings	typeref:typename:unsigned
ignore_crc	include/lodepng.h	/^  unsigned ignore_crc; \/*ignore CRC checksums*\/$/;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
imat2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2								imat2;$/;"	t	namespace:glm	typeref:typename:highp_imat2
imat2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2								imat2;$/;"	t	namespace:glm	typeref:typename:lowp_imat2
imat2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2							imat2;$/;"	t	namespace:glm	typeref:typename:mediump_imat2
imat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:highp_imat2x2
imat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x2
imat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x2
imat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:highp_imat2x3
imat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x3
imat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x3
imat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:highp_imat2x4
imat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x4
imat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x4
imat3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3								imat3;$/;"	t	namespace:glm	typeref:typename:highp_imat3
imat3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3								imat3;$/;"	t	namespace:glm	typeref:typename:lowp_imat3
imat3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3							imat3;$/;"	t	namespace:glm	typeref:typename:mediump_imat3
imat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:highp_imat3x2
imat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x2
imat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x2
imat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:highp_imat3x3
imat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x3
imat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x3
imat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:highp_imat3x4
imat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x4
imat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x4
imat4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4								imat4;$/;"	t	namespace:glm	typeref:typename:highp_imat4
imat4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4								imat4;$/;"	t	namespace:glm	typeref:typename:lowp_imat4
imat4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4							imat4;$/;"	t	namespace:glm	typeref:typename:mediump_imat4
imat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:highp_imat4x2
imat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x2
imat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x2
imat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:highp_imat4x3
imat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x3
imat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x3
imat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:highp_imat4x4
imat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x4
imat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x4
imulExtended	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(int x, int y, int & msb, int & lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
imulExtended	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(vecType<int, P> const & x, vecType<int, P> const & y, vecT/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
in_use	src/lodepng.cpp	/^  int in_use;$/;"	m	struct:BPMNode	typeref:typename:int	file:
index	src/lodepng.cpp	/^  int index; \/*the payload. Only has a meaningful value if this is in the last level*\/$/;"	m	struct:ColorTree	typeref:typename:int	file:
index	src/lodepng.cpp	/^  unsigned index; \/*index of this leaf node (called "count" in the paper)*\/$/;"	m	struct:BPMNode	typeref:typename:unsigned	file:
infinitePerspective	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> infinitePerspective$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
inflate	src/lodepng.cpp	/^static unsigned inflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned	file:
inflateHuffmanBlock	src/lodepng.cpp	/^static unsigned inflateHuffmanBlock(ucvector* out, const unsigned char* in, size_t* bp,$/;"	f	typeref:typename:unsigned	file:
inflateNoCompression	src/lodepng.cpp	/^static unsigned inflateNoCompression(ucvector* out, const unsigned char* in, size_t* bp, size_t*/;"	f	typeref:typename:unsigned	file:
info_arch	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_language_dialect_default	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_png	include/lodepng.h	/^  LodePNGInfo info_png; \/*info of the PNG image obtained after decoding*\/$/;"	m	struct:LodePNGState	typeref:typename:LodePNGInfo
info_raw	include/lodepng.h	/^  LodePNGColorMode info_raw; \/*specifies the format in which you would like to get the raw pixe/;"	m	struct:LodePNGState	typeref:typename:LodePNGColorMode
info_simulate	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
initCameraRotationAngles	src/camera.cpp	/^void Camera::initCameraRotationAngles()$/;"	f	class:Camera	typeref:typename:void
install	build/Makefile	/^install: preinstall$/;"	t
install/fast	build/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/local	build/Makefile	/^install\/local: preinstall$/;"	t
install/local/fast	build/Makefile	/^install\/local\/fast: install\/local$/;"	t
install/strip	build/Makefile	/^install\/strip: preinstall$/;"	t
install/strip/fast	build/Makefile	/^install\/strip\/fast: install\/strip$/;"	t
int1	include/glm/gtx/compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compati/;"	t	namespace:glm	typeref:typename:int
int16	include/glm/detail/type_int.hpp	/^		typedef std::int16_t				int16;$/;"	t	namespace:glm::detail	typeref:typename:std::int16_t
int16	include/glm/detail/type_int.hpp	/^	typedef detail::int16					int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16	include/glm/fwd.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16_t	include/glm/fwd.hpp	/^	typedef detail::int16 int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
int1x1	include/glm/gtx/compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compa/;"	t	namespace:glm	typeref:typename:int
int2	include/glm/gtx/compatibility.hpp	/^	typedef tvec2<int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec2<int,highp>
int2x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x2<int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat2x2<int,highp>
int2x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x3<int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat2x3<int,highp>
int2x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat2x4<int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat2x4<int,highp>
int3	include/glm/gtx/compatibility.hpp	/^	typedef tvec3<int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec3<int,highp>
int32	include/glm/detail/type_int.hpp	/^		typedef std::int32_t				int32;$/;"	t	namespace:glm::detail	typeref:typename:std::int32_t
int32	include/glm/detail/type_int.hpp	/^	typedef detail::int32					int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32	include/glm/fwd.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32_t	include/GL/glcorearb.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	include/GL/glcorearb.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int32_t	include/glm/fwd.hpp	/^	typedef detail::int32 int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
int3x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x2<int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat3x2<int,highp>
int3x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x3<int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat3x3<int,highp>
int3x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat3x4<int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat3x4<int,highp>
int4	include/glm/gtx/compatibility.hpp	/^	typedef tvec4<int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec4<int,highp>
int4x2	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x2<int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat4x2<int,highp>
int4x3	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x3<int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat4x3<int,highp>
int4x4	include/glm/gtx/compatibility.hpp	/^	typedef tmat4x4<int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat4x4<int,highp>
int64	include/glm/detail/type_int.hpp	/^		typedef std::int64_t				int64;$/;"	t	namespace:glm::detail	typeref:typename:std::int64_t
int64	include/glm/detail/type_int.hpp	/^	typedef detail::int64					int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64	include/glm/fwd.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64_t	include/GL/glcorearb.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	include/GL/glcorearb.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	include/GL/glcorearb.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
int64_t	include/glm/fwd.hpp	/^	typedef detail::int64 int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
int8	include/glm/detail/type_int.hpp	/^		typedef std::int8_t					int8;$/;"	t	namespace:glm::detail	typeref:typename:std::int8_t
int8	include/glm/detail/type_int.hpp	/^	typedef detail::int8					int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8	include/glm/fwd.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8_t	include/glm/fwd.hpp	/^	typedef detail::int8 int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
intBitsToFloat	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float intBitsToFloat(int const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
intBitsToFloat	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<float, P> intBitsToFloat(vecType<int, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,P>
int_t	include/glm/detail/type_int.hpp	/^	typedef highp_int					int_t;$/;"	t	namespace:glm	typeref:typename:highp_int
int_t	include/glm/detail/type_int.hpp	/^	typedef lowp_int					int_t;$/;"	t	namespace:glm	typeref:typename:lowp_int
int_t	include/glm/detail/type_int.hpp	/^	typedef mediump_int					int_t;$/;"	t	namespace:glm	typeref:typename:mediump_int
interlace_method	include/lodepng.h	/^  unsigned interlace_method;  \/*interlace method of the original file*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
intermediate	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> intermediate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
interpolate	include/glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> interpolate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
intersectLineSphere	include/glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineSphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectLineTriangle	include/glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayPlane	include/glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayPlane$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRaySphere	include/glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRaySphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayTriangle	include/glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersection	include/glm/detail/dummy.cpp	/^struct intersection$/;"	s	file:
inverse	include/glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER matType<T, P> inverse(matType<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER matType<T,P>
inverse	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> inverse(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
inverse	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> inverse(tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
inverse	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD inverse(detail::fmat4x4SIMD const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
inverse	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD inverse$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
inverseTranspose	include/glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> inverseTranspose(tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
inverseTranspose	include/glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> inverseTranspose(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
inverseTranspose	include/glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> inverseTranspose(tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
inversesqrt	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType inversesqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
inversesqrt	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> inversesqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
inversesqrt	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD inversesqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
io	include/glm/gtx/io.hpp	/^	namespace io$/;"	n	namespace:glm
io	include/glm/gtx/io.inl	/^namespace io$/;"	n	namespace:glm	file:
isCompNull	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER tvec2<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<bool,P>
isCompNull	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER tvec3<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<bool,P>
isCompNull	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
isCompNull	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isIdentity	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isIdentity(matType<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isKeyPressed	src/controls.cpp	/^bool Controls::isKeyPressed(ControlKeys key) const$/;"	f	class:Controls	typeref:typename:bool
isMaterialValid	include/materials/material.h	/^        inline bool isMaterialValid() {return isValid;}$/;"	f	class:Material	typeref:typename:bool
isMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER bool isMultiple(genType Value, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isMultiple(vecType<T, P> const & Value, T Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isMultiple(vecType<T, P> const & Value, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isNormalized	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(tmat2x2<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(tmat3x3<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(tmat4x4<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(tmat2x2<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(tmat3x3<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(tmat4x4<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	include/glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isOrthogonal	include/glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isOrthogonal(matType<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER bool isPowerOfTwo(genType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isPowerOfTwo(vecType<T, P> const & Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isValid	include/materials/material.h	/^        bool isValid = false;$/;"	m	class:Material	typeref:typename:bool
is_matrix	include/glm/detail/type_gentype.inl	/^bool base<vT, cT, rT, pT>::is_matrix()$/;"	f	class:glm::detail::base	typeref:typename:bool
is_scalar	include/glm/detail/type_gentype.inl	/^bool base<vT, cT, rT, pT>::is_scalar()$/;"	f	class:glm::detail::base	typeref:typename:bool
is_vector	include/glm/detail/type_gentype.hpp	/^	bool genType<VALTYPE, TYPE>::is_vector()$/;"	f	class:glm::detail::genType	typeref:typename:bool
is_vector	include/glm/detail/type_gentype.inl	/^bool base<vT, cT, rT, pT>::is_vector()$/;"	f	class:glm::detail::base	typeref:typename:bool
isdenormal	include/glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER bool isdenormal(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isdenormal	include/glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec1<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec1<T,P>::bool_type
isdenormal	include/glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec2<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec2<T,P>::bool_type
isdenormal	include/glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec3<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec3<T,P>::bool_type
isdenormal	include/glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec4<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec4<T,P>::bool_type
isfinite	include/glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER bool isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isfinite	include/glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER tvec2<bool, P> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<bool,P>
isfinite	include/glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER tvec3<bool, P> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<bool,P>
isfinite	include/glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
isinf	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isinf(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isinf	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isinf(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isnan	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isnan(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isnan	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isnan(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
itext_keys	include/lodepng.h	/^  char** itext_keys; \/*the English keyword of the text chunk (e.g. "Comment")*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
itext_langtags	include/lodepng.h	/^  char** itext_langtags; \/*language tag for this text's language, ISO\/IEC 646 string, e.g. ISO/;"	m	struct:LodePNGInfo	typeref:typename:char **
itext_num	include/lodepng.h	/^  size_t itext_num; \/*the amount of international texts in this PNG*\/$/;"	m	struct:LodePNGInfo	typeref:typename:size_t
itext_strings	include/lodepng.h	/^  char** itext_strings; \/*the actual international text - UTF-8 string*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
itext_transkeys	include/lodepng.h	/^  char** itext_transkeys; \/*keyword translated to the international language - UTF-8 string*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
ivec1	include/glm/gtc/vec1.hpp	/^	typedef highp_ivec1			ivec1;$/;"	t	namespace:glm	typeref:typename:highp_ivec1
ivec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_ivec1			ivec1;$/;"	t	namespace:glm	typeref:typename:lowp_ivec1
ivec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_ivec1		ivec1;$/;"	t	namespace:glm	typeref:typename:mediump_ivec1
ivec2	include/glm/detail/type_vec.hpp	/^	typedef highp_ivec2			ivec2;$/;"	t	namespace:glm	typeref:typename:highp_ivec2
ivec2	include/glm/detail/type_vec.hpp	/^	typedef lowp_ivec2			ivec2;$/;"	t	namespace:glm	typeref:typename:lowp_ivec2
ivec2	include/glm/detail/type_vec.hpp	/^	typedef mediump_ivec2		ivec2;$/;"	t	namespace:glm	typeref:typename:mediump_ivec2
ivec3	include/glm/detail/type_vec.hpp	/^	typedef highp_ivec3			ivec3;$/;"	t	namespace:glm	typeref:typename:highp_ivec3
ivec3	include/glm/detail/type_vec.hpp	/^	typedef lowp_ivec3			ivec3;$/;"	t	namespace:glm	typeref:typename:lowp_ivec3
ivec3	include/glm/detail/type_vec.hpp	/^	typedef mediump_ivec3		ivec3;$/;"	t	namespace:glm	typeref:typename:mediump_ivec3
ivec4	include/glm/detail/type_vec.hpp	/^	typedef highp_ivec4			ivec4;$/;"	t	namespace:glm	typeref:typename:highp_ivec4
ivec4	include/glm/detail/type_vec.hpp	/^	typedef lowp_ivec4			ivec4;$/;"	t	namespace:glm	typeref:typename:lowp_ivec4
ivec4	include/glm/detail/type_vec.hpp	/^	typedef mediump_ivec4		ivec4;$/;"	t	namespace:glm	typeref:typename:mediump_ivec4
key	include/lodepng.h	/^  unsigned key; \/*if true, image is not opaque. Only if true and alpha is false, color key is p/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
key_b	include/lodepng.h	/^  unsigned key_b;       \/*blue component of color key*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_b	include/lodepng.h	/^  unsigned short key_b;$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned short
key_defined	include/lodepng.h	/^  unsigned key_defined; \/*is a transparent color key given? 0 = false, 1 = true*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_g	include/lodepng.h	/^  unsigned key_g;       \/*green component of color key*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_g	include/lodepng.h	/^  unsigned short key_g;$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned short
key_r	include/lodepng.h	/^  unsigned key_r;       \/*red\/greyscale component of color key*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:unsigned
key_r	include/lodepng.h	/^  unsigned short key_r; \/*these values are always in 16-bit bitdepth in the profile*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned short
keyboardMovementSpeed	include/camera.h	/^        float keyboardMovementSpeed = .1;$/;"	m	class:Camera	typeref:typename:float
l1Norm	include/glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l1Norm$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l2Norm	include/glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l2Norm$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lazymatching	include/lodepng.h	/^  unsigned lazymatching; \/*use lazy matching: better compression but a bit slower. Default: tru/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
ldexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType ldexp(genType const & x, int const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ldexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> ldexp(tvec1<T, P> const & x, tvec1<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
ldexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> ldexp(tvec2<T, P> const & x, tvec2<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
ldexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> ldexp(tvec3<T, P> const & x, tvec3<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
ldexp	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> ldexp(tvec4<T, P> const & x, tvec4<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
leftHanded	include/glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool leftHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
length	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T length(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType length(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
length	include/glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T, P>::length_type tmat2x2<T, P>::length() c/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T,P>::length_type
length	include/glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T, P>::length_type tmat2x3<T, P>::length() c/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T,P>::length_type
length	include/glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T, P>::length_type tmat2x4<T, P>::length() c/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T,P>::length_type
length	include/glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T, P>::length_type tmat3x2<T, P>::length() c/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T,P>::length_type
length	include/glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T, P>::length_type tmat3x3<T, P>::length() c/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T,P>::length_type
length	include/glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T, P>::length_type tmat3x4<T, P>::length() c/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T,P>::length_type
length	include/glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T, P>::length_type tmat4x2<T, P>::length() c/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T,P>::length_type
length	include/glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T, P>::length_type tmat4x3<T, P>::length() c/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T,P>::length_type
length	include/glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T, P>::length_type tmat4x4<T, P>::length() c/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T,P>::length_type
length	include/glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T, P>::length_type tvec1<T, P>::length() const$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T,P>::length_type
length	include/glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T, P>::length_type tvec3<T, P>::length() const$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T,P>::length_type
length	include/glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T, P>::length_type tvec4<T, P>::length() const$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T,P>::length_type
length	include/glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T, P>::length_type tquat<T, P>::length() const$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T,P>::length_type
length	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T length(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER length_t fmat4x4SIMD::length() const$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER length_t
length	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER float length$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
length	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float length$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
length2	include/glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T length2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length2	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T length2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length4	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD length4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
length_t	include/glm/detail/setup.hpp	/^		typedef int length_t;$/;"	t	namespace:glm	typeref:typename:int
length_t	include/glm/detail/setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm	typeref:typename:size_t
length_type	include/glm/detail/type_mat2x2.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:length_t
length_type	include/glm/detail/type_mat2x3.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:length_t
length_type	include/glm/detail/type_mat2x4.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:length_t
length_type	include/glm/detail/type_mat3x2.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:length_t
length_type	include/glm/detail/type_mat3x3.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:length_t
length_type	include/glm/detail/type_mat3x4.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:length_t
length_type	include/glm/detail/type_mat4x2.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:length_t
length_type	include/glm/detail/type_mat4x3.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:length_t
length_type	include/glm/detail/type_mat4x4.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:length_t
length_type	include/glm/detail/type_vec1.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tvec1	typeref:typename:length_t
length_type	include/glm/gtc/quaternion.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tquat	typeref:typename:length_t
length_type	include/glm/gtx/dual_quaternion.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tdualquat	typeref:typename:length_t
lengths	src/lodepng.cpp	/^  unsigned* lengths; \/*the lengths of the codes of the 1d-tree*\/$/;"	m	struct:HuffmanTree	typeref:typename:unsigned *	file:
lerp	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> lerp(tquat<T, P> const & x, tquat<T, P> const & y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
lerp	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> lerp(const tvec2<T, P>& x, co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
lerp	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> lerp(const tvec3<T, P>& x, co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
lerp	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> lerp(const tvec4<T, P>& x, co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
lerp	include/glm/gtx/compatibility.hpp	/^	template <typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}											/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lerp	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> lerp(tdualquat<T, P> const & x, tdualquat<T, P> const & y, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
lerp	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD lerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
lessThan	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> lessThan(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
lessThan	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> lessThan(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
lessThan	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
lessThanEqual	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> lessThanEqual(vecType<T, P> const & x, vecType<T, P> const /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
lessThanEqual	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> lessThanEqual(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
lessThanEqual	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
libgl	src/gl3w.c	/^static HMODULE libgl;$/;"	v	typeref:typename:HMODULE	file:
libgl	src/gl3w.c	/^static void *libgl;$/;"	v	typeref:typename:void *	file:
light	include/glm/detail/dummy.cpp	/^struct light$/;"	s	file:
lightUniformAttributes	include/materials/phongmaterial.h	/^        std::unordered_map<std::string, PhongLightAttributes> lightUniformAttributes;$/;"	m	class:PhongMaterial	typeref:typename:std::unordered_map<std::string,PhongLightAttributes>
linearAttenuation	include/glm/detail/dummy.cpp	/^	float linearAttenuation; \/\/ K1$/;"	m	struct:light	typeref:typename:float	file:
linearGradient	include/glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T linearGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
linearRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType linearRand(genType Min, genType Max)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
linearRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> linearRand(vecType<T, P> const & Min, vecType<T, P> const & Ma/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
linkShaderProgram	src/materials/material.cpp	/^GLuint Material::linkShaderProgram(const ShaderProgramStages& shaderStages)$/;"	f	class:Material	typeref:typename:GLuint
list_install_components	build/Makefile	/^list_install_components:$/;"	t
list_install_components/fast	build/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
listsize	src/lodepng.cpp	/^  unsigned listsize;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
literal	include/glm/gtx/string_cast.inl	/^	struct literal$/;"	s	namespace:glm::detail	file:
literal	include/glm/gtx/string_cast.inl	/^	struct literal<T, true>$/;"	s	namespace:glm::detail	file:
literal	include/glm/gtx/string_cast.inl	/^	struct literal<int64_t, false>$/;"	s	namespace:glm::detail	file:
literal	include/glm/gtx/string_cast.inl	/^	struct literal<uint64_t, false>$/;"	s	namespace:glm::detail	file:
ln_ln_two	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType ln_ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ln_ten	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType ln_ten()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ln_two	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
load	src/texture.cpp	/^bool Texture::load(GLenum textureTarget, const std::vector<uint8_t>& imageData, TextureFormat te/;"	f	class:Texture	typeref:typename:bool
load_file	src/lodepng.cpp	/^unsigned load_file(std::vector<unsigned char>& buffer, const std::string& filename)$/;"	f	namespace:lodepng	typeref:typename:unsigned
load_procs	src/gl3w.c	/^static void load_procs(void)$/;"	f	typeref:typename:void	file:
locale_	include/glm/gtx/io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:locale_type
locale_type	include/glm/gtx/io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::locale const
lodepng	include/lodepng.h	/^namespace lodepng$/;"	n
lodepng	src/lodepng.cpp	/^namespace lodepng$/;"	n	file:
lodepng_add32bitInt	src/lodepng.cpp	/^static void lodepng_add32bitInt(ucvector* buffer, unsigned value)$/;"	f	typeref:typename:void	file:
lodepng_add_itext	src/lodepng.cpp	/^unsigned lodepng_add_itext(LodePNGInfo* info, const char* key, const char* langtag,$/;"	f	typeref:typename:unsigned
lodepng_add_text	src/lodepng.cpp	/^unsigned lodepng_add_text(LodePNGInfo* info, const char* key, const char* str)$/;"	f	typeref:typename:unsigned
lodepng_auto_choose_color	src/lodepng.cpp	/^unsigned lodepng_auto_choose_color(LodePNGColorMode* mode_out,$/;"	f	typeref:typename:unsigned
lodepng_buffer_file	src/lodepng.cpp	/^static unsigned lodepng_buffer_file(unsigned char* out, size_t size, const char* filename)$/;"	f	typeref:typename:unsigned	file:
lodepng_can_have_alpha	src/lodepng.cpp	/^unsigned lodepng_can_have_alpha(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_chunk_ancillary	src/lodepng.cpp	/^unsigned char lodepng_chunk_ancillary(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned char
lodepng_chunk_append	src/lodepng.cpp	/^unsigned lodepng_chunk_append(unsigned char** out, size_t* outlength, const unsigned char* chunk/;"	f	typeref:typename:unsigned
lodepng_chunk_check_crc	src/lodepng.cpp	/^unsigned lodepng_chunk_check_crc(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned
lodepng_chunk_create	src/lodepng.cpp	/^unsigned lodepng_chunk_create(unsigned char** out, size_t* outlength, unsigned length,$/;"	f	typeref:typename:unsigned
lodepng_chunk_data	src/lodepng.cpp	/^unsigned char* lodepng_chunk_data(unsigned char* chunk)$/;"	f	typeref:typename:unsigned char *
lodepng_chunk_data_const	src/lodepng.cpp	/^const unsigned char* lodepng_chunk_data_const(const unsigned char* chunk)$/;"	f	typeref:typename:const unsigned char *
lodepng_chunk_generate_crc	src/lodepng.cpp	/^void lodepng_chunk_generate_crc(unsigned char* chunk)$/;"	f	typeref:typename:void
lodepng_chunk_length	src/lodepng.cpp	/^unsigned lodepng_chunk_length(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned
lodepng_chunk_next	src/lodepng.cpp	/^unsigned char* lodepng_chunk_next(unsigned char* chunk)$/;"	f	typeref:typename:unsigned char *
lodepng_chunk_next_const	src/lodepng.cpp	/^const unsigned char* lodepng_chunk_next_const(const unsigned char* chunk)$/;"	f	typeref:typename:const unsigned char *
lodepng_chunk_private	src/lodepng.cpp	/^unsigned char lodepng_chunk_private(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned char
lodepng_chunk_safetocopy	src/lodepng.cpp	/^unsigned char lodepng_chunk_safetocopy(const unsigned char* chunk)$/;"	f	typeref:typename:unsigned char
lodepng_chunk_type	src/lodepng.cpp	/^void lodepng_chunk_type(char type[5], const unsigned char* chunk)$/;"	f	typeref:typename:void
lodepng_chunk_type_equals	src/lodepng.cpp	/^unsigned char lodepng_chunk_type_equals(const unsigned char* chunk, const char* type)$/;"	f	typeref:typename:unsigned char
lodepng_clear_itext	src/lodepng.cpp	/^void lodepng_clear_itext(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_clear_text	src/lodepng.cpp	/^void lodepng_clear_text(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_color_mode_cleanup	src/lodepng.cpp	/^void lodepng_color_mode_cleanup(LodePNGColorMode* info)$/;"	f	typeref:typename:void
lodepng_color_mode_copy	src/lodepng.cpp	/^unsigned lodepng_color_mode_copy(LodePNGColorMode* dest, const LodePNGColorMode* source)$/;"	f	typeref:typename:unsigned
lodepng_color_mode_equal	src/lodepng.cpp	/^static int lodepng_color_mode_equal(const LodePNGColorMode* a, const LodePNGColorMode* b)$/;"	f	typeref:typename:int	file:
lodepng_color_mode_init	src/lodepng.cpp	/^void lodepng_color_mode_init(LodePNGColorMode* info)$/;"	f	typeref:typename:void
lodepng_color_profile_init	src/lodepng.cpp	/^void lodepng_color_profile_init(LodePNGColorProfile* profile)$/;"	f	typeref:typename:void
lodepng_compress_settings_init	src/lodepng.cpp	/^void lodepng_compress_settings_init(LodePNGCompressSettings* settings)$/;"	f	typeref:typename:void
lodepng_convert	src/lodepng.cpp	/^unsigned lodepng_convert(unsigned char* out, const unsigned char* in,$/;"	f	typeref:typename:unsigned
lodepng_crc32	src/lodepng.cpp	/^unsigned lodepng_crc32(const unsigned char* data, size_t length)$/;"	f	typeref:typename:unsigned
lodepng_crc32_table	src/lodepng.cpp	/^static unsigned lodepng_crc32_table[256] = {$/;"	v	typeref:typename:unsigned[256]	file:
lodepng_decode	src/lodepng.cpp	/^unsigned lodepng_decode(unsigned char** out, unsigned* w, unsigned* h,$/;"	f	typeref:typename:unsigned
lodepng_decode24	src/lodepng.cpp	/^unsigned lodepng_decode24(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in/;"	f	typeref:typename:unsigned
lodepng_decode24_file	src/lodepng.cpp	/^unsigned lodepng_decode24_file(unsigned char** out, unsigned* w, unsigned* h, const char* filena/;"	f	typeref:typename:unsigned
lodepng_decode32	src/lodepng.cpp	/^unsigned lodepng_decode32(unsigned char** out, unsigned* w, unsigned* h, const unsigned char* in/;"	f	typeref:typename:unsigned
lodepng_decode32_file	src/lodepng.cpp	/^unsigned lodepng_decode32_file(unsigned char** out, unsigned* w, unsigned* h, const char* filena/;"	f	typeref:typename:unsigned
lodepng_decode_file	src/lodepng.cpp	/^unsigned lodepng_decode_file(unsigned char** out, unsigned* w, unsigned* h, const char* filename/;"	f	typeref:typename:unsigned
lodepng_decode_memory	src/lodepng.cpp	/^unsigned lodepng_decode_memory(unsigned char** out, unsigned* w, unsigned* h, const unsigned cha/;"	f	typeref:typename:unsigned
lodepng_decoder_settings_init	src/lodepng.cpp	/^void lodepng_decoder_settings_init(LodePNGDecoderSettings* settings)$/;"	f	typeref:typename:void
lodepng_decompress_settings_init	src/lodepng.cpp	/^void lodepng_decompress_settings_init(LodePNGDecompressSettings* settings)$/;"	f	typeref:typename:void
lodepng_default_compress_settings	src/lodepng.cpp	/^const LodePNGCompressSettings lodepng_default_compress_settings = {2, 1, DEFAULT_WINDOWSIZE, 3, /;"	v	typeref:typename:const LodePNGCompressSettings
lodepng_default_decompress_settings	src/lodepng.cpp	/^const LodePNGDecompressSettings lodepng_default_decompress_settings = {0, 0, 0, 0};$/;"	v	typeref:typename:const LodePNGDecompressSettings
lodepng_deflate	src/lodepng.cpp	/^unsigned lodepng_deflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned
lodepng_deflatev	src/lodepng.cpp	/^static unsigned lodepng_deflatev(ucvector* out, const unsigned char* in, size_t insize,$/;"	f	typeref:typename:unsigned	file:
lodepng_encode	src/lodepng.cpp	/^unsigned lodepng_encode(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned
lodepng_encode24	src/lodepng.cpp	/^unsigned lodepng_encode24(unsigned char** out, size_t* outsize, const unsigned char* image, unsi/;"	f	typeref:typename:unsigned
lodepng_encode24_file	src/lodepng.cpp	/^unsigned lodepng_encode24_file(const char* filename, const unsigned char* image, unsigned w, uns/;"	f	typeref:typename:unsigned
lodepng_encode32	src/lodepng.cpp	/^unsigned lodepng_encode32(unsigned char** out, size_t* outsize, const unsigned char* image, unsi/;"	f	typeref:typename:unsigned
lodepng_encode32_file	src/lodepng.cpp	/^unsigned lodepng_encode32_file(const char* filename, const unsigned char* image, unsigned w, uns/;"	f	typeref:typename:unsigned
lodepng_encode_file	src/lodepng.cpp	/^unsigned lodepng_encode_file(const char* filename, const unsigned char* image, unsigned w, unsig/;"	f	typeref:typename:unsigned
lodepng_encode_memory	src/lodepng.cpp	/^unsigned lodepng_encode_memory(unsigned char** out, size_t* outsize, const unsigned char* image,$/;"	f	typeref:typename:unsigned
lodepng_encoder_settings_init	src/lodepng.cpp	/^void lodepng_encoder_settings_init(LodePNGEncoderSettings* settings)$/;"	f	typeref:typename:void
lodepng_error_text	src/lodepng.cpp	/^const char* lodepng_error_text(unsigned code)$/;"	f	typeref:typename:const char *
lodepng_filesize	src/lodepng.cpp	/^static long lodepng_filesize(const char* filename)$/;"	f	typeref:typename:long	file:
lodepng_free	src/lodepng.cpp	/^static void lodepng_free(void* ptr)$/;"	f	typeref:typename:void	file:
lodepng_get_bpp	src/lodepng.cpp	/^unsigned lodepng_get_bpp(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_get_bpp_lct	src/lodepng.cpp	/^static unsigned lodepng_get_bpp_lct(LodePNGColorType colortype, unsigned bitdepth)$/;"	f	typeref:typename:unsigned	file:
lodepng_get_channels	src/lodepng.cpp	/^unsigned lodepng_get_channels(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_get_color_profile	src/lodepng.cpp	/^unsigned lodepng_get_color_profile(LodePNGColorProfile* profile,$/;"	f	typeref:typename:unsigned
lodepng_get_raw_size	src/lodepng.cpp	/^size_t lodepng_get_raw_size(unsigned w, unsigned h, const LodePNGColorMode* color)$/;"	f	typeref:typename:size_t
lodepng_get_raw_size_idat	src/lodepng.cpp	/^static size_t lodepng_get_raw_size_idat(unsigned w, unsigned h, const LodePNGColorMode* color)$/;"	f	typeref:typename:size_t	file:
lodepng_get_raw_size_lct	src/lodepng.cpp	/^size_t lodepng_get_raw_size_lct(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bit/;"	f	typeref:typename:size_t
lodepng_has_palette_alpha	src/lodepng.cpp	/^unsigned lodepng_has_palette_alpha(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_huffman_code_lengths	src/lodepng.cpp	/^unsigned lodepng_huffman_code_lengths(unsigned* lengths, const unsigned* frequencies,$/;"	f	typeref:typename:unsigned
lodepng_inflate	src/lodepng.cpp	/^unsigned lodepng_inflate(unsigned char** out, size_t* outsize,$/;"	f	typeref:typename:unsigned
lodepng_inflatev	src/lodepng.cpp	/^static unsigned lodepng_inflatev(ucvector* out,$/;"	f	typeref:typename:unsigned	file:
lodepng_info_cleanup	src/lodepng.cpp	/^void lodepng_info_cleanup(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_info_copy	src/lodepng.cpp	/^unsigned lodepng_info_copy(LodePNGInfo* dest, const LodePNGInfo* source)$/;"	f	typeref:typename:unsigned
lodepng_info_init	src/lodepng.cpp	/^void lodepng_info_init(LodePNGInfo* info)$/;"	f	typeref:typename:void
lodepng_info_swap	src/lodepng.cpp	/^void lodepng_info_swap(LodePNGInfo* a, LodePNGInfo* b)$/;"	f	typeref:typename:void
lodepng_inspect	src/lodepng.cpp	/^unsigned lodepng_inspect(unsigned* w, unsigned* h, LodePNGState* state,$/;"	f	typeref:typename:unsigned
lodepng_is_alpha_type	src/lodepng.cpp	/^unsigned lodepng_is_alpha_type(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_is_greyscale_type	src/lodepng.cpp	/^unsigned lodepng_is_greyscale_type(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_is_palette_type	src/lodepng.cpp	/^unsigned lodepng_is_palette_type(const LodePNGColorMode* info)$/;"	f	typeref:typename:unsigned
lodepng_load_file	src/lodepng.cpp	/^unsigned lodepng_load_file(unsigned char** out, size_t* outsize, const char* filename)$/;"	f	typeref:typename:unsigned
lodepng_malloc	src/lodepng.cpp	/^static void* lodepng_malloc(size_t size)$/;"	f	typeref:typename:void *	file:
lodepng_palette_add	src/lodepng.cpp	/^unsigned lodepng_palette_add(LodePNGColorMode* info,$/;"	f	typeref:typename:unsigned
lodepng_palette_clear	src/lodepng.cpp	/^void lodepng_palette_clear(LodePNGColorMode* info)$/;"	f	typeref:typename:void
lodepng_read32bitInt	src/lodepng.cpp	/^unsigned lodepng_read32bitInt(const unsigned char* buffer)$/;"	f	typeref:typename:unsigned
lodepng_realloc	src/lodepng.cpp	/^static void* lodepng_realloc(void* ptr, size_t new_size)$/;"	f	typeref:typename:void *	file:
lodepng_save_file	src/lodepng.cpp	/^unsigned lodepng_save_file(const unsigned char* buffer, size_t buffersize, const char* filename)$/;"	f	typeref:typename:unsigned
lodepng_set32bitInt	src/lodepng.cpp	/^static void lodepng_set32bitInt(unsigned char* buffer, unsigned value)$/;"	f	typeref:typename:void	file:
lodepng_state_cleanup	src/lodepng.cpp	/^void lodepng_state_cleanup(LodePNGState* state)$/;"	f	typeref:typename:void
lodepng_state_copy	src/lodepng.cpp	/^void lodepng_state_copy(LodePNGState* dest, const LodePNGState* source)$/;"	f	typeref:typename:void
lodepng_state_init	src/lodepng.cpp	/^void lodepng_state_init(LodePNGState* state)$/;"	f	typeref:typename:void
lodepng_zlib_compress	src/lodepng.cpp	/^unsigned lodepng_zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned
lodepng_zlib_decompress	src/lodepng.cpp	/^unsigned lodepng_zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned
log	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> log(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
log	include/glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER genType log(genType const & x, genType const & base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log	include/glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> log(vecType<T, P> const & x, vecType<T, P> const & base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
log	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> log$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
log2	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType log2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log2	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> log2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
lookAt	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> lookAt$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
lowerMultiple	include/glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER genType lowerMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
lowerMultiple	include/glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> lowerMultiple(vecType<T, P> const & Source, vecType<T, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
lowp	include/glm/detail/precision.hpp	/^		lowp,$/;"	e	enum:glm::precision
lowp_bvec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_bvec1_t			lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:lowp_bvec1_t
lowp_bvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<bool, lowp>		lowp_bvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<bool,lowp>
lowp_bvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<bool,lowp>
lowp_bvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<bool,lowp>
lowp_bvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<bool,lowp>
lowp_ddualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,lowp>
lowp_dmat2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,lowp>
lowp_dmat2x2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,lowp>
lowp_dmat2x3	include/glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<double,lowp>
lowp_dmat2x4	include/glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<double,lowp>
lowp_dmat3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_dmat3x2	include/glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<double,lowp>
lowp_dmat3x3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,lowp>
lowp_dmat3x4	include/glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<double,lowp>
lowp_dmat4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,lowp>
lowp_dmat4x2	include/glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<double,lowp>
lowp_dmat4x3	include/glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<double,lowp>
lowp_dmat4x4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,lowp>
lowp_dquat	include/glm/fwd.hpp	/^	typedef tquat<double, lowp>		lowp_dquat;$/;"	t	namespace:glm	typeref:typename:tquat<double,lowp>
lowp_dualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_dvec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_dvec1_t			lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:lowp_dvec1_t
lowp_dvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<double, lowp>		lowp_dvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<double,lowp>
lowp_dvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<double, lowp>		lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<double,lowp>
lowp_dvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<double, lowp>		lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<double,lowp>
lowp_dvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<double, lowp>		lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<double,lowp>
lowp_f32	include/glm/fwd.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm	typeref:typename:float32
lowp_f32mat2	include/glm/fwd.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
lowp_f32mat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,lowp>
lowp_f32mat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,lowp>
lowp_f32mat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,lowp>
lowp_f32mat3	include/glm/fwd.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
lowp_f32mat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,lowp>
lowp_f32mat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,lowp>
lowp_f32mat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,lowp>
lowp_f32mat4	include/glm/fwd.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
lowp_f32mat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,lowp>
lowp_f32mat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,lowp>
lowp_f32mat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,lowp>
lowp_f32quat	include/glm/fwd.hpp	/^	typedef tquat<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,lowp>
lowp_f32vec1	include/glm/fwd.hpp	/^	typedef tvec1<f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,lowp>
lowp_f32vec2	include/glm/fwd.hpp	/^	typedef tvec2<f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,lowp>
lowp_f32vec3	include/glm/fwd.hpp	/^	typedef tvec3<f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,lowp>
lowp_f32vec4	include/glm/fwd.hpp	/^	typedef tvec4<f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,lowp>
lowp_f64	include/glm/fwd.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm	typeref:typename:float64
lowp_f64mat2	include/glm/fwd.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x2
lowp_f64mat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,lowp>
lowp_f64mat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,lowp>
lowp_f64mat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,lowp>
lowp_f64mat3	include/glm/fwd.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x3
lowp_f64mat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,lowp>
lowp_f64mat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,lowp>
lowp_f64mat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,lowp>
lowp_f64mat4	include/glm/fwd.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x4
lowp_f64mat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,lowp>
lowp_f64mat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,lowp>
lowp_f64mat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,lowp>
lowp_f64quat	include/glm/fwd.hpp	/^	typedef tquat<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,lowp>
lowp_f64vec1	include/glm/fwd.hpp	/^	typedef tvec1<f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,lowp>
lowp_f64vec2	include/glm/fwd.hpp	/^	typedef tvec2<f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,lowp>
lowp_f64vec3	include/glm/fwd.hpp	/^	typedef tvec3<f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,lowp>
lowp_f64vec4	include/glm/fwd.hpp	/^	typedef tvec4<f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,lowp>
lowp_fdualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_float	include/glm/detail/type_float.hpp	/^	typedef lowp_float_t		lowp_float;$/;"	t	namespace:glm	typeref:typename:lowp_float_t
lowp_float32	include/glm/fwd.hpp	/^	typedef detail::float32 lowp_float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
lowp_float32_t	include/glm/fwd.hpp	/^	typedef detail::float32 lowp_float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
lowp_float64	include/glm/fwd.hpp	/^	typedef detail::float64 lowp_float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
lowp_float64_t	include/glm/fwd.hpp	/^	typedef detail::float64 lowp_float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
lowp_float_t	include/glm/detail/type_float.hpp	/^	typedef float				lowp_float_t;$/;"	t	namespace:glm	typeref:typename:float
lowp_fmat2	include/glm/fwd.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm	typeref:typename:lowp_fmat2x2
lowp_fmat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,lowp>
lowp_fmat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,lowp>
lowp_fmat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,lowp>
lowp_fmat3	include/glm/fwd.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm	typeref:typename:lowp_fmat3x3
lowp_fmat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,lowp>
lowp_fmat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,lowp>
lowp_fmat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,lowp>
lowp_fmat4	include/glm/fwd.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm	typeref:typename:lowp_fmat4x4
lowp_fmat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,lowp>
lowp_fmat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,lowp>
lowp_fmat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,lowp>
lowp_fquat	include/glm/fwd.hpp	/^	typedef lowp_quat			lowp_fquat;$/;"	t	namespace:glm	typeref:typename:lowp_quat
lowp_fvec1	include/glm/fwd.hpp	/^	typedef tvec1<float, lowp> lowp_fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,lowp>
lowp_fvec2	include/glm/fwd.hpp	/^	typedef tvec2<float, lowp> lowp_fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,lowp>
lowp_fvec3	include/glm/fwd.hpp	/^	typedef tvec3<float, lowp> lowp_fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,lowp>
lowp_fvec4	include/glm/fwd.hpp	/^	typedef tvec4<float, lowp> lowp_fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,lowp>
lowp_i16	include/glm/fwd.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_i16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_i16vec1	include/glm/fwd.hpp	/^	typedef tvec1<i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,lowp>
lowp_i16vec2	include/glm/fwd.hpp	/^	typedef tvec2<i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,lowp>
lowp_i16vec3	include/glm/fwd.hpp	/^	typedef tvec3<i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,lowp>
lowp_i16vec4	include/glm/fwd.hpp	/^	typedef tvec4<i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,lowp>
lowp_i32	include/glm/fwd.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_i32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_i32vec1	include/glm/fwd.hpp	/^	typedef tvec1<i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,lowp>
lowp_i32vec2	include/glm/fwd.hpp	/^	typedef tvec2<i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,lowp>
lowp_i32vec3	include/glm/fwd.hpp	/^	typedef tvec3<i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,lowp>
lowp_i32vec4	include/glm/fwd.hpp	/^	typedef tvec4<i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,lowp>
lowp_i64	include/glm/fwd.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_i64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_i64vec1	include/glm/fwd.hpp	/^	typedef tvec1<i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,lowp>
lowp_i64vec2	include/glm/fwd.hpp	/^	typedef tvec2<i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,lowp>
lowp_i64vec3	include/glm/fwd.hpp	/^	typedef tvec3<i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,lowp>
lowp_i64vec4	include/glm/fwd.hpp	/^	typedef tvec4<i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,lowp>
lowp_i8	include/glm/fwd.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_i8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_i8vec1	include/glm/fwd.hpp	/^	typedef tvec1<i8, lowp> lowp_i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,lowp>
lowp_i8vec2	include/glm/fwd.hpp	/^	typedef tvec2<i8, lowp> lowp_i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,lowp>
lowp_i8vec3	include/glm/fwd.hpp	/^	typedef tvec3<i8, lowp> lowp_i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,lowp>
lowp_i8vec4	include/glm/fwd.hpp	/^	typedef tvec4<i8, lowp> lowp_i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,lowp>
lowp_imat2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,lowp>
lowp_imat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,lowp>
lowp_imat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<int,lowp>
lowp_imat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<int,lowp>
lowp_imat3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,lowp>
lowp_imat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<int,lowp>
lowp_imat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,lowp>
lowp_imat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<int,lowp>
lowp_imat4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,lowp>
lowp_imat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<int,lowp>
lowp_imat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<int,lowp>
lowp_imat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,lowp>
lowp_int	include/glm/detail/type_int.hpp	/^	typedef detail::lowp_int_t				lowp_int;$/;"	t	namespace:glm	typeref:typename:detail::lowp_int_t
lowp_int16	include/glm/fwd.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16_t	include/glm/fwd.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int32	include/glm/fwd.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32_t	include/glm/fwd.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int64	include/glm/fwd.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64_t	include/glm/fwd.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int8	include/glm/fwd.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8_t	include/glm/fwd.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int_t	include/glm/detail/type_int.hpp	/^	typedef signed int						lowp_int_t;$/;"	t	namespace:glm::detail	typeref:typename:signed int
lowp_ivec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_ivec1_t			lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:lowp_ivec1_t
lowp_ivec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<int, lowp>		lowp_ivec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<int,lowp>
lowp_ivec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<int, lowp>		lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:tvec2<int,lowp>
lowp_ivec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<int, lowp>		lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:tvec3<int,lowp>
lowp_ivec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<int, lowp>		lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:tvec4<int,lowp>
lowp_mat2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2	include/glm/mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2x2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2x2	include/glm/mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2x3	include/glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,lowp>
lowp_mat2x3	include/glm/mat2x3.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,lowp>
lowp_mat2x4	include/glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,lowp>
lowp_mat2x4	include/glm/mat2x4.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,lowp>
lowp_mat3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3	include/glm/mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3x2	include/glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,lowp>
lowp_mat3x2	include/glm/mat3x2.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,lowp>
lowp_mat3x3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3x3	include/glm/mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3x4	include/glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,lowp>
lowp_mat3x4	include/glm/mat3x4.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,lowp>
lowp_mat4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_mat4	include/glm/mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_mat4x2	include/glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,lowp>
lowp_mat4x2	include/glm/mat4x2.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,lowp>
lowp_mat4x3	include/glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,lowp>
lowp_mat4x3	include/glm/mat4x3.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,lowp>
lowp_mat4x4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_mat4x4	include/glm/mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_quat	include/glm/fwd.hpp	/^	typedef tquat<float, lowp>		lowp_quat;$/;"	t	namespace:glm	typeref:typename:tquat<float,lowp>
lowp_u16	include/glm/fwd.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_u16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_u16vec1	include/glm/fwd.hpp	/^	typedef tvec1<u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,lowp>
lowp_u16vec2	include/glm/fwd.hpp	/^	typedef tvec2<u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,lowp>
lowp_u16vec3	include/glm/fwd.hpp	/^	typedef tvec3<u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,lowp>
lowp_u16vec4	include/glm/fwd.hpp	/^	typedef tvec4<u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,lowp>
lowp_u32	include/glm/fwd.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_u32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_u32vec1	include/glm/fwd.hpp	/^	typedef tvec1<u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,lowp>
lowp_u32vec2	include/glm/fwd.hpp	/^	typedef tvec2<u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,lowp>
lowp_u32vec3	include/glm/fwd.hpp	/^	typedef tvec3<u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,lowp>
lowp_u32vec4	include/glm/fwd.hpp	/^	typedef tvec4<u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,lowp>
lowp_u64	include/glm/fwd.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_u64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_u64vec1	include/glm/fwd.hpp	/^	typedef tvec1<u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,lowp>
lowp_u64vec2	include/glm/fwd.hpp	/^	typedef tvec2<u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,lowp>
lowp_u64vec3	include/glm/fwd.hpp	/^	typedef tvec3<u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,lowp>
lowp_u64vec4	include/glm/fwd.hpp	/^	typedef tvec4<u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,lowp>
lowp_u8	include/glm/fwd.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_u8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_u8vec1	include/glm/fwd.hpp	/^	typedef tvec1<u8, lowp> lowp_u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,lowp>
lowp_u8vec2	include/glm/fwd.hpp	/^	typedef tvec2<u8, lowp> lowp_u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,lowp>
lowp_u8vec3	include/glm/fwd.hpp	/^	typedef tvec3<u8, lowp> lowp_u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,lowp>
lowp_u8vec4	include/glm/fwd.hpp	/^	typedef tvec4<u8, lowp> lowp_u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,lowp>
lowp_uint	include/glm/detail/type_int.hpp	/^	typedef detail::lowp_uint_t				lowp_uint;$/;"	t	namespace:glm	typeref:typename:detail::lowp_uint_t
lowp_uint16	include/glm/fwd.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16_t	include/glm/fwd.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint32	include/glm/fwd.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32_t	include/glm/fwd.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint64	include/glm/fwd.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64_t	include/glm/fwd.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint8	include/glm/fwd.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8_t	include/glm/fwd.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint_t	include/glm/detail/type_int.hpp	/^	typedef unsigned int					lowp_uint_t;$/;"	t	namespace:glm::detail	typeref:typename:unsigned int
lowp_umat2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,lowp>
lowp_umat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,lowp>
lowp_umat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<uint,lowp>
lowp_umat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<uint,lowp>
lowp_umat3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,lowp>
lowp_umat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<uint,lowp>
lowp_umat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,lowp>
lowp_umat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<uint,lowp>
lowp_umat4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,lowp>
lowp_umat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<uint,lowp>
lowp_umat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<uint,lowp>
lowp_umat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,lowp>
lowp_uvec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_uvec1_t			lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:lowp_uvec1_t
lowp_uvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<uint, lowp>		lowp_uvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<uint,lowp>
lowp_uvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<uint,lowp>
lowp_uvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<uint,lowp>
lowp_uvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<uint,lowp>
lowp_vec1	include/glm/fwd.hpp	/^	typedef tvec1<float, lowp> lowp_vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,lowp>
lowp_vec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_vec1_t				lowp_vec1;$/;"	t	namespace:glm	typeref:typename:lowp_vec1_t
lowp_vec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<float, lowp>		lowp_vec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<float,lowp>
lowp_vec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<float, lowp>		lowp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,lowp>
lowp_vec2	include/glm/fwd.hpp	/^	typedef tvec2<float, lowp> lowp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,lowp>
lowp_vec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<float, lowp>		lowp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,lowp>
lowp_vec3	include/glm/fwd.hpp	/^	typedef tvec3<float, lowp> lowp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,lowp>
lowp_vec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<float, lowp>		lowp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,lowp>
lowp_vec4	include/glm/fwd.hpp	/^	typedef tvec4<float, lowp> lowp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,lowp>
lsw	include/glm/gtc/ulp.inl	/^		glm::detail::int32 lsw;$/;"	m	struct:__anona4a85f36020a::__anona4a85f360308	typeref:typename:glm::detail::int32	file:
luminosity	include/glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER T luminosity(const tvec3<T, P>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lxNorm	include/glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lxNorm$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
main	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	include/glm/detail/dummy.cpp	/^int main()$/;"	f	typeref:typename:int
main	src/tutorial18.cpp	/^int main()$/;"	f	typeref:typename:int
major	src/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon5d41850a0108	typeref:typename:int	file:
make_mat2	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, defaultp> make_mat2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,defaultp>
make_mat2x2	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, defaultp> make_mat2x2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,defaultp>
make_mat2x3	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, defaultp> make_mat2x3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,defaultp>
make_mat2x4	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, defaultp> make_mat2x4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,defaultp>
make_mat3	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, defaultp> make_mat3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,defaultp>
make_mat3x2	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, defaultp> make_mat3x2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,defaultp>
make_mat3x3	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, defaultp> make_mat3x3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,defaultp>
make_mat3x4	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, defaultp> make_mat3x4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,defaultp>
make_mat4	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> make_mat4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
make_mat4x2	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, defaultp> make_mat4x2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,defaultp>
make_mat4x3	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, defaultp> make_mat4x3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,defaultp>
make_mat4x4	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> make_mat4x4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
make_quat	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tquat<T, defaultp> make_quat(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,defaultp>
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<char>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<int>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<long long>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<long>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<short>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<unsigned char>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<unsigned int>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<unsigned long long>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<unsigned long>$/;"	s	namespace:glm::detail
make_signed	include/glm/detail/type_int.hpp	/^		struct make_signed<unsigned short>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<char>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<int>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<long long>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<long>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<short>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned char>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned int>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned long long>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned long>$/;"	s	namespace:glm::detail
make_unsigned	include/glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned short>$/;"	s	namespace:glm::detail
make_vec2	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> make_vec2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
make_vec3	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> make_vec3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
make_vec4	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, defaultp> make_vec4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,defaultp>
mantissa	include/glm/detail/intrinsic_common.inl	/^			const unsigned int mantissa:23, exp:8, sign:1;$/;"	m	struct:glm::detail::ieee754_QNAN::i	typeref:typename:const unsigned int:23	file:
mask	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER T mask(T Bits)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
mask	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType mask(genIUType Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
mask	include/glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecIUType<T, P> mask(vecIUType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecIUType<T,P>
mat2	include/glm/detail/type_mat.hpp	/^	typedef mat2x2					mat2;$/;"	t	namespace:glm	typeref:typename:mat2x2
mat2x2	include/glm/detail/type_mat.hpp	/^	typedef highp_mat2x2			mat2x2;$/;"	t	namespace:glm	typeref:typename:highp_mat2x2
mat2x2	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat2x2			mat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_mat2x2
mat2x2	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat2x2		mat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_mat2x2
mat2x3	include/glm/detail/type_mat.hpp	/^	typedef highp_mat2x3			mat2x3;$/;"	t	namespace:glm	typeref:typename:highp_mat2x3
mat2x3	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat2x3			mat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_mat2x3
mat2x3	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat2x3		mat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_mat2x3
mat2x4	include/glm/detail/type_mat.hpp	/^	typedef highp_mat2x4			mat2x4;$/;"	t	namespace:glm	typeref:typename:highp_mat2x4
mat2x4	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat2x4			mat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_mat2x4
mat2x4	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat2x4		mat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_mat2x4
mat2x4_cast	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> mat2x4_cast(tdualquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
mat3	include/glm/detail/type_mat.hpp	/^	typedef mat3x3					mat3;$/;"	t	namespace:glm	typeref:typename:mat3x3
mat3_cast	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> mat3_cast(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
mat3x2	include/glm/detail/type_mat.hpp	/^	typedef highp_mat3x2			mat3x2;$/;"	t	namespace:glm	typeref:typename:highp_mat3x2
mat3x2	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat3x2			mat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_mat3x2
mat3x2	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat3x2		mat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_mat3x2
mat3x3	include/glm/detail/type_mat.hpp	/^	typedef highp_mat3x3			mat3x3;$/;"	t	namespace:glm	typeref:typename:highp_mat3x3
mat3x3	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat3x3			mat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_mat3x3
mat3x3	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat3x3		mat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_mat3x3
mat3x4	include/glm/detail/type_mat.hpp	/^	typedef highp_mat3x4			mat3x4;$/;"	t	namespace:glm	typeref:typename:highp_mat3x4
mat3x4	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat3x4			mat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_mat3x4
mat3x4	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat3x4		mat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_mat3x4
mat3x4_cast	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> mat3x4_cast(tdualquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
mat4	include/glm/detail/type_mat.hpp	/^	typedef mat4x4					mat4;$/;"	t	namespace:glm	typeref:typename:mat4x4
mat4SIMD_cast	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD mat4SIMD_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
mat4_cast	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> mat4_cast(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
mat4_cast	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER mat4 mat4_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat4
mat4_cast	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER mat4 mat4_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat4
mat4x2	include/glm/detail/type_mat.hpp	/^	typedef highp_mat4x2			mat4x2;$/;"	t	namespace:glm	typeref:typename:highp_mat4x2
mat4x2	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat4x2			mat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_mat4x2
mat4x2	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat4x2		mat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_mat4x2
mat4x3	include/glm/detail/type_mat.hpp	/^	typedef highp_mat4x3			mat4x3;$/;"	t	namespace:glm	typeref:typename:highp_mat4x3
mat4x3	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat4x3			mat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_mat4x3
mat4x3	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat4x3		mat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_mat4x3
mat4x4	include/glm/detail/type_mat.hpp	/^	typedef highp_mat4x4			mat4x4;$/;"	t	namespace:glm	typeref:typename:highp_mat4x4
mat4x4	include/glm/detail/type_mat.hpp	/^	typedef lowp_mat4x4			mat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_mat4x4
mat4x4	include/glm/detail/type_mat.hpp	/^	typedef mediump_mat4x4		mat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_mat4x4
material	include/glm/detail/dummy.cpp	/^struct material$/;"	s	file:
matrixCompMult	include/glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER matType<T, P> matrixCompMult(matType<T, P> const & x, matType<T, P> const & /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER matType<T,P>
matrixCompMult	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD matrixCompMult$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
matrixCross3	include/glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> matrixCross3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
matrixCross4	include/glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> matrixCross4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
max	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType max(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
max	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> max(vecType<T, P> const & a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
max	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> max(vecType<T, P> const & a, vecType<T, P> const & b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
max	include/glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
max	include/glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	include/glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T max($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
maxbitlen	src/lodepng.cpp	/^  unsigned maxbitlen; \/*maximum number of bits a single code can get*\/$/;"	m	struct:HuffmanTree	typeref:typename:unsigned	file:
mediump	include/glm/detail/precision.hpp	/^		mediump,$/;"	e	enum:glm::precision
mediump_bvec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_bvec1_t			mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:mediump_bvec1_t
mediump_bvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<bool, mediump>	mediump_bvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<bool,mediump>
mediump_bvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<bool,mediump>
mediump_bvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<bool,mediump>
mediump_bvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<bool,mediump>
mediump_ddualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,mediump>
mediump_dmat2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,mediump>
mediump_dmat2x2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,mediump>
mediump_dmat2x3	include/glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<double,mediump>
mediump_dmat2x4	include/glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<double,mediump>
mediump_dmat3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,mediump>
mediump_dmat3x2	include/glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<double,mediump>
mediump_dmat3x3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,mediump>
mediump_dmat3x4	include/glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<double,mediump>
mediump_dmat4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,mediump>
mediump_dmat4x2	include/glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<double,mediump>
mediump_dmat4x3	include/glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<double,mediump>
mediump_dmat4x4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,mediump>
mediump_dquat	include/glm/fwd.hpp	/^	typedef tquat<double, mediump>	mediump_dquat;$/;"	t	namespace:glm	typeref:typename:tquat<double,mediump>
mediump_dualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_dvec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_dvec1_t			mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:mediump_dvec1_t
mediump_dvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<double, mediump>	mediump_dvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<double,mediump>
mediump_dvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<double, mediump>	mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<double,mediump>
mediump_dvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<double, mediump>	mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<double,mediump>
mediump_dvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<double, mediump>	mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<double,mediump>
mediump_f32	include/glm/fwd.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm	typeref:typename:float32
mediump_f32mat2	include/glm/fwd.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
mediump_f32mat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,mediump>
mediump_f32mat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,mediump>
mediump_f32mat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,mediump>
mediump_f32mat3	include/glm/fwd.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
mediump_f32mat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,mediump>
mediump_f32mat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,mediump>
mediump_f32mat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,mediump>
mediump_f32mat4	include/glm/fwd.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
mediump_f32mat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,mediump>
mediump_f32mat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,mediump>
mediump_f32mat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,mediump>
mediump_f32quat	include/glm/fwd.hpp	/^	typedef tquat<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,mediump>
mediump_f32vec1	include/glm/fwd.hpp	/^	typedef tvec1<f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,mediump>
mediump_f32vec2	include/glm/fwd.hpp	/^	typedef tvec2<f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,mediump>
mediump_f32vec3	include/glm/fwd.hpp	/^	typedef tvec3<f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,mediump>
mediump_f32vec4	include/glm/fwd.hpp	/^	typedef tvec4<f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,mediump>
mediump_f64	include/glm/fwd.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm	typeref:typename:float64
mediump_f64mat2	include/glm/fwd.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x2
mediump_f64mat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,mediump>
mediump_f64mat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,mediump>
mediump_f64mat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,mediump>
mediump_f64mat3	include/glm/fwd.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x3
mediump_f64mat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,mediump>
mediump_f64mat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,mediump>
mediump_f64mat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,mediump>
mediump_f64mat4	include/glm/fwd.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x4
mediump_f64mat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,mediump>
mediump_f64mat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,mediump>
mediump_f64mat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,mediump>
mediump_f64quat	include/glm/fwd.hpp	/^	typedef tquat<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,mediump>
mediump_f64vec1	include/glm/fwd.hpp	/^	typedef tvec1<f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,mediump>
mediump_f64vec2	include/glm/fwd.hpp	/^	typedef tvec2<f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,mediump>
mediump_f64vec3	include/glm/fwd.hpp	/^	typedef tvec3<f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,mediump>
mediump_f64vec4	include/glm/fwd.hpp	/^	typedef tvec4<f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,mediump>
mediump_fdualquat	include/glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_float	include/glm/detail/type_float.hpp	/^	typedef mediump_float_t		mediump_float;$/;"	t	namespace:glm	typeref:typename:mediump_float_t
mediump_float32	include/glm/fwd.hpp	/^	typedef detail::float32 mediump_float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
mediump_float32_t	include/glm/fwd.hpp	/^	typedef detail::float32 mediump_float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
mediump_float64	include/glm/fwd.hpp	/^	typedef detail::float64 mediump_float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
mediump_float64_t	include/glm/fwd.hpp	/^	typedef detail::float64 mediump_float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
mediump_float_t	include/glm/detail/type_float.hpp	/^	typedef float				mediump_float_t;$/;"	t	namespace:glm	typeref:typename:float
mediump_fmat2	include/glm/fwd.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm	typeref:typename:mediump_fmat2x2
mediump_fmat2x2	include/glm/fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,mediump>
mediump_fmat2x3	include/glm/fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,mediump>
mediump_fmat2x4	include/glm/fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,mediump>
mediump_fmat3	include/glm/fwd.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm	typeref:typename:mediump_fmat3x3
mediump_fmat3x2	include/glm/fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,mediump>
mediump_fmat3x3	include/glm/fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,mediump>
mediump_fmat3x4	include/glm/fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,mediump>
mediump_fmat4	include/glm/fwd.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm	typeref:typename:mediump_fmat4x4
mediump_fmat4x2	include/glm/fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,mediump>
mediump_fmat4x3	include/glm/fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,mediump>
mediump_fmat4x4	include/glm/fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,mediump>
mediump_fquat	include/glm/fwd.hpp	/^	typedef mediump_quat		mediump_fquat;$/;"	t	namespace:glm	typeref:typename:mediump_quat
mediump_fvec1	include/glm/fwd.hpp	/^	typedef tvec1<float, mediump> mediump_fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,mediump>
mediump_fvec2	include/glm/fwd.hpp	/^	typedef tvec2<float, mediump> mediump_fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,mediump>
mediump_fvec3	include/glm/fwd.hpp	/^	typedef tvec3<float, mediump> mediump_fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,mediump>
mediump_fvec4	include/glm/fwd.hpp	/^	typedef tvec4<float, mediump> mediump_fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,mediump>
mediump_i16	include/glm/fwd.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_i16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_i16vec1	include/glm/fwd.hpp	/^	typedef tvec1<i16, mediump>		mediump_i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,mediump>
mediump_i16vec2	include/glm/fwd.hpp	/^	typedef tvec2<i16, mediump>		mediump_i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,mediump>
mediump_i16vec3	include/glm/fwd.hpp	/^	typedef tvec3<i16, mediump>		mediump_i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,mediump>
mediump_i16vec4	include/glm/fwd.hpp	/^	typedef tvec4<i16, mediump>		mediump_i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,mediump>
mediump_i32	include/glm/fwd.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_i32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_i32vec1	include/glm/fwd.hpp	/^	typedef tvec1<i32, mediump>		mediump_i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,mediump>
mediump_i32vec2	include/glm/fwd.hpp	/^	typedef tvec2<i32, mediump>		mediump_i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,mediump>
mediump_i32vec3	include/glm/fwd.hpp	/^	typedef tvec3<i32, mediump>		mediump_i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,mediump>
mediump_i32vec4	include/glm/fwd.hpp	/^	typedef tvec4<i32, mediump>		mediump_i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,mediump>
mediump_i64	include/glm/fwd.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_i64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_i64vec1	include/glm/fwd.hpp	/^	typedef tvec1<i64, mediump>		mediump_i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,mediump>
mediump_i64vec2	include/glm/fwd.hpp	/^	typedef tvec2<i64, mediump>		mediump_i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,mediump>
mediump_i64vec3	include/glm/fwd.hpp	/^	typedef tvec3<i64, mediump>		mediump_i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,mediump>
mediump_i64vec4	include/glm/fwd.hpp	/^	typedef tvec4<i64, mediump>		mediump_i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,mediump>
mediump_i8	include/glm/fwd.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_i8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_i8vec1	include/glm/fwd.hpp	/^	typedef tvec1<i8, mediump> mediump_i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,mediump>
mediump_i8vec2	include/glm/fwd.hpp	/^	typedef tvec2<i8, mediump> mediump_i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,mediump>
mediump_i8vec3	include/glm/fwd.hpp	/^	typedef tvec3<i8, mediump> mediump_i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,mediump>
mediump_i8vec4	include/glm/fwd.hpp	/^	typedef tvec4<i8, mediump> mediump_i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,mediump>
mediump_imat2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,mediump>
mediump_imat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,mediump>
mediump_imat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<int,mediump>
mediump_imat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<int,mediump>
mediump_imat3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,mediump>
mediump_imat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<int,mediump>
mediump_imat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,mediump>
mediump_imat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<int,mediump>
mediump_imat4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,mediump>
mediump_imat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<int,mediump>
mediump_imat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<int,mediump>
mediump_imat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,mediump>
mediump_int	include/glm/detail/type_int.hpp	/^	typedef detail::mediump_int_t			mediump_int;$/;"	t	namespace:glm	typeref:typename:detail::mediump_int_t
mediump_int16	include/glm/fwd.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16_t	include/glm/fwd.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int32	include/glm/fwd.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32_t	include/glm/fwd.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int64	include/glm/fwd.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64_t	include/glm/fwd.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int8	include/glm/fwd.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8_t	include/glm/fwd.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int_t	include/glm/detail/type_int.hpp	/^	typedef signed int						mediump_int_t;$/;"	t	namespace:glm::detail	typeref:typename:signed int
mediump_ivec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_ivec1_t			mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:mediump_ivec1_t
mediump_ivec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<int, mediump>		mediump_ivec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<int,mediump>
mediump_ivec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<int, mediump>		mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:tvec2<int,mediump>
mediump_ivec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<int, mediump>		mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:tvec3<int,mediump>
mediump_ivec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<int, mediump>		mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:tvec4<int,mediump>
mediump_mat2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2	include/glm/mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2x2	include/glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2x2	include/glm/mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2x3	include/glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,mediump>
mediump_mat2x3	include/glm/mat2x3.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,mediump>
mediump_mat2x4	include/glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,mediump>
mediump_mat2x4	include/glm/mat2x4.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,mediump>
mediump_mat3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3	include/glm/mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3x2	include/glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,mediump>
mediump_mat3x2	include/glm/mat3x2.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,mediump>
mediump_mat3x3	include/glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3x3	include/glm/mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3x4	include/glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,mediump>
mediump_mat3x4	include/glm/mat3x4.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,mediump>
mediump_mat4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_mat4	include/glm/mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_mat4x2	include/glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,mediump>
mediump_mat4x2	include/glm/mat4x2.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,mediump>
mediump_mat4x3	include/glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,mediump>
mediump_mat4x3	include/glm/mat4x3.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,mediump>
mediump_mat4x4	include/glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_mat4x4	include/glm/mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_quat	include/glm/fwd.hpp	/^	typedef tquat<float, mediump>	mediump_quat;$/;"	t	namespace:glm	typeref:typename:tquat<float,mediump>
mediump_u16	include/glm/fwd.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_u16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_u16vec1	include/glm/fwd.hpp	/^	typedef tvec1<u16, mediump>		mediump_u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,mediump>
mediump_u16vec2	include/glm/fwd.hpp	/^	typedef tvec2<u16, mediump>		mediump_u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,mediump>
mediump_u16vec3	include/glm/fwd.hpp	/^	typedef tvec3<u16, mediump>		mediump_u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,mediump>
mediump_u16vec4	include/glm/fwd.hpp	/^	typedef tvec4<u16, mediump>		mediump_u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,mediump>
mediump_u32	include/glm/fwd.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_u32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_u32vec1	include/glm/fwd.hpp	/^	typedef tvec1<u32, mediump>		mediump_u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,mediump>
mediump_u32vec2	include/glm/fwd.hpp	/^	typedef tvec2<u32, mediump>		mediump_u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,mediump>
mediump_u32vec3	include/glm/fwd.hpp	/^	typedef tvec3<u32, mediump>		mediump_u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,mediump>
mediump_u32vec4	include/glm/fwd.hpp	/^	typedef tvec4<u32, mediump>		mediump_u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,mediump>
mediump_u64	include/glm/fwd.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_u64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_u64vec1	include/glm/fwd.hpp	/^	typedef tvec1<u64, mediump>		mediump_u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,mediump>
mediump_u64vec2	include/glm/fwd.hpp	/^	typedef tvec2<u64, mediump>		mediump_u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,mediump>
mediump_u64vec3	include/glm/fwd.hpp	/^	typedef tvec3<u64, mediump>		mediump_u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,mediump>
mediump_u64vec4	include/glm/fwd.hpp	/^	typedef tvec4<u64, mediump>		mediump_u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,mediump>
mediump_u8	include/glm/fwd.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_u8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_u8vec1	include/glm/fwd.hpp	/^	typedef tvec1<u8, mediump> mediump_u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,mediump>
mediump_u8vec2	include/glm/fwd.hpp	/^	typedef tvec2<u8, mediump> mediump_u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,mediump>
mediump_u8vec3	include/glm/fwd.hpp	/^	typedef tvec3<u8, mediump> mediump_u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,mediump>
mediump_u8vec4	include/glm/fwd.hpp	/^	typedef tvec4<u8, mediump> mediump_u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,mediump>
mediump_uint	include/glm/detail/type_int.hpp	/^	typedef detail::mediump_uint_t			mediump_uint;$/;"	t	namespace:glm	typeref:typename:detail::mediump_uint_t
mediump_uint16	include/glm/fwd.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16_t	include/glm/fwd.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint32	include/glm/fwd.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32_t	include/glm/fwd.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint64	include/glm/fwd.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64_t	include/glm/fwd.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint8	include/glm/fwd.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8_t	include/glm/fwd.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint_t	include/glm/detail/type_int.hpp	/^	typedef unsigned int					mediump_uint_t;$/;"	t	namespace:glm::detail	typeref:typename:unsigned int
mediump_umat2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,mediump>
mediump_umat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,mediump>
mediump_umat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<uint,mediump>
mediump_umat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<uint,mediump>
mediump_umat3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,mediump>
mediump_umat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<uint,mediump>
mediump_umat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,mediump>
mediump_umat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<uint,mediump>
mediump_umat4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,mediump>
mediump_umat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<uint,mediump>
mediump_umat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<uint,mediump>
mediump_umat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,mediump>
mediump_uvec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_uvec1_t			mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:mediump_uvec1_t
mediump_uvec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<uint, mediump>	mediump_uvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<uint,mediump>
mediump_uvec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<uint,mediump>
mediump_uvec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<uint,mediump>
mediump_uvec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<uint,mediump>
mediump_vec1	include/glm/fwd.hpp	/^	typedef tvec1<float, mediump> mediump_vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,mediump>
mediump_vec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_vec1_t			mediump_vec1;$/;"	t	namespace:glm	typeref:typename:mediump_vec1_t
mediump_vec1_t	include/glm/detail/type_vec.hpp	/^	typedef tvec1<float, mediump>	mediump_vec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<float,mediump>
mediump_vec2	include/glm/detail/type_vec.hpp	/^	typedef tvec2<float, mediump>	mediump_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,mediump>
mediump_vec2	include/glm/fwd.hpp	/^	typedef tvec2<float, mediump> mediump_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,mediump>
mediump_vec3	include/glm/detail/type_vec.hpp	/^	typedef tvec3<float, mediump>	mediump_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,mediump>
mediump_vec3	include/glm/fwd.hpp	/^	typedef tvec3<float, mediump> mediump_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,mediump>
mediump_vec4	include/glm/detail/type_vec.hpp	/^	typedef tvec4<float, mediump>	mediump_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,mediump>
mediump_vec4	include/glm/fwd.hpp	/^	typedef tvec4<float, mediump> mediump_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,mediump>
memory	src/lodepng.cpp	/^  BPMNode* memory;$/;"	m	struct:BPMLists	typeref:typename:BPMNode *	file:
memsize	src/lodepng.cpp	/^  unsigned memsize;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
min	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType min(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
min	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> min(vecType<T, P> const & a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
min	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> min(vecType<T, P> const & a, vecType<T, P> const & b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
min	include/glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
min	include/glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	include/glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T min($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
minmatch	include/lodepng.h	/^  unsigned minmatch; \/*mininum lz77 length. 3 is normally best, 6 can be better for some PNGs. /;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
minor	src/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon5d41850a0108	typeref:typename:int	file:
minus_one	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED minus_one = _mm_set_ps1(-1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
minute	include/lodepng.h	/^  unsigned minute;  \/*0-59*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
mirrorRepeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mirrorRepeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
mirrorRepeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
mirrorRepeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
mix	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genTypeT mix(genTypeT x, genTypeT y, genTypeU a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genTypeT
mix	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mix(vecType<T, P> const & x, vecType<T, P> const & y, U a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mix	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mix(vecType<T, P> const & x, vecType<T, P> const & y, vecType</;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mix	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> mix(tquat<T, P> const & x, tquat<T, P> const & y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
mix	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD mix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
mix	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD mix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
mixedProduct	include/glm/gtx/mixed_product.inl	/^	GLM_FUNC_QUALIFIER T mixedProduct$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
mod	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType mod(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mod	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mod(vecType<T, P> const & x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mod	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mod(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mod	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int mod(int x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
mod	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint mod(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
mod	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD mod$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
mod289	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
modf	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType modf(genType x, genType & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
modf	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> modf(tvec1<T, P> const & x, tvec1<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
modf	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> modf(tvec2<T, P> const & x, tvec2<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
modf	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> modf(tvec3<T, P> const & x, tvec3<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
modf	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> modf(tvec4<T, P> const & x, tvec4<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
month	include/lodepng.h	/^  unsigned month;   \/*1-12*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
mouseMovementSpeedDampingFactor	include/camera.h	/^        float mouseMovementSpeedDampingFactor = .01;$/;"	m	class:Camera	typeref:typename:float
mousePositionX	include/camera.h	/^        unsigned int mousePositionX;$/;"	m	class:Camera	typeref:typename:unsigned int
mousePositionX	include/controls.h	/^        int mousePositionX = 0;$/;"	m	class:Controls	typeref:typename:int
mousePositionY	include/camera.h	/^        unsigned int mousePositionY;$/;"	m	class:Camera	typeref:typename:unsigned int
mousePositionY	include/controls.h	/^        int mousePositionY = 0;$/;"	m	class:Controls	typeref:typename:int
msw	include/glm/gtc/ulp.inl	/^		glm::detail::int32 msw;$/;"	m	struct:__anona4a85f36020a::__anona4a85f360308	typeref:typename:glm::detail::int32	file:
newline	include/glm/gtx/io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
next_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER T next_float(T const & x, uint const & ulps)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
next_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double next_float(double const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
next_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float next_float(float const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
next_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> next_float(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
next_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> next_float(vecType<T, P> const & x, vecType<uint, P> const & u/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
nextafter	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double nextafter(double x, double y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER double
nextafterf	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float nextafterf(float x, float y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
nextfree	src/lodepng.cpp	/^  unsigned nextfree;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
nice	include/glm/detail/type_gentype.hpp	/^		nice,$/;"	e	enum:glm::profile
niceLength	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float niceLength$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
niceLength4	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD niceLength4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
niceSqrt	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD niceSqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
nicematch	include/lodepng.h	/^  unsigned nicematch; \/*stop searching if >= this length found. Set to 258 for best compression/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
nlz	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int nlz(unsigned int x) $/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
noise1	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise1	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise1	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise1	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise2	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> noise2(tvec2<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
noise2	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> noise2(tvec3<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
noise2	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> noise2(tvec4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
noise2	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> noise2(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
noise3	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> noise3(tvec2<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
noise3	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> noise3(tvec3<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
noise3	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> noise3(tvec4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
noise3	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> noise3(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
noise4	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> noise4(tvec2<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
noise4	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> noise4(tvec3<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
noise4	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> noise4(tvec4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
noise4	include/glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, defaultp> noise4(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,defaultp>
normal	include/glm/detail/dummy.cpp	/^	glm::vec3 normal;$/;"	m	struct:intersection	typeref:typename:glm::vec3	file:
normal	src/tutorial18.cpp	/^    glm::vec3 normal;$/;"	m	struct:Vertex	typeref:typename:glm::vec3	file:
normalize	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType normalize(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
normalize	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> normalize(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
normalize	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> normalize(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
normalize	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> normalize(tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
normalize	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD normalize$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
normalize	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD normalize$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
normalizeDot	include/glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T normalizeDot(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
normalizeDotA	include/glm/detail/dummy.cpp	/^T normalizeDotA(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	typeref:typename:T
normalizeDotB	include/glm/detail/dummy.cpp	/^T normalizeDotB(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	typeref:typename:T
normalizeDotC	include/glm/detail/dummy.cpp	/^typename vecType::value_type normalizeDotC(vecType const & a, vecType const & b)$/;"	f	typeref:typename:vecType::value_type
notEqual	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> notEqual(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
notEqual	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> notEqual(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
notEqual	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool notEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
not_	include/glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> not_(vecType<bool, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
not_	include/glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool not_$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
null	include/glm/detail/type_gentype.hpp	/^		enum ctor{null};$/;"	e	enum:glm::detail::genType::ctor
number_of_elements_	include/glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(genType const & m){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
number_of_elements_	include/glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(tvec2<T, P> const & v){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
number_of_elements_	include/glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(tvec3<T, P> const & v){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
number_of_elements_	include/glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(tvec4<T, P> const & v){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
numcodes	src/lodepng.cpp	/^  unsigned numcodes; \/*number of symbols in the alphabet = number of codes*\/$/;"	m	struct:HuffmanTree	typeref:typename:unsigned	file:
numcolors	include/lodepng.h	/^  unsigned numcolors; \/*amount of colors, up to 257. Not valid if bits == 16.*\/$/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned
numfree	src/lodepng.cpp	/^  unsigned numfree;$/;"	m	struct:BPMLists	typeref:typename:unsigned	file:
one	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED one = _mm_set_ps1(1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
one	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
one_over_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
one_over_root_two	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one_over_root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
one_over_two_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ones32	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int ones32(unsigned int x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
op	include/glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator *=
op	include/glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator +=
op	include/glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator -=
op	include/glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator /=
op	include/glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator =
open_libgl	src/gl3w.c	/^static void open_libgl(void)$/;"	f	typeref:typename:void	file:
operator !=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tquat<T, P> const & q1, tquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tdualquat<T, P> const & q1, tdualquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator %	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator%(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator %	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator%(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator %	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator%(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator %	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(T s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator%=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator %=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator %=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator%=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator %=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator %=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator%=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator %=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator%=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator %=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator %=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator%=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator %=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator%=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator %=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator %=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator%=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator &	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator&(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator &	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator&(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator &	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator&(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator &	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(T s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator&=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator &=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator &=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator&=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator &=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator &=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator&=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator &=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator&=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator &=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator &=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator&=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator &=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator&=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator &=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator &=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator&=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ()	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER V operator ()()  const { return V(this->elem(E0), this->elem(E1)); }$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER V
operator ()	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER V operator ()()  const { return V(this->elem(E0), this->elem(E1), this->ele/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER V
operator () 	include/glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e *= t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator *=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	include/glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e += t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator +=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	include/glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e -= t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator -=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	include/glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e = t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator =::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	include/glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e \/= t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator /=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat2x2<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat2x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat2x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type
operator *	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::row_type
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(T const & s, tmat2x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat2x3<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat2x3<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat2x3<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::col_type
operator *	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::row_type
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(T const & s, tmat2x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat2x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat2x4<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat2x4<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat2x4<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::col_type operator*(tmat2x4<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::col_type
operator *	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::row_type operator*(typename tmat2x4<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::row_type
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat3x2<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(T const & s, tmat3x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat3x2<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat3x2<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::col_type operator*(tmat3x2<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::col_type
operator *	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::row_type operator*(typename tmat3x2<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::row_type
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat3x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat3x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat3x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type operator*(tmat3x3<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type
operator *	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::row_type operator*(typename tmat3x3<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::row_type
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat3x4<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(T const & s, tmat3x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat3x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat3x4<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat3x4<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::col_type
operator *	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::row_type
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat4x2<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat4x2<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(T const & s, tmat4x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat4x2<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::col_type operator*(tmat4x2<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::col_type
operator *	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::row_type operator*(typename tmat4x2<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::row_type
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat4x3<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat4x3<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(T const & s, tmat4x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat4x3<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::col_type
operator *	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::row_type
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat4x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat4x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(T const & s, tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat4x4<T, P> const & m, T const  & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type
operator *	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::row_type
operator *	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator*(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator *	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator*(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator *	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator*(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator *	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec2<T, P> const & v1, T const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator*(T const & s, tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator*(tquat<T, P> const & q,	tquat<T, P> const & p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator*(tquat<T, P> const & q, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tquat<T, P> const & q,	tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v, tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tquat<T, P> const & q,	tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v, tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator*(T const & s, tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator*(tdualquat<T, P> const & p, tdualquat<T, P> const &/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator*(tdualquat<T, P> const & q, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tdualquat<T, P> const & q, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v,	tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tdualquat<T, P> const & q, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v,	tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator*$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator *	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator*$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator* (float s, fquatSIMD const & q)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator *	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator* (fquatSIMD const & q, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator *	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator* (fquatSIMD const & q1, fquatSIMD const & q2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator *	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fquatSIMD const & q, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fvec4SIMD const & v, fquatSIMD const & q)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *=	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator *=	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator*= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator *=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator*=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator *=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator*=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator *=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator*=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator *=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator*=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator *=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator*=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator *=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator*=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator *=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator*=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator *=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator*=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator *=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator*=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator *=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator*=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator *=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator*=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator *=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator*=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator *=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator*=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator *=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator *=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator*=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator *=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator *=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator*=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator *=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator*=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator *=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator *=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator*=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator *=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator*=(U s)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator *=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator *=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator*=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator *=	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator*=(U s)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator *=	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator*=(tquat<U, P> const & r)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator *=	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator*=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator *=	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator*= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator *=	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD& fquatSIMD::operator*=(float const & s)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD &
operator *=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator*=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator *=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator*=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator +	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator+(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator +	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator+(tmat2x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator +	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator+(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator +	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator+(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator +	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator+(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator +	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator+(tmat2x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator +	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator+(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator +	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator+(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator +	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator+(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator +	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator+(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator +	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator+(tmat3x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator +	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator+(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator +	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator+(tmat3x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator +	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator+(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator +	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator+(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator +	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator+(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator +	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator+(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator +	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator+(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator +	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator+(T const & s, tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator +	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator+(tmat4x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator +	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator+(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator +	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator+(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator +	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator+(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator +	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator+(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator +	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator+(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator +	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator+(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator +	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator+(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator +	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator+(tquat<T, P> const & q,	tquat<T, P> const & p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator +	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator+(tdualquat<T, P> const & q, tdualquat<T, P> const &/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator +	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator+$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator +	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator+ (fquatSIMD const & q1, fquatSIMD const & q2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator +	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator+ (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator +	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator+ (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator +	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator+ (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator ++	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator++ ()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator ++	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> tmat2x2<T, P>::operator++(int)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator ++	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator++()$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator ++	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator++()$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator ++	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> tmat2x3<T, P>::operator++(int)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator ++	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> tmat2x4<T, P>::operator++(int)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator ++	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator++()$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator ++	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> tmat3x2<T, P>::operator++(int)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator ++	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator++()$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator ++	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator++()$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator ++	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> tmat3x3<T, P>::operator++(int)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator ++	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> tmat3x4<T, P>::operator++(int)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator ++	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator++()$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator ++	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator++()$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator ++	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> tmat4x2<T, P>::operator++(int)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator ++	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator++()$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator ++	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> const operator++(tmat4x3<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> const
operator ++	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> tmat4x3<T, P>::operator++(int)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator ++	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator++()$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator ++	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> const operator++(tmat4x4<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> const
operator ++	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> tmat4x4<T, P>::operator++(int)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator ++	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator++()$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator ++	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator++(tvec1<T, P> const & v, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ++	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> tvec1<T, P>::operator++(int)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ++	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator++()$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ++	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> tvec2<T, P>::operator++(int)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ++	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator++()$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ++	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> tvec3<T, P>::operator++(int)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ++	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator++()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ++	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> tvec4<T, P>::operator++(int)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ++	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator++ ()$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator ++	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD const operator++$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD const
operator ++	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator++ (fvec4SIMD const & v, int)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator ++	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator++()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator +=	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator +=	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator+= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator +=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator+=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator +=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator+=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator +=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator+=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator +=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator+=(tmat2x3<U, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator +=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator+=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator +=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator+=(tmat2x4<U, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator +=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator+=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator +=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator+=(tmat3x2<U, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator +=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator+=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator +=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator+=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator +=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator+=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator +=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator+=(tmat3x4<U, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator +=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator+=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator +=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator+=(tmat4x2<U, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator +=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator+=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator +=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator+=(tmat4x3<U, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator +=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator+=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator +=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator+=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator +=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator+=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator +=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator +=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator+=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator +=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator +=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator+=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator +=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator+=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator +=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator +=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator+=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator +=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator+=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator +=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator +=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator+=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator +=	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp> & tvec4<float, lowp>::operator+=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,lowp> &
operator +=	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp> & tvec4<float, lowp>::operator+=(tvec1<U, lowp> const & v/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,lowp> &
operator +=	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump> & tvec4<float, mediump>::operator+=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,mediump> &
operator +=	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump> & tvec4<float, mediump>::operator+=(tvec1<U, mediump> /;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,mediump> &
operator +=	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator+=(tquat<U, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator +=	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator+= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator +=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator+=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator +=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator+=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator -	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> const operator-(tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> const
operator -	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator-(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator -	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator-(tmat2x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator -	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator-(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator -	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> const operator-(tmat2x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> const
operator -	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator-(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator -	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator-(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator -	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> const operator-(tmat2x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> const
operator -	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator-(tmat2x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator -	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator-(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator -	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> const operator-(tmat3x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> const
operator -	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator-(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator -	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator-(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator -	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> const operator-(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> const
operator -	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator-(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator -	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator-(tmat3x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator -	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator-(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator -	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> const operator-(tmat3x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> const
operator -	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator-(tmat3x4<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator -	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator-(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator -	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> const operator-(tmat4x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> const
operator -	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator-(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator -	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator-(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator -	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> const operator-(tmat4x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> const
operator -	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator-(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator -	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator-(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator -	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> const operator-(tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> const
operator -	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator-(T const & s, tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator -	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator-(tmat4x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator -	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator-(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator -	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator-(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator -	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator-(tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator -	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD const operator-$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD const
operator -	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator-$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator -	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator- (fquatSIMD const & q)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator -	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator -	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator -	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator -	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator --	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator-- ()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator --	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> tmat2x2<T, P>::operator--(int)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator --	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator--()$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator --	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator--()$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator --	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> tmat2x3<T, P>::operator--(int)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator --	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> tmat2x4<T, P>::operator--(int)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator --	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator--()$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator --	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> tmat3x2<T, P>::operator--(int)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator --	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator--()$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator --	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator--()$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator --	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> tmat3x3<T, P>::operator--(int)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator --	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> tmat3x4<T, P>::operator--(int)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator --	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator--()$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator --	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator--()$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator --	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> tmat4x2<T, P>::operator--(int)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator --	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator--()$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator --	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> const operator--(tmat4x3<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> const
operator --	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> tmat4x3<T, P>::operator--(int)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator --	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator--()$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator --	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> const operator--(tmat4x4<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> const
operator --	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> tmat4x4<T, P>::operator--(int)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator --	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator--()$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator --	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator--(tvec1<T, P> const & v, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator --	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> tvec1<T, P>::operator--(int)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator --	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator--()$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator --	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> tvec2<T, P>::operator--(int)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator --	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator--()$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator --	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> tvec3<T, P>::operator--(int)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator --	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator--()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator --	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> tvec4<T, P>::operator--(int)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator --	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator-- ()$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator --	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD const operator--$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD const
operator --	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator-- (fvec4SIMD const & v, int)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator --	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator--()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator -=	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator -=	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator-= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator -=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator-=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator -=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator-=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator -=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator-=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator -=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator-=(tmat2x3<U, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator -=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator-=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator -=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator-=(tmat2x4<U, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator -=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator-=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator -=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator-=(tmat3x2<U, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator -=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator-=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator -=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator-=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator -=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator-=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator -=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator-=(tmat3x4<U, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator -=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator-=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator -=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator-=(tmat4x2<U, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator -=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator-=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator -=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator-=(tmat4x3<U, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator -=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator-=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator -=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator-=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator -=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator-=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator -=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator -=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator-=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator -=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator -=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator-=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator -=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator-=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator -=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator -=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator-=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator -=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator-=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator -=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator -=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator-=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator -=	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator-= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator -=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator-=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator -=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator-=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator /	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator\/(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator /	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator\/(tmat2x2<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator /	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator\/(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator /	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type operator\/(tmat2x2<T, P> const & m, typenam/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type
operator /	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::row_type operator\/(typename tmat2x2<T, P>::col_type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::row_type
operator /	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator\/(T const & s,	tmat2x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator /	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator\/(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator /	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator\/(T s, tmat2x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator /	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator\/(tmat2x4<T, P> const & m, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator /	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator\/(T const & s, tmat3x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator /	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator\/(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator /	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator\/(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator /	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator\/(tmat3x3<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator /	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator\/(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator /	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type operator\/(tmat3x3<T, P> const & m, typenam/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type
operator /	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::row_type operator\/(typename tmat3x3<T, P>::col_type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::row_type
operator /	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator\/(T const & s, tmat3x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator /	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator\/(tmat3x4<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator /	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator\/(T const & s, tmat4x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator /	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator\/(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator /	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator\/(T const & s, tmat4x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator /	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator\/(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator /	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator\/(T const & s,	tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator /	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator\/(tmat4x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator /	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator\/(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator /	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type operator\/(tmat4x4<T, P> const & m, typenam/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type
operator /	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::row_type operator\/(typename tmat4x4<T, P>::col_type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::row_type
operator /	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator\/(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator /	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator\/(tvec1<T, P> const & v,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator /	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator\/(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator /	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator\/(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator /	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator\/(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator /	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator\/(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator /	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator\/(tquat<T, P> const & q, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator /	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator\/(tdualquat<T, P> const & q,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator /	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator\/$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator /	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator\/ (fquatSIMD const & q, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator /	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/ (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/ (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/ (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /=	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator /=	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator\/= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator /=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator /=	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator\/=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator /=	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator /=	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> & tmat2x4<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator /=	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> & tmat3x2<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator /=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator /=	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator\/=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator /=	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> & tmat3x4<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator /=	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator /=	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator /=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator /=	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator\/=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator /=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator\/=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator /=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator /=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator\/=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator /=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator /=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator\/=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator /=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator\/=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator /=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator /=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator\/=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator /=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator\/=(U s)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator /=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator /=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator\/=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator /=	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator\/=(U s)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator /=	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator\/=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator /=	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator\/= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator /=	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD& fquatSIMD::operator\/=(float const & s)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD &
operator /=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator\/=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator /=	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator\/=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator <<	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator<<(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator <<	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator<<(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator <<	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator<<(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator <<	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, o/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, p/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, w/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> & operator<<(std::basic_ostream<CTy,CTr>& os, tm/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, tma/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, tqu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, tve/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	include/glm/gtx/io.inl	/^	std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, delimeter<CTy> const/;"	f	namespace:glm::io	typeref:typename:std::basic_ostream<CTy,CTr> &
operator <<=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator<<=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator <<=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator <<=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator<<=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator <<=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator <<=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator<<=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator <<=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator<<=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator <<=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator <<=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator<<=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator <<=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator<<=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator <<=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator <<=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator<<=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator =	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const &) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const ValueType& t)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator =	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator=(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator =	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator =	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator=(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator =	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator=(tmat2x3<U, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator =	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator=(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator =	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator=(tmat2x4<U, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator =	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator=(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator =	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator=(tmat3x2<U, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator =	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator=(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator =	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator =	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator=(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator =	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator=(tmat3x4<U, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator =	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>& tmat4x2<T, P>::operator=(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator =	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>& tmat4x2<T, P>::operator=(tmat4x2<U, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator =	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>& tmat4x3<T, P>::operator=(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator =	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>& tmat4x3<T, P>::operator=(tmat4x3<U, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator =	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator=(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator =	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator =	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator=(tvec1<T, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator =	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator =	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator=(tvec2<T, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator =	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator =	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>& tvec3<T, P>::operator=(tvec3<T, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator =	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>& tvec3<T, P>::operator=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator =	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator=(tvec4<T, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator =	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator =	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator=(tquat<T, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator =	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator=(tquat<U, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator =	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator=(tdualquat<T, P> const & q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator =	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator=(tdualquat<U, P> const & q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator =	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD& fmat4x4SIMD::operator= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator =	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD& fquatSIMD::operator=(fquatSIMD const & q)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD &
operator =	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator =	src/lodepng.cpp	/^State& State::operator=(const State& other)$/;"	f	class:lodepng::State	typeref:typename:State &
operator ==	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tquat<T, P> const & q1, tquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tdualquat<T, P> const & q1, tdualquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator >>	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator>>(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator >>	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator>>(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator >>	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator>>(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator >>	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator>>=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator >>=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator >>=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator>>=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator >>=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator >>=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator>>=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator >>=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator>>=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator >>=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator >>=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator>>=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator >>=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator>>=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator >>=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator >>=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator>>=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator []	include/glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type & tmat2x2<T, P>::operator[](typename tmat2/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type &
operator []	include/glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type const & tmat2x2<T, P>::operator[](typename/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type const &
operator []	include/glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::col_type & tmat2x3<T, P>::operator[](typename tmat2/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::col_type &
operator []	include/glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::col_type const & tmat2x3<T, P>::operator[](typename/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::col_type const &
operator []	include/glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::col_type & tmat2x4<T, P>::operator[](typename tmat2/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::col_type &
operator []	include/glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::col_type const & tmat2x4<T, P>::operator[](typename/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::col_type const &
operator []	include/glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::col_type & tmat3x2<T, P>::operator[](typename tmat3/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::col_type &
operator []	include/glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::col_type const & tmat3x2<T, P>::operator[](typename/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::col_type const &
operator []	include/glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type & tmat3x3<T, P>::operator[](typename tmat3/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type &
operator []	include/glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type const & tmat3x3<T, P>::operator[](typename/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type const &
operator []	include/glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::col_type & tmat3x4<T, P>::operator[](typename tmat3/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::col_type &
operator []	include/glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::col_type const & tmat3x4<T, P>::operator[](typename/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::col_type const &
operator []	include/glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::col_type & tmat4x2<T, P>::operator[](typename tmat4/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::col_type &
operator []	include/glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::col_type const & tmat4x2<T, P>::operator[](typename/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::col_type const &
operator []	include/glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::col_type & tmat4x3<T, P>::operator[](typename tmat4/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::col_type &
operator []	include/glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::col_type const & tmat4x3<T, P>::operator[](typename/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::col_type const &
operator []	include/glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type & tmat4x4<T, P>::operator[](typename tmat4/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type &
operator []	include/glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type const & tmat4x4<T, P>::operator[](typename/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type const &
operator []	include/glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T & tvec1<T, P>::operator[](typename tvec1<T, P>::length_type i)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T & tvec1<T, P>::operator[](typename tvec1<T, P>::size_type i)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T const & tvec1<T, P>::operator[](typename tvec1<T, P>::length_type i) cons/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T const & tvec1<T, P>::operator[](typename tvec1<T, P>::size_type i) const$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER T & tvec2<T, P>::operator[](length_t i)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER T const & tvec2<T, P>::operator[](length_t i) const$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T & tvec3<T, P>::operator[](typename tvec3<T, P>::length_type i)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T & tvec3<T, P>::operator[](typename tvec3<T, P>::size_type i)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T const & tvec3<T, P>::operator[](typename tvec3<T, P>::length_type i) cons/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T const & tvec3<T, P>::operator[](typename tvec3<T, P>::size_type i) const$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T & tvec4<T, P>::operator[](typename tvec4<T, P>::length_type i)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T & tvec4<T, P>::operator[](typename tvec4<T, P>::size_type i)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T const & tvec4<T, P>::operator[](typename tvec4<T, P>::length_type i) cons/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T const & tvec4<T, P>::operator[](typename tvec4<T, P>::size_type i) const$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T & tquat<T, P>::operator[](typename tquat<T, P>::length_type i)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T & tquat<T, P>::operator[](typename tquat<T, P>::size_type i)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	include/glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T const & tquat<T, P>::operator[](typename tquat<T, P>::length_type i) cons/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T const & tquat<T, P>::operator[](typename tquat<T, P>::size_type i) const$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	include/glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER typename tdualquat<T, P>::part_type & tdualquat<T, P>::operator[](typename /;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,P>::part_type &
operator []	include/glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER typename tdualquat<T, P>::part_type const & tdualquat<T, P>::operator[](typ/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,P>::part_type const &
operator [] 	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER value_type  operator[]  (size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER value_type
operator [] 	include/glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER value_type& operator[]  (size_t i)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER value_type &
operator [] 	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::col_type const & base<vT, cT, rT, pT>::operator[]$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::col_type const &
operator [] 	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::col_type& base<vT, cT, rT, pT>::operator[]$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::col_type &
operator [] 	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD & fmat4x4SIMD::operator[]$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator [] 	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD const & fmat4x4SIMD::operator[]$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD const &
operator ^	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator^(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ^	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator^(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ^	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator^(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ^	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator^=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator ^=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator ^=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator^=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ^=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ^=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator^=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ^=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator^=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ^=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ^=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator^=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ^=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator^=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ^=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ^=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator^=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator |	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator|(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator |	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator|(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator |	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator|(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator |	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(T s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator|=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator |=	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator |=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator|=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator |=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator |=	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator|=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator |=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator|=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator |=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator |=	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator|=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator |=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator|=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator |=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator |=	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator|=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ~	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator~(tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ~	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator~(tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ~	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator~(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ~	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator~(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
order	include/glm/gtx/io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct	typeref:typename:order_type
order	include/glm/gtx/io.hpp	/^		struct order$/;"	s	namespace:glm::io
order	include/glm/gtx/io.inl	/^	order::order(order_type a)$/;"	f	class:glm::io::order	typeref:typename:GLM_FUNC_QUALIFIER
order_type	include/glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
orientate2	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, defaultp> orientate2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,defaultp>
orientate3	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
orientate3	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, defaultp> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,defaultp>
orientate4	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> orientate4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
orientation	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> orientation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
orientedAngle	include/glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T orientedAngle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
ortho	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> ortho$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
orthonormalize	include/glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> orthonormalize(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
orthonormalize	include/glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> orthonormalize(tvec3<T, P> const & x, tvec3<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
outerProduct	include/glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<T, P, vecTypeA, vecTypeB>::type outerPro/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<T,P,vecTypeA,vecTypeB>::type
outerProduct	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD outerProduct$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	include/glm/detail/type_mat.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
overflow	include/glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float overflow()$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
p	include/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10408	typeref:typename:T
p	include/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon623cd6d1070a	typeref:typename:T
p	include/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520408	typeref:typename:T
p	include/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon624eef52070a	typeref:typename:T
pack	include/glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::i10i10i10i2	typeref:typename:uint32	file:
pack	include/glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::u10u10u10u2	typeref:typename:uint32	file:
packDouble2x32	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER double packDouble2x32(uvec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
packF2x11_1x10	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packF2x11_1x10(vec3 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packHalf1x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packHalf1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packHalf2x16	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packHalf2x16(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packHalf4x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packHalf4x16(glm::vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packI3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packI3x10_1x2(ivec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packSnorm1x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm1x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packSnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packSnorm2x16	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm2x16(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packSnorm2x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm2x8(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packSnorm3x10_1x2(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packSnorm4x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packSnorm4x16(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packSnorm4x8	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm4x8(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packU3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packU3x10_1x2(uvec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm1x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm1x16(float s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm1x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x16	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm2x16(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packUnorm2x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm2x8(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packUnorm3x10_1x2(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm4x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUnorm4x16(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUnorm4x8	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm4x8(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packed10ToFloat	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed10ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed10bitToFloat	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed10bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
packed11ToFloat	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed11ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed11bitToFloat	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed11bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
paethPredictor	src/lodepng.cpp	/^static unsigned char paethPredictor(short a, short b, short c)$/;"	f	typeref:typename:unsigned char	file:
palette	include/lodepng.h	/^  unsigned char palette[1024]; \/*Remembers up to the first 256 RGBA colors, in no particular or/;"	m	struct:LodePNGColorProfile	typeref:typename:unsigned char[1024]
palette	include/lodepng.h	/^  unsigned char* palette; \/*palette in RGBARGBA... order. When allocated, must be either 0, or /;"	m	struct:LodePNGColorMode	typeref:typename:unsigned char *
palettesize	include/lodepng.h	/^  size_t palettesize; \/*palette size in number of colors (amount of bytes is 4 * palettesize)*\/$/;"	m	struct:LodePNGColorMode	typeref:typename:size_t
param_type	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & param_type;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const &
parse_version	src/gl3w.c	/^static int parse_version(void)$/;"	f	typeref:typename:int	file:
part_type	include/glm/gtx/dual_quaternion.hpp	/^		typedef glm::tquat<T, P> part_type;$/;"	t	struct:glm::tdualquat	typeref:typename:glm::tquat<T,P>
parts	include/glm/gtc/ulp.inl	/^	} parts;$/;"	m	union:__anona4a85f36020a	typeref:struct:__anona4a85f36020a::__anona4a85f360308	file:
pd	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	m	union:_mm_castpd_ps::__anoned049d10010a	typeref:typename:__m128d
pd	include/glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	m	union:_mm_castps_pd::__anoned049d10020a	typeref:typename:__m128d
perlin	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec2<T, P> const & Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec2<T, P> const & Position, tvec2<T, P> const & rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec3<T, P> const & Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec3<T, P> const & Position, tvec3<T, P> const & rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec4<T, P> const & Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec4<T, P> const & Position, tvec4<T, P> const & rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
permute	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
permute	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> permute(tvec2<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
permute	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> permute(tvec3<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
permute	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> permute(tvec4<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
perp	include/glm/gtx/perpendicular.inl	/^	GLM_FUNC_QUALIFIER vecType perp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType
perspective	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> perspective$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
perspectiveFov	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> perspectiveFov$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
phys_defined	include/lodepng.h	/^  unsigned phys_defined; \/*if 0, there is no pHYs chunk and the values below are undefined, if /;"	m	struct:LodePNGInfo	typeref:typename:unsigned
phys_unit	include/lodepng.h	/^  unsigned phys_unit; \/*may be 0 (unknown unit) or 1 (metre)*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
phys_x	include/lodepng.h	/^  unsigned phys_x; \/*pixels per unit in x direction*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
phys_y	include/lodepng.h	/^  unsigned phys_y; \/*pixels per unit in y direction*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
pi	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED pi = _mm_set_ps1(3.1415926535897932384626433832795f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
pi	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	m	union:_mm_castsi128_ps::__anoned049d10040a	typeref:typename:__m128i
pi	include/glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	m	union:_mm_castps_si128::__anoned049d10030a	typeref:typename:__m128i
pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pi_over_hundred_eighty	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED pi_over_hundred_eighty = _mm_set_ps1(0.01745329251994329576923/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
pickMatrix	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> pickMatrix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
pitch	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T pitch(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
pointer	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> * pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> *
pointer_const	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> * const pointer_const;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> * const
polar	include/glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> polar$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
position	include/glm/detail/dummy.cpp	/^	glm::vec4 position; \/\/ Ppli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
position	include/glm/detail/dummy.cpp	/^	glm::vec4 position;$/;"	m	struct:intersection	typeref:typename:glm::vec4	file:
position	src/tutorial18.cpp	/^    glm::vec3 position;$/;"	m	struct:Vertex	typeref:typename:glm::vec3	file:
postProcessScanlines	src/lodepng.cpp	/^static unsigned postProcessScanlines(unsigned char* out, unsigned char* in,$/;"	f	typeref:typename:unsigned	file:
pow	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> pow(vecType<T, P> const & base, vecType<T, P> const & exponent/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
pow	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int pow(int x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
pow	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint pow(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
pow	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> pow$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
pow2	include/glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow2(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow3	include/glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow3(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow4	include/glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow4(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoAbove(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> powerOfTwoAbove(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
powerOfTwoBelow	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoBelow(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoBelow	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> powerOfTwoBelow(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
powerOfTwoNearest	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoNearest(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoNearest	include/glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> powerOfTwoNearest(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
preProcessScanlines	src/lodepng.cpp	/^static unsigned preProcessScanlines(unsigned char** out, size_t* outsize, const unsigned char* i/;"	f	typeref:typename:unsigned	file:
precision	include/glm/detail/precision.hpp	/^	enum precision$/;"	g	namespace:glm
precision	include/glm/gtx/io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
precision	include/glm/gtx/io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision	include/glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER precision::precision(unsigned a)$/;"	f	class:glm::io::precision	typeref:typename:GLM_FUNC_QUALIFIER
precision_	include/glm/gtx/io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
predefined_filters	include/lodepng.h	/^  const unsigned char* predefined_filters;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:const unsigned char *
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<bool>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<double>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<float>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<int16_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<int32_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<int64_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<int8_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<uint16_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<uint32_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<uint64_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix<uint8_t>$/;"	s	namespace:glm::detail	file:
prefix	include/glm/gtx/string_cast.inl	/^	struct prefix{};$/;"	s	namespace:glm::detail	file:
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
prev_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER T prev_float(T const & x, uint const & ulps)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
prev_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double prev_float(double const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
prev_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float prev_float(float const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
prev_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> prev_float(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
prev_float	include/glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> prev_float(vecType<T, P> const & x, vecType<uint, P> const & u/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
profile	include/glm/detail/type_gentype.hpp	/^	enum profile$/;"	g	namespace:glm
proj	include/glm/gtx/projection.inl	/^	GLM_FUNC_QUALIFIER vecType proj(vecType const & x, vecType const & Normal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType
proj2D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> proj2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
proj3D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> proj3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
project	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> project$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
ps	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	m	union:_mm_castpd_ps::__anoned049d10010a	typeref:typename:__m128
ps	include/glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	m	union:_mm_castsi128_ps::__anoned049d10040a	typeref:typename:__m128
ps	include/glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	m	union:_mm_castps_pd::__anoned049d10020a	typeref:typename:__m128
ps	include/glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	m	union:_mm_castps_si128::__anoned049d10030a	typeref:typename:__m128
q	include/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520408	typeref:typename:T
q	include/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon624eef52080a	typeref:typename:T
qnxnto	build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
quadraticAttenuation	include/glm/detail/dummy.cpp	/^	float quadraticAttenuation;\/\/ K2$/;"	m	struct:light	typeref:typename:float	file:
quarter_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType quarter_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quat	include/glm/fwd.hpp	/^	typedef highp_quat			quat;$/;"	t	namespace:glm	typeref:typename:highp_quat
quat	include/glm/fwd.hpp	/^	typedef lowp_quat			quat;$/;"	t	namespace:glm	typeref:typename:lowp_quat
quat	include/glm/fwd.hpp	/^	typedef mediump_quat		quat;$/;"	t	namespace:glm	typeref:typename:mediump_quat
quatSIMD_cast	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD quatSIMD_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
quatSIMD_cast_impl	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD quatSIMD_cast_impl(const T m0[], const T m1[], const T m2[]/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
quat_cast	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> quat_cast(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
quat_cast	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> quat_cast(tmat4x4<T, P> const & m4)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
quat_cast	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER quat quat_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER quat
qword	include/glm/gtx/raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm	typeref:typename:detail::uint64
r	include/glm/detail/type_vec1.hpp	/^				T r;$/;"	m	union:glm::tvec1::__anon6218a5cf010a	typeref:typename:T
r	include/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon6218a5cf020a	typeref:typename:T
r	include/glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon622abe50010a::__anon622abe500308	typeref:typename:T
r	include/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon622abe50050a	typeref:typename:T
r	include/glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10308	typeref:typename:T
r	include/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon623cd6d1050a	typeref:typename:T
r	include/glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520308	typeref:typename:T
r	include/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon624eef52050a	typeref:typename:T
radialGradient	include/glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T radialGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
radians	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType radians(genType degrees)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
radians	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> radians(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
radiansToDegrees	src/utilities.cpp	/^        double radiansToDegrees(double angle)$/;"	f	namespace:Utilities::Math	typeref:typename:double
readBitFromReversedStream	src/lodepng.cpp	/^static unsigned char readBitFromReversedStream(size_t* bitpointer, const unsigned char* bitstrea/;"	f	typeref:typename:unsigned char	file:
readBitFromStream	src/lodepng.cpp	/^static unsigned char readBitFromStream(size_t* bitpointer, const unsigned char* bitstream)$/;"	f	typeref:typename:unsigned char	file:
readBitsFromReversedStream	src/lodepng.cpp	/^static unsigned readBitsFromReversedStream(size_t* bitpointer, const unsigned char* bitstream, s/;"	f	typeref:typename:unsigned	file:
readBitsFromStream	src/lodepng.cpp	/^static unsigned readBitsFromStream(size_t* bitpointer, const unsigned char* bitstream, size_t nb/;"	f	typeref:typename:unsigned	file:
readChunk_PLTE	src/lodepng.cpp	/^static unsigned readChunk_PLTE(LodePNGColorMode* color, const unsigned char* data, size_t chunkL/;"	f	typeref:typename:unsigned	file:
readChunk_bKGD	src/lodepng.cpp	/^static unsigned readChunk_bKGD(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_iTXt	src/lodepng.cpp	/^static unsigned readChunk_iTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,$/;"	f	typeref:typename:unsigned	file:
readChunk_pHYs	src/lodepng.cpp	/^static unsigned readChunk_pHYs(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_tEXt	src/lodepng.cpp	/^static unsigned readChunk_tEXt(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_tIME	src/lodepng.cpp	/^static unsigned readChunk_tIME(LodePNGInfo* info, const unsigned char* data, size_t chunkLength)$/;"	f	typeref:typename:unsigned	file:
readChunk_tRNS	src/lodepng.cpp	/^static unsigned readChunk_tRNS(LodePNGColorMode* color, const unsigned char* data, size_t chunkL/;"	f	typeref:typename:unsigned	file:
readChunk_zTXt	src/lodepng.cpp	/^static unsigned readChunk_zTXt(LodePNGInfo* info, const LodePNGDecompressSettings* zlibsettings,$/;"	f	typeref:typename:unsigned	file:
read_text_chunks	include/lodepng.h	/^  unsigned read_text_chunks; \/*if false but remember_unknown_chunks is true, they're stored in /;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
real	include/glm/gtx/dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:glm::tquat<T,P>
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
reference	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> & reference;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> &
reflect	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType reflect(genType const & I, genType const & N)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
reflect	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD reflect$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
reflect2D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> reflect2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
reflect3D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> reflect3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
refract	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType refract(genType const & I, genType const & N, genType const & eta)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
refract	include/glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> refract(vecType<T, P> const & I, vecType<T, P> const & N, T et/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
refract	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD refract$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
remember_unknown_chunks	include/lodepng.h	/^  unsigned remember_unknown_chunks;$/;"	m	struct:LodePNGDecoderSettings	typeref:typename:unsigned
removeLightByID	src/lights/directional.cpp	/^void DirectionalLightList::removeLightByID(unsigned int lightID)$/;"	f	class:DirectionalLightList	typeref:typename:void
removePaddingBits	src/lodepng.cpp	/^static void removePaddingBits(unsigned char* out, const unsigned char* in,$/;"	f	typeref:typename:void	file:
renderContext	include/renderwindow.h	/^        SDL_GLContext renderContext;$/;"	m	class:RenderWindow	typeref:typename:SDL_GLContext
repeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
repeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
repeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
repeat	include/glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
return_type_scalar_multiplication	include/glm/gtx/scalar_multiplication.hpp	/^	using return_type_scalar_multiplication = typename std::enable_if<$/;"	t	namespace:glm	typeref:typename:std::enable_if<!std::is_same<T,float>::value && std::is_arithmetic<T>::value,Vec>::type
rgb2YCoCg	include/glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rgb2YCoCg$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rgb2YCoCgR	include/glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rgb2YCoCgR$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rgbColor	include/glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rgbColor(const tvec3<T, P>& hsvColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rgba16ToPixel	src/lodepng.cpp	/^static void rgba16ToPixel(unsigned char* out, size_t i,$/;"	f	typeref:typename:void	file:
rgba8ToPixel	src/lodepng.cpp	/^static unsigned rgba8ToPixel(unsigned char* out, size_t i,$/;"	f	typeref:typename:unsigned	file:
rightHanded	include/glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool rightHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
roll	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T roll(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
root_five	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_five()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_half_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_ln_four	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_ln_four()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_three	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_three()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_two	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_two_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
rotate	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotate	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> rotate(tquat<T, P> const & q, T const & angle, tvec3<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
rotate	include/glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> rotate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
rotate	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotate	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotate	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
rotate	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotate	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotate	include/glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotateNormalizedAxis	include/glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotateNormalizedAxis	include/glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
rotateX	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotateX	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotateY	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotateY	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotateZ	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotateZ	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotate_slow	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotate_slow$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotation	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> rotation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
round	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType round(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
round	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> round(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
round	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD round$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
roundEven	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType roundEven(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundEven	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> roundEven(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
roundMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType roundMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundMultiple	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> roundMultiple(vecType<T, P> const & Source, vecType<T, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
roundPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genIUType roundPowerOfTwo(genIUType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
roundPowerOfTwo	include/glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> roundPowerOfTwo(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
row	include/glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
row	include/glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::row_type row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::row_type
rowMajor2	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> rowMajor2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
rowMajor2	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> rowMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
rowMajor3	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> rowMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
rowMajor4	include/glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rowMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
row_major	include/glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_size	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::size_type base<vT, cT, rT, pT>::row_size()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::size_type
row_type	include/glm/detail/type_mat2x2.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tvec2<T,P>
row_type	include/glm/detail/type_mat2x3.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tvec2<T,P>
row_type	include/glm/detail/type_mat2x4.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tvec2<T,P>
row_type	include/glm/detail/type_mat3x2.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tvec3<T,P>
row_type	include/glm/detail/type_mat3x3.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tvec3<T,P>
row_type	include/glm/detail/type_mat3x4.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tvec3<T,P>
row_type	include/glm/detail/type_mat4x2.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tvec4<T,P>
row_type	include/glm/detail/type_mat4x3.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tvec4<T,P>
row_type	include/glm/detail/type_mat4x4.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tvec4<T,P>
row_type	include/glm/gtx/simd_mat4.hpp	/^		typedef fvec4SIMD row_type;$/;"	t	namespace:glm::detail	typeref:typename:fvec4SIMD
s	include/glm/detail/type_vec1.hpp	/^				T s;$/;"	m	union:glm::tvec1::__anon6218a5cf010a	typeref:typename:T
s	include/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon6218a5cf020a	typeref:typename:T
s	include/glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon622abe50010a::__anon622abe500408	typeref:typename:T
s	include/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon622abe50050a	typeref:typename:T
s	include/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10408	typeref:typename:T
s	include/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon623cd6d1050a	typeref:typename:T
s	include/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520408	typeref:typename:T
s	include/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon624eef52050a	typeref:typename:T
saturate	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
saturate	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> saturate(const tvec2<T, P>& x/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
saturate	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> saturate(const tvec3<T, P>& x/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
saturate	include/glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> saturate(const tvec4<T, P>& x/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
saturation	include/glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> saturation(T const s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
saturation	include/glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> saturation(const T s, const tvec3<T, P>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
saturation	include/glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> saturation(const T s, const tvec4<T, P>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
save_file	src/lodepng.cpp	/^unsigned save_file(const std::vector<unsigned char>& buffer, const std::string& filename)$/;"	f	namespace:lodepng	typeref:typename:unsigned
scale	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scale$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
scale	include/glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> scale($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
scale	include/glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scale($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
scaleBias	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scaleBias($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
scale_slow	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scale_slow$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
screenHeight	src/tutorial18.cpp	/^const unsigned int screenHeight = 600;$/;"	v	typeref:typename:const unsigned int
screenWidth	src/tutorial18.cpp	/^const unsigned int screenWidth = 800;$/;"	v	typeref:typename:const unsigned int
searchCodeIndex	src/lodepng.cpp	/^static size_t searchCodeIndex(const unsigned* array, size_t array_size, size_t value)$/;"	f	typeref:typename:size_t	file:
sec	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sec(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sec	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sec(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sech	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sech(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sech	include/glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sech(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
second	include/lodepng.h	/^  unsigned second;  \/*0-60 (to allow for leap seconds)*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
separator	include/glm/gtx/io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
setBitOfReversedStream	src/lodepng.cpp	/^static void setBitOfReversedStream(size_t* bitpointer, unsigned char* bitstream, unsigned char b/;"	f	typeref:typename:void	file:
setBitOfReversedStream0	src/lodepng.cpp	/^static void setBitOfReversedStream0(size_t* bitpointer, unsigned char* bitstream, unsigned char /;"	f	typeref:typename:void	file:
setGLVertexAttribPointer	src/materials/material.cpp	/^void Material::setGLVertexAttribPointer(std::string attributeName, GLint size, GLenum type, GLbo/;"	f	class:Material	typeref:typename:void
setLights	src/lights/directional.cpp	/^void DirectionalLightList::setLights(const std::unordered_map<std::string, PhongLightAttributes>/;"	f	class:DirectionalLightList	typeref:typename:void
setTextureParams	src/texture.cpp	/^void Texture::setTextureParams(GLuint wrapModeS, GLuint wrapModeT, GLuint minFilter, GLuint magF/;"	f	class:Texture	typeref:typename:void
shaderAttributes	include/materials/material.h	/^        std::unordered_map<std::string, GLint> shaderAttributes;$/;"	m	class:Material	typeref:typename:std::unordered_map<std::string,GLint>
shaderProgram	include/materials/material.h	/^        GLuint shaderProgram = 0;$/;"	m	class:Material	typeref:typename:GLuint
shaderStages	include/materials/material.h	/^        ShaderProgramStages shaderStages;$/;"	m	class:Material	typeref:typename:ShaderProgramStages
shearX	include/glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearX($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearX2D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearX2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearX3D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> shearX3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
shearY	include/glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearY($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearY2D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearY2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearY3D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> shearY3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
shearZ3D	include/glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> shearZ3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
shininess	include/glm/detail/dummy.cpp	/^	float shininess; \/\/ Srm$/;"	m	struct:material	typeref:typename:float	file:
shortMix	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> shortMix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
shuffle_mask	include/glm/gtx/simd_vec4.inl	/^struct shuffle_mask$/;"	s	namespace:glm::detail	file:
sign	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genFIType sign(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genFIType
sign	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sign(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sign	include/glm/detail/intrinsic_common.inl	/^			const unsigned int mantissa:23, exp:8, sign:1;$/;"	m	struct:glm::detail::ieee754_QNAN::i	typeref:typename:const unsigned int:1	file:
sign	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD sign$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
sign16	include/glm/gtc/bitfield.inl	/^		union sign16$/;"	u	function:glm::bitfieldInterleave	file:
sign32	include/glm/gtc/bitfield.inl	/^		union sign32$/;"	u	function:glm::bitfieldInterleave	file:
sign64	include/glm/gtc/bitfield.inl	/^		union sign64$/;"	u	function:glm::bitfieldInterleave	file:
sign8	include/glm/gtc/bitfield.inl	/^		union sign8$/;"	u	function:glm::bitfieldInterleave	file:
simd	include/glm/detail/type_gentype.hpp	/^		simd$/;"	e	enum:glm::profile
simd	include/glm/detail/type_vec4.hpp	/^		struct simd<double>$/;"	s	namespace:glm::detail
simd	include/glm/detail/type_vec4.hpp	/^		struct simd<float>$/;"	s	namespace:glm::detail
simd	include/glm/detail/type_vec4.hpp	/^		struct simd<int64>$/;"	s	namespace:glm::detail
simd	include/glm/detail/type_vec4.hpp	/^		struct simd<int>$/;"	s	namespace:glm::detail
simd	include/glm/detail/type_vec4.hpp	/^		struct simd<uint64>$/;"	s	namespace:glm::detail
simd	include/glm/detail/type_vec4.hpp	/^		struct simd<unsigned int>$/;"	s	namespace:glm::detail
simd	include/glm/detail/type_vec4.hpp	/^	struct simd$/;"	s	namespace:glm::detail
simdMat4	include/glm/gtx/simd_mat4.hpp	/^	typedef detail::fmat4x4SIMD simdMat4;$/;"	t	namespace:glm	typeref:typename:detail::fmat4x4SIMD
simdQuat	include/glm/gtx/simd_quat.hpp	/^	typedef glm::detail::fquatSIMD simdQuat;$/;"	t	namespace:glm	typeref:typename:glm::detail::fquatSIMD
simdVec4	include/glm/gtx/simd_vec4.hpp	/^	typedef glm::detail::fvec4SIMD simdVec4;$/;"	t	namespace:glm	typeref:typename:glm::detail::fvec4SIMD
simplex	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(glm::tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	include/glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
sin	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sin(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sinh	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sinh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sint	include/glm/gtx/integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm	typeref:typename:signed int
size	include/glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T, P>::size_type tmat2x2<T, P>::size() const$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T,P>::size_type
size	include/glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T, P>::size_type tmat2x3<T, P>::size() const$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T,P>::size_type
size	include/glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T, P>::size_type tmat2x4<T, P>::size() const$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T,P>::size_type
size	include/glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T, P>::size_type tmat3x2<T, P>::size() const$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T,P>::size_type
size	include/glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T, P>::size_type tmat3x3<T, P>::size() const$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T,P>::size_type
size	include/glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T, P>::size_type tmat3x4<T, P>::size() const$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T,P>::size_type
size	include/glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T, P>::size_type tmat4x2<T, P>::size() const$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T,P>::size_type
size	include/glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T, P>::size_type tmat4x3<T, P>::size() const$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T,P>::size_type
size	include/glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T, P>::size_type tmat4x4<T, P>::size() const$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T,P>::size_type
size	include/glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T, P>::size_type tvec1<T, P>::size() const$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T,P>::size_type
size	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR size_t tvec2<T, P>::size() const$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR size_t
size	include/glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T, P>::size_type tvec3<T, P>::size() const$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T,P>::size_type
size	include/glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T, P>::size_type tvec4<T, P>::size() const$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T,P>::size_type
size	include/glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T, P>::size_type tquat<T, P>::size() const$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T,P>::size_type
size	include/glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tdualquat<T, P>::size_type tdualquat<T, P>::size() c/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tdualquat<T,P>::size_type
size	src/lodepng.cpp	/^  size_t size; \/*size in number of unsigned longs*\/$/;"	m	struct:uivector	typeref:typename:size_t	file:
size	src/lodepng.cpp	/^  size_t size; \/*used size*\/$/;"	m	struct:ucvector	typeref:typename:size_t	file:
size1	include/glm/gtx/std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1;$/;"	t	namespace:glm	typeref:typename:tvec1<std::size_t,defaultp>
size1_t	include/glm/gtx/std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<std::size_t,defaultp>
size2	include/glm/gtx/std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2;$/;"	t	namespace:glm	typeref:typename:tvec2<std::size_t,defaultp>
size2_t	include/glm/gtx/std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm	typeref:typename:tvec2<std::size_t,defaultp>
size3	include/glm/gtx/std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3;$/;"	t	namespace:glm	typeref:typename:tvec3<std::size_t,defaultp>
size3_t	include/glm/gtx/std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm	typeref:typename:tvec3<std::size_t,defaultp>
size4	include/glm/gtx/std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4;$/;"	t	namespace:glm	typeref:typename:tvec4<std::size_t,defaultp>
size4_t	include/glm/gtx/std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm	typeref:typename:tvec4<std::size_t,defaultp>
sizeType	include/glm/detail/type_gentype.hpp	/^	typedef std::size_t sizeType;$/;"	t	namespace:glm	typeref:typename:std::size_t
size_type	include/glm/detail/type_gentype.hpp	/^		typedef sizeType size_type;$/;"	t	struct:glm::detail::genType	typeref:typename:sizeType
size_type	include/glm/detail/type_mat2x2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:size_t
size_type	include/glm/detail/type_mat2x3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:size_t
size_type	include/glm/detail/type_mat2x4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:size_t
size_type	include/glm/detail/type_mat3x2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:size_t
size_type	include/glm/detail/type_mat3x3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:size_t
size_type	include/glm/detail/type_mat3x4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:size_t
size_type	include/glm/detail/type_mat4x2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:size_t
size_type	include/glm/detail/type_mat4x3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:size_t
size_type	include/glm/detail/type_mat4x4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:size_t
size_type	include/glm/detail/type_vec1.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec1	typeref:typename:size_t
size_type	include/glm/detail/type_vec2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec2	typeref:typename:size_t
size_type	include/glm/detail/type_vec3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec3	typeref:typename:size_t
size_type	include/glm/detail/type_vec4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec4	typeref:typename:size_t
size_type	include/glm/gtc/quaternion.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tquat	typeref:typename:size_t
size_type	include/glm/gtx/dual_quaternion.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tdualquat	typeref:typename:size_t
size_type	include/glm/gtx/simd_mat4.hpp	/^		typedef std::size_t size_type;$/;"	t	namespace:glm::detail	typeref:typename:std::size_t
size_type	include/glm/gtx/simd_quat.hpp	/^		typedef std::size_t size_type;$/;"	t	namespace:glm::detail	typeref:typename:std::size_t
size_type	include/glm/gtx/simd_vec4.hpp	/^		typedef std::size_t size_type;$/;"	t	namespace:glm::detail	typeref:typename:std::size_t
slerp	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> slerp(tquat<T, P> const & x,	tquat<T, P> const & y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
slerp	include/glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> slerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
slerp	include/glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD slerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
smoothstep	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType smoothstep(genType edge0, genType edge1, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
smoothstep	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> smoothstep(T edge0, T edge1, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
smoothstep	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> smoothstep(vecType<T, P> const & edge0, vecType<T, P> const & /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
smoothstep	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD smoothstep$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
space	include/glm/gtx/io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
specular	include/glm/detail/dummy.cpp	/^	glm::vec4 specular; \/\/ Scli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
specular	include/glm/detail/dummy.cpp	/^	glm::vec4 specular; \/\/ Scm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
sphericalRand	include/glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> sphericalRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
spotCosCutoff	include/glm/detail/dummy.cpp	/^	float spotCosCutoff; \/\/ Derived: cos(Crli)$/;"	m	struct:light	typeref:typename:float	file:
spotCutoff	include/glm/detail/dummy.cpp	/^	float spotCutoff; \/\/ Crli$/;"	m	struct:light	typeref:typename:float	file:
spotDirection	include/glm/detail/dummy.cpp	/^	glm::vec3 spotDirection; \/\/ Sdli$/;"	m	struct:light	typeref:typename:glm::vec3	file:
spotExponent	include/glm/detail/dummy.cpp	/^	float spotExponent; \/\/ Srli$/;"	m	struct:light	typeref:typename:float	file:
sqrt	include/glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sqrt	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int sqrt(int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
sqrt	include/glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint sqrt(uint x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
sqrt	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD sqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
squad	include/glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> squad$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
src/camera.cpp.i	build/Makefile	/^src\/camera.cpp.i:$/;"	t
src/camera.cpp.o	build/Makefile	/^src\/camera.cpp.o:$/;"	t
src/camera.cpp.s	build/Makefile	/^src\/camera.cpp.s:$/;"	t
src/camera.i	build/Makefile	/^src\/camera.i: src\/camera.cpp.i$/;"	t
src/camera.o	build/Makefile	/^src\/camera.o: src\/camera.cpp.o$/;"	t
src/camera.s	build/Makefile	/^src\/camera.s: src\/camera.cpp.s$/;"	t
src/controls.cpp.i	build/Makefile	/^src\/controls.cpp.i:$/;"	t
src/controls.cpp.o	build/Makefile	/^src\/controls.cpp.o:$/;"	t
src/controls.cpp.s	build/Makefile	/^src\/controls.cpp.s:$/;"	t
src/controls.i	build/Makefile	/^src\/controls.i: src\/controls.cpp.i$/;"	t
src/controls.o	build/Makefile	/^src\/controls.o: src\/controls.cpp.o$/;"	t
src/controls.s	build/Makefile	/^src\/controls.s: src\/controls.cpp.s$/;"	t
src/gl3w.c.i	build/Makefile	/^src\/gl3w.c.i:$/;"	t
src/gl3w.c.o	build/Makefile	/^src\/gl3w.c.o:$/;"	t
src/gl3w.c.s	build/Makefile	/^src\/gl3w.c.s:$/;"	t
src/gl3w.i	build/Makefile	/^src\/gl3w.i: src\/gl3w.c.i$/;"	t
src/gl3w.o	build/Makefile	/^src\/gl3w.o: src\/gl3w.c.o$/;"	t
src/gl3w.s	build/Makefile	/^src\/gl3w.s: src\/gl3w.c.s$/;"	t
src/lights/directional.cpp.i	build/Makefile	/^src\/lights\/directional.cpp.i:$/;"	t
src/lights/directional.cpp.o	build/Makefile	/^src\/lights\/directional.cpp.o:$/;"	t
src/lights/directional.cpp.s	build/Makefile	/^src\/lights\/directional.cpp.s:$/;"	t
src/lights/directional.i	build/Makefile	/^src\/lights\/directional.i: src\/lights\/directional.cpp.i$/;"	t
src/lights/directional.o	build/Makefile	/^src\/lights\/directional.o: src\/lights\/directional.cpp.o$/;"	t
src/lights/directional.s	build/Makefile	/^src\/lights\/directional.s: src\/lights\/directional.cpp.s$/;"	t
src/lodepng.cpp.i	build/Makefile	/^src\/lodepng.cpp.i:$/;"	t
src/lodepng.cpp.o	build/Makefile	/^src\/lodepng.cpp.o:$/;"	t
src/lodepng.cpp.s	build/Makefile	/^src\/lodepng.cpp.s:$/;"	t
src/lodepng.i	build/Makefile	/^src\/lodepng.i: src\/lodepng.cpp.i$/;"	t
src/lodepng.o	build/Makefile	/^src\/lodepng.o: src\/lodepng.cpp.o$/;"	t
src/lodepng.s	build/Makefile	/^src\/lodepng.s: src\/lodepng.cpp.s$/;"	t
src/materials/material.cpp.i	build/Makefile	/^src\/materials\/material.cpp.i:$/;"	t
src/materials/material.cpp.o	build/Makefile	/^src\/materials\/material.cpp.o:$/;"	t
src/materials/material.cpp.s	build/Makefile	/^src\/materials\/material.cpp.s:$/;"	t
src/materials/material.i	build/Makefile	/^src\/materials\/material.i: src\/materials\/material.cpp.i$/;"	t
src/materials/material.o	build/Makefile	/^src\/materials\/material.o: src\/materials\/material.cpp.o$/;"	t
src/materials/material.s	build/Makefile	/^src\/materials\/material.s: src\/materials\/material.cpp.s$/;"	t
src/materials/phongmaterial.cpp.i	build/Makefile	/^src\/materials\/phongmaterial.cpp.i:$/;"	t
src/materials/phongmaterial.cpp.o	build/Makefile	/^src\/materials\/phongmaterial.cpp.o:$/;"	t
src/materials/phongmaterial.cpp.s	build/Makefile	/^src\/materials\/phongmaterial.cpp.s:$/;"	t
src/materials/phongmaterial.i	build/Makefile	/^src\/materials\/phongmaterial.i: src\/materials\/phongmaterial.cpp.i$/;"	t
src/materials/phongmaterial.o	build/Makefile	/^src\/materials\/phongmaterial.o: src\/materials\/phongmaterial.cpp.o$/;"	t
src/materials/phongmaterial.s	build/Makefile	/^src\/materials\/phongmaterial.s: src\/materials\/phongmaterial.cpp.s$/;"	t
src/renderwindow.cpp.i	build/Makefile	/^src\/renderwindow.cpp.i:$/;"	t
src/renderwindow.cpp.o	build/Makefile	/^src\/renderwindow.cpp.o:$/;"	t
src/renderwindow.cpp.s	build/Makefile	/^src\/renderwindow.cpp.s:$/;"	t
src/renderwindow.i	build/Makefile	/^src\/renderwindow.i: src\/renderwindow.cpp.i$/;"	t
src/renderwindow.o	build/Makefile	/^src\/renderwindow.o: src\/renderwindow.cpp.o$/;"	t
src/renderwindow.s	build/Makefile	/^src\/renderwindow.s: src\/renderwindow.cpp.s$/;"	t
src/texture.cpp.i	build/Makefile	/^src\/texture.cpp.i:$/;"	t
src/texture.cpp.o	build/Makefile	/^src\/texture.cpp.o:$/;"	t
src/texture.cpp.s	build/Makefile	/^src\/texture.cpp.s:$/;"	t
src/texture.i	build/Makefile	/^src\/texture.i: src\/texture.cpp.i$/;"	t
src/texture.o	build/Makefile	/^src\/texture.o: src\/texture.cpp.o$/;"	t
src/texture.s	build/Makefile	/^src\/texture.s: src\/texture.cpp.s$/;"	t
src/tutorial18.cpp.i	build/Makefile	/^src\/tutorial18.cpp.i:$/;"	t
src/tutorial18.cpp.o	build/Makefile	/^src\/tutorial18.cpp.o:$/;"	t
src/tutorial18.cpp.s	build/Makefile	/^src\/tutorial18.cpp.s:$/;"	t
src/tutorial18.i	build/Makefile	/^src\/tutorial18.i: src\/tutorial18.cpp.i$/;"	t
src/tutorial18.o	build/Makefile	/^src\/tutorial18.o: src\/tutorial18.cpp.o$/;"	t
src/tutorial18.s	build/Makefile	/^src\/tutorial18.s: src\/tutorial18.cpp.s$/;"	t
src/utilities.cpp.i	build/Makefile	/^src\/utilities.cpp.i:$/;"	t
src/utilities.cpp.o	build/Makefile	/^src\/utilities.cpp.o:$/;"	t
src/utilities.cpp.s	build/Makefile	/^src\/utilities.cpp.s:$/;"	t
src/utilities.i	build/Makefile	/^src\/utilities.i: src\/utilities.cpp.i$/;"	t
src/utilities.o	build/Makefile	/^src\/utilities.o: src\/utilities.cpp.o$/;"	t
src/utilities.s	build/Makefile	/^src\/utilities.s: src\/utilities.cpp.s$/;"	t
sse_abs_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_abs_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_add_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_add_ps(__m128 const in1[4], __m128 const in2[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_ceil_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_ceil_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_clp_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_clp_ps(__m128 v, __m128 minVal, __m128 maxVal)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_comp_mul_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER matType sse_comp_mul_ps$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER matType
sse_det_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_det_ps$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_detd_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_detd_ps$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_dot_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_dot_ps(__m128 v1, __m128 v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_dot_ss	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_dot_ss(__m128 v1, __m128 v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_dst_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_dst_ps(__m128 p0, __m128 p1)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_ffd_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_ffd_ps(__m128 N, __m128 I, __m128 Nref)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_flr_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_flr_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_frc_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_frc_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_inverse_fast_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_inverse_fast_ps(__m128 const in[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_inverse_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_inverse_ps(__m128 const in[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_len_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_len_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mix_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mix_ps(__m128 v1, __m128 v2, __m128 a)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mod_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mod_ps(__m128 x, __m128 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mul_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mul_ps(__m128 const m[4], __m128 v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mul_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mul_ps(__m128 v, __m128 const m[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mul_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_mul_ps(__m128 const in1[4], __m128 const in2[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_nrm_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_nrm_ps(__m128 v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_outer_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_outer_ps(__m128 const & c, __m128 const & r, __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_rde_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rde_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_rfa_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rfa_ps(__m128 I, __m128 N, __m128 eta)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_rfe_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rfe_ps(__m128 I, __m128 N)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_rnd_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rnd_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_sgn_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_sgn_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_slow_det_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_slow_det_ps(__m128 const in[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_sqrt_wip_ss	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_sqrt_wip_ss(__m128 const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_ssp_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_ssp_ps(__m128 edge0, __m128 edge1, __m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_stp_ps	include/glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_stp_ps(__m128 edge, __m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_sub_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_sub_ps(__m128 const in1[4], __m128 const in2[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_transpose_ps	include/glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_transpose_ps(__m128 const in[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_xpd_ps	include/glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_xpd_ps(__m128 v1, __m128 v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
state_	include/glm/gtx/io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:state_type &
state_saver	include/glm/gtx/io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<char>
state_type	include/glm/gtx/io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::basic_ios<CTy,CTr>
step	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType step(genType edge, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
step	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> step(T edge, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
step	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> step(vecType<T, P> const & edge, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
step	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD step$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
streamsize_type	include/glm/gtx/io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::streamsize
string_cleanup	src/lodepng.cpp	/^static void string_cleanup(char** out)$/;"	f	typeref:typename:void	file:
string_init	src/lodepng.cpp	/^static void string_init(char** out)$/;"	f	typeref:typename:void	file:
string_resize	src/lodepng.cpp	/^static unsigned string_resize(char** out, size_t size)$/;"	f	typeref:typename:unsigned	file:
string_set	src/lodepng.cpp	/^static void string_set(char** out, const char* in)$/;"	f	typeref:typename:void	file:
swizzle	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD fvec4SIMD::swizzle() const$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
swizzle	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::swizzle()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
t	include/glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon622abe50010a::__anon622abe500408	typeref:typename:T
t	include/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon622abe50060a	typeref:typename:T
t	include/glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10408	typeref:typename:T
t	include/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon623cd6d1060a	typeref:typename:T
t	include/glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520408	typeref:typename:T
t	include/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon624eef52060a	typeref:typename:T
tail	src/lodepng.cpp	/^  struct BPMNode* tail; \/*the next nodes in this chain (null if last)*\/$/;"	m	struct:BPMNode	typeref:struct:BPMNode *	file:
tan	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> tan(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
tanh	include/glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> tanh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
taylorInvSqrt	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
taylorInvSqrt	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> taylorInvSqrt(tvec2<T, P> const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
taylorInvSqrt	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> taylorInvSqrt(tvec3<T, P> const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
taylorInvSqrt	include/glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> taylorInvSqrt(tvec4<T, P> const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
tdualquat	include/glm/detail/glm.cpp	/^template struct tdualquat<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	include/glm/detail/glm.cpp	/^template struct tdualquat<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	include/glm/detail/glm.cpp	/^template struct tdualquat<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	include/glm/detail/glm.cpp	/^template struct tdualquat<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	include/glm/detail/glm.cpp	/^template struct tdualquat<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	include/glm/detail/glm.cpp	/^template struct tdualquat<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tdualquat	include/glm/gtx/dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat()$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(ctor)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tdualquat<T, P> const & d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tdualquat<T, Q> const & d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tdualquat<U, Q> const & q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tmat2x4<T, P> const & m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tmat3x4<T, P> const & m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tquat<T, P> const & q, tvec3<T, P> const& p)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tquat<T, P> const & r)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	include/glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tquat<T, P> const & r, tquat<T, P> const & d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
text_compression	include/lodepng.h	/^  unsigned text_compression;$/;"	m	struct:LodePNGEncoderSettings	typeref:typename:unsigned
text_keys	include/lodepng.h	/^  char** text_keys; \/*the keyword of a text chunk (e.g. "Comment")*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
text_num	include/lodepng.h	/^  size_t text_num; \/*the amount of texts in these char** buffers (there may be more texts in it/;"	m	struct:LodePNGInfo	typeref:typename:size_t
text_strings	include/lodepng.h	/^  char** text_strings; \/*the actual text*\/$/;"	m	struct:LodePNGInfo	typeref:typename:char **
textureID	include/texture.h	/^        GLuint textureID; \/\/handle to the texture data buffer on the GPU$/;"	m	class:Texture	typeref:typename:GLuint
textureTarget	include/texture.h	/^        GLenum textureTarget; \/\/1d, 2d, 3d, etc$/;"	m	class:Texture	typeref:typename:GLenum
third	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType third()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
three	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED three = _mm_set_ps1(3.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
three_over_two_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType three_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
time	include/lodepng.h	/^  LodePNGTime time;$/;"	m	struct:LodePNGInfo	typeref:typename:LodePNGTime
time_defined	include/lodepng.h	/^  unsigned time_defined; \/*set to 1 to make the encoder generate a tIME chunk*\/$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned
tmat2x2	include/glm/detail/glm.cpp	/^template struct tmat2x2<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x2	include/glm/detail/glm.cpp	/^template struct tmat2x2<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x2	include/glm/detail/glm.cpp	/^template struct tmat2x2<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x2	include/glm/detail/glm.cpp	/^template struct tmat2x2<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x2	include/glm/detail/glm.cpp	/^template struct tmat2x2<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x2	include/glm/detail/glm.cpp	/^template struct tmat2x2<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x2	include/glm/detail/type_mat2x2.hpp	/^	struct tmat2x2$/;"	s	namespace:glm
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2()$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(T const & s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(col_type const & v0, col_type const & v1)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(ctor)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x2<T, Q> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x2<U, Q> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	include/glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tvec2<V1, P> const & v1, tvec2<V2, P> const & v2)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/glm.cpp	/^template struct tmat2x3<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x3	include/glm/detail/glm.cpp	/^template struct tmat2x3<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x3	include/glm/detail/glm.cpp	/^template struct tmat2x3<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x3	include/glm/detail/glm.cpp	/^template struct tmat2x3<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x3	include/glm/detail/glm.cpp	/^template struct tmat2x3<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x3	include/glm/detail/glm.cpp	/^template struct tmat2x3<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x3	include/glm/detail/type_mat2x3.hpp	/^	struct tmat2x3$/;"	s	namespace:glm
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3()$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(T const & s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(col_type const & v0, col_type const & v1)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(ctor)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x3<T, Q> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x3<U, Q> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	include/glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tvec3<V1, P> const & v1, tvec3<V2, P> const & v2)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/glm.cpp	/^template struct tmat2x4<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x4	include/glm/detail/glm.cpp	/^template struct tmat2x4<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x4	include/glm/detail/glm.cpp	/^template struct tmat2x4<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x4	include/glm/detail/glm.cpp	/^template struct tmat2x4<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x4	include/glm/detail/glm.cpp	/^template struct tmat2x4<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x4	include/glm/detail/glm.cpp	/^template struct tmat2x4<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat2x4	include/glm/detail/type_mat2x4.hpp	/^	struct tmat2x4$/;"	s	namespace:glm
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4()$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(T const & s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(col_type const & v0, col_type const & v1)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(ctor)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x4<T, Q> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x4<U, Q> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	include/glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tvec4<V1, P> const & v1, tvec4<V2, P> const & v2)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/glm.cpp	/^template struct tmat3x2<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x2	include/glm/detail/glm.cpp	/^template struct tmat3x2<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x2	include/glm/detail/glm.cpp	/^template struct tmat3x2<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x2	include/glm/detail/glm.cpp	/^template struct tmat3x2<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x2	include/glm/detail/glm.cpp	/^template struct tmat3x2<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x2	include/glm/detail/glm.cpp	/^template struct tmat3x2<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x2	include/glm/detail/type_mat3x2.hpp	/^	struct tmat3x2$/;"	s	namespace:glm
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2()$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(T const & s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(ctor)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x2<T, Q> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x2<U, Q> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	include/glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/glm.cpp	/^template struct tmat3x3<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x3	include/glm/detail/glm.cpp	/^template struct tmat3x3<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x3	include/glm/detail/glm.cpp	/^template struct tmat3x3<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x3	include/glm/detail/glm.cpp	/^template struct tmat3x3<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x3	include/glm/detail/glm.cpp	/^template struct tmat3x3<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x3	include/glm/detail/glm.cpp	/^template struct tmat3x3<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x3	include/glm/detail/type_mat3x3.hpp	/^	struct tmat3x3$/;"	s	namespace:glm
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3()$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(T const & s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(ctor)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x3<T, Q> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x3<U, Q> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	include/glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/glm.cpp	/^template struct tmat3x4<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x4	include/glm/detail/glm.cpp	/^template struct tmat3x4<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x4	include/glm/detail/glm.cpp	/^template struct tmat3x4<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x4	include/glm/detail/glm.cpp	/^template struct tmat3x4<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x4	include/glm/detail/glm.cpp	/^template struct tmat3x4<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x4	include/glm/detail/glm.cpp	/^template struct tmat3x4<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat3x4	include/glm/detail/type_mat3x4.hpp	/^	struct tmat3x4$/;"	s	namespace:glm
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4()$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(T const & s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(ctor)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x4<T, Q> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x4<U, Q> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	include/glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/glm.cpp	/^template struct tmat4x2<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x2	include/glm/detail/glm.cpp	/^template struct tmat4x2<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x2	include/glm/detail/glm.cpp	/^template struct tmat4x2<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x2	include/glm/detail/glm.cpp	/^template struct tmat4x2<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x2	include/glm/detail/glm.cpp	/^template struct tmat4x2<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x2	include/glm/detail/glm.cpp	/^template struct tmat4x2<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x2	include/glm/detail/type_mat4x2.hpp	/^	struct tmat4x2$/;"	s	namespace:glm
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2()$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(T const & s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(ctor)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x2<T, Q> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x2<U, Q> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	include/glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/glm.cpp	/^template struct tmat4x3<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x3	include/glm/detail/glm.cpp	/^template struct tmat4x3<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x3	include/glm/detail/glm.cpp	/^template struct tmat4x3<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x3	include/glm/detail/glm.cpp	/^template struct tmat4x3<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x3	include/glm/detail/glm.cpp	/^template struct tmat4x3<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x3	include/glm/detail/glm.cpp	/^template struct tmat4x3<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x3	include/glm/detail/type_mat4x3.hpp	/^	struct tmat4x3$/;"	s	namespace:glm
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3()$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(T const & s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(ctor)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x3<T, Q> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x3<U, Q> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	include/glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/glm.cpp	/^template struct tmat4x4<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x4	include/glm/detail/glm.cpp	/^template struct tmat4x4<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x4	include/glm/detail/glm.cpp	/^template struct tmat4x4<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x4	include/glm/detail/glm.cpp	/^template struct tmat4x4<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x4	include/glm/detail/glm.cpp	/^template struct tmat4x4<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x4	include/glm/detail/glm.cpp	/^template struct tmat4x4<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tmat4x4	include/glm/detail/type_mat4x4.hpp	/^	struct tmat4x4$/;"	s	namespace:glm
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4()$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(T const & s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(ctor)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	include/glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x4<T, Q> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
toFloat16	include/glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER hdata toFloat16(float const & f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER hdata
toFloat32	include/glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float toFloat32(hdata value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
toMat3	include/glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tmat3x3<T, P> toMat3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL tmat3x3<T,P>
toMat4	include/glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tmat4x4<T, P> toMat4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL tmat4x4<T,P>
toQuat	include/glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tquat<T, P> toQuat($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL tquat<T,P>
to_string	include/glm/gtx/string_cast.inl	/^GLM_FUNC_DECL std::string to_string(matType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL std::string
tquat	include/glm/detail/glm.cpp	/^template struct tquat<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tquat	include/glm/detail/glm.cpp	/^template struct tquat<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tquat	include/glm/detail/glm.cpp	/^template struct tquat<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tquat	include/glm/detail/glm.cpp	/^template struct tquat<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tquat	include/glm/detail/glm.cpp	/^template struct tquat<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tquat	include/glm/detail/glm.cpp	/^template struct tquat<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tquat	include/glm/gtc/quaternion.hpp	/^	struct tquat$/;"	s	namespace:glm
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat()$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(T const & s, tvec3<T, P> const & v)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(T const & w, T const & x, T const & y, T const & z)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(ctor)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tmat3x3<T, P> const & m)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tmat4x4<T, P> const & m)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tquat<T, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tquat<T, Q> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tquat<U, Q> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tvec3<T, P> const & eulerAngle)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tvec3<T, P> const & u, tvec3<T, P> const & v)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
translate	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> translate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
translate	include/glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> translate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
translate	include/glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> translate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
transpose	include/glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename matType<T, P>::transpose_type transpose(matType<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename matType<T,P>::transpose_type
transpose	include/glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD transpose(detail::fmat4x4SIMD const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
transpose_type	include/glm/detail/type_mat2x2.hpp	/^		typedef tmat2x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tmat2x2<T,P>
transpose_type	include/glm/detail/type_mat2x3.hpp	/^		typedef tmat3x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tmat3x2<T,P>
transpose_type	include/glm/detail/type_mat2x4.hpp	/^		typedef tmat4x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tmat4x2<T,P>
transpose_type	include/glm/detail/type_mat3x2.hpp	/^		typedef tmat2x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tmat2x3<T,P>
transpose_type	include/glm/detail/type_mat3x3.hpp	/^		typedef tmat3x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tmat3x3<T,P>
transpose_type	include/glm/detail/type_mat3x4.hpp	/^		typedef tmat4x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tmat4x3<T,P>
transpose_type	include/glm/detail/type_mat4x2.hpp	/^		typedef tmat2x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tmat2x4<T,P>
transpose_type	include/glm/detail/type_mat4x3.hpp	/^		typedef tmat3x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tmat3x4<T,P>
transpose_type	include/glm/detail/type_mat4x4.hpp	/^		typedef tmat4x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tmat4x4<T,P>
transpose_type	include/glm/gtx/simd_mat4.hpp	/^		typedef fmat4x4SIMD transpose_type;$/;"	t	namespace:glm::detail	typeref:typename:fmat4x4SIMD
tree1d	src/lodepng.cpp	/^  unsigned* tree1d;$/;"	m	struct:HuffmanTree	typeref:typename:unsigned *	file:
tree2d	src/lodepng.cpp	/^  unsigned* tree2d;$/;"	m	struct:HuffmanTree	typeref:typename:unsigned *	file:
triangleNormal	include/glm/gtx/normal.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> triangleNormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
trunc	include/glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType trunc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
trunc	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> trunc(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
trunc	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD trunc$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/glm.cpp	/^template struct tvec1<uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec1	include/glm/detail/type_vec1.hpp	/^			GLM_FUNC_DECL tvec1(detail::_swizzle<1, T, P, tvec1<T, P>, E0, -1,-2,-3> const & that)$/;"	f	struct:glm::tvec1	typeref:typename:GLM_FUNC_DECL
tvec1	include/glm/detail/type_vec1.hpp	/^	struct tvec1$/;"	s	namespace:glm
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER  tvec1<T, P>::tvec1(T const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1()$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(ctor)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec1<T, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec1<T, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec1<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec2<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec3<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	include/glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec4<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/glm.cpp	/^template struct tvec2<uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec2	include/glm/detail/type_vec2.hpp	/^			GLM_FUNC_DECL tvec2(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1,-1,-2> const & that)$/;"	f	struct:glm::tvec2	typeref:typename:GLM_FUNC_DECL
tvec2	include/glm/detail/type_vec2.hpp	/^	struct tvec2$/;"	s	namespace:glm
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2()$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(A const & a, B const & b)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(T const & s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(T const & s1, T const & s2)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(ctor)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec1<A, P> const & a, tvec1<B, P> const & b)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec2<T, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec2<T, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec2<U, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec3<U, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	include/glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec4<U, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/glm.cpp	/^template struct tvec3<uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec3	include/glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(T const & s, detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const/;"	f	struct:glm::tvec3	typeref:typename:GLM_FUNC_DECL
tvec3	include/glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const & v, T const/;"	f	struct:glm::tvec3	typeref:typename:GLM_FUNC_DECL
tvec3	include/glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<3, T, P, tvec3<T, P>, E0, E1, E2, -1> const & that)$/;"	f	struct:glm::tvec3	typeref:typename:GLM_FUNC_DECL
tvec3	include/glm/detail/type_vec3.hpp	/^	struct tvec3$/;"	s	namespace:glm
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3()$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(A const & a, B const & b, C const & c) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(A const & a, tvec2<B, Q> const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(T const & a, T const & b, T const & c)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(T const & s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(ctor)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec1<A, P> const & a, tvec1<B, P> const & b, tvec1<C, P>/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec1<A, Q> const & a, tvec2<B, Q> const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec2<A, Q> const & a, B const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec2<A, Q> const & a, tvec1<B, Q> const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec3<T, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec3<T, Q> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec3<U, Q> const & v) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	include/glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec4<U, Q> const & v) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<float32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<float32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<float32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<float64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<float64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<float64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<int8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint16, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint16, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint16, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint32, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint32, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint32, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint64, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint64, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint64, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint8, highp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint8, lowp>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/glm.cpp	/^template struct tvec4<uint8, mediump>;$/;"	v	namespace:glm	typeref:typename:struct
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, T const & y, detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, /;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<3, T, P, tvec3<T, P>, E0, E1, E2, -1> const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const & v, T const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const & v, detail:/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<3, T, P, tvec3<T, P>, E0, E1, E2, -1> const & v, T const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<4, T, P, tvec4<T, P>, E0, E1, E2, E3> const & that)$/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	include/glm/detail/type_vec4.hpp	/^	struct tvec4$/;"	s	namespace:glm
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A a, B b, C c, D d) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A a, tvec3<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A s1, B s2, tvec2<C, Q> const & v) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A s1, tvec2<B, Q> const & v, C s2) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(T a, T b, T c, T d)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(T s)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(ctor)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, P> const & a, tvec1<B, P> const & b, tvec1<C, P>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, Q> const & a, tvec1<B, Q> const & b, tvec2<C, Q>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, Q> const & a, tvec2<B, Q> const & b, tvec1<C, Q>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, Q> const & a, tvec3<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec2<A, Q> const & a, B b, C c) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec2<A, Q> const & a, tvec1<B, Q> const & b, tvec1<C, Q>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec2<A, Q> const & a, tvec2<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec3<A, Q> const & a, B b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec3<A, Q> const & a, tvec1<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec4<T, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec4<T, Q> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec4<U, Q> const & v) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp>::tvec4()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp>::tvec4(float a, float b, float c, float d) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp>::tvec4(float s) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump>::tvec4()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump>::tvec4(float a, float b, float c, float d) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	include/glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump>::tvec4(float s) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tweakedInfinitePerspective	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> tweakedInfinitePerspective$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
two	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED two = _mm_set_ps1(2.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
two_over_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
two_over_root_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_over_root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
two_pi	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
two_thirds	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_thirds()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat2x2<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat2x3<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat2x4<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat3x2<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat3x3<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat3x4<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat4x2<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat4x3<T,P>
type	include/glm/detail/func_matrix.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat4x4<T,P>
type	include/glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> type;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE>
type	include/glm/detail/type_int.hpp	/^			typedef char type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:char
type	include/glm/detail/type_int.hpp	/^			typedef int type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:int
type	include/glm/detail/type_int.hpp	/^			typedef long long type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:long long
type	include/glm/detail/type_int.hpp	/^			typedef long type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:long
type	include/glm/detail/type_int.hpp	/^			typedef short type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:short
type	include/glm/detail/type_int.hpp	/^			typedef unsigned char type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned char
type	include/glm/detail/type_int.hpp	/^			typedef unsigned int type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned int
type	include/glm/detail/type_int.hpp	/^			typedef unsigned long long type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned long long
type	include/glm/detail/type_int.hpp	/^			typedef unsigned long type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned long
type	include/glm/detail/type_int.hpp	/^			typedef unsigned short type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned short
type	include/glm/detail/type_mat2x2.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tmat2x2<T,P>
type	include/glm/detail/type_mat2x3.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tmat2x3<T,P>
type	include/glm/detail/type_mat2x4.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tmat2x4<T,P>
type	include/glm/detail/type_mat3x2.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tmat3x2<T,P>
type	include/glm/detail/type_mat3x3.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tmat3x3<T,P>
type	include/glm/detail/type_mat3x4.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tmat3x4<T,P>
type	include/glm/detail/type_mat4x2.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tmat4x2<T,P>
type	include/glm/detail/type_mat4x3.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tmat4x3<T,P>
type	include/glm/detail/type_mat4x4.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tmat4x4<T,P>
type	include/glm/detail/type_vec1.hpp	/^		typedef tvec1<T, P> type;$/;"	t	struct:glm::tvec1	typeref:typename:tvec1<T,P>
type	include/glm/detail/type_vec2.hpp	/^		typedef tvec2<T, P> type;$/;"	t	struct:glm::tvec2	typeref:typename:tvec2<T,P>
type	include/glm/detail/type_vec3.hpp	/^		typedef tvec3<T, P> type;$/;"	t	struct:glm::tvec3	typeref:typename:tvec3<T,P>
type	include/glm/detail/type_vec4.hpp	/^			typedef __m128 type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m128
type	include/glm/detail/type_vec4.hpp	/^			typedef __m128i type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m128i
type	include/glm/detail/type_vec4.hpp	/^			typedef __m256d type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m256d
type	include/glm/detail/type_vec4.hpp	/^			typedef __m256i type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m256i
type	include/glm/detail/type_vec4.hpp	/^		typedef T type[4];$/;"	t	struct:glm::detail::simd	typeref:typename:T[4]
type	include/glm/detail/type_vec4.hpp	/^		typedef tvec4<T, P> type;$/;"	t	struct:glm::tvec4	typeref:typename:tvec4<T,P>
type	include/glm/gtc/quaternion.hpp	/^		typedef tquat<T, P> type;$/;"	t	struct:glm::tquat	typeref:typename:tquat<T,P>
type	include/glm/gtx/simd_mat4.hpp	/^		typedef fmat4x4SIMD type;$/;"	t	namespace:glm::detail	typeref:typename:fmat4x4SIMD
type	include/glm/gtx/simd_quat.hpp	/^		typedef fquatSIMD type;$/;"	t	namespace:glm::detail	typeref:typename:fquatSIMD
type	include/glm/gtx/simd_vec4.hpp	/^		typedef fvec4SIMD type;$/;"	t	namespace:glm::detail	typeref:typename:fvec4SIMD
u	include/glm/gtc/bitfield.inl	/^			uint16 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint16	file:
u	include/glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint32	file:
u	include/glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:uint32	file:
u	include/glm/gtc/bitfield.inl	/^			uint64 u;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:uint64	file:
u	include/glm/gtc/bitfield.inl	/^			uint8 u;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:uint8	file:
u10u10u10u2	include/glm/gtc/packing.inl	/^	union u10u10u10u2$/;"	u	namespace:glm::detail	file:
u16	include/glm/fwd.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
u16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
u16vec1	include/glm/fwd.hpp	/^	typedef highp_u16vec1			u16vec1;$/;"	t	namespace:glm	typeref:typename:highp_u16vec1
u16vec1	include/glm/fwd.hpp	/^	typedef lowp_u16vec1			u16vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec1
u16vec1	include/glm/fwd.hpp	/^	typedef mediump_u16vec1			u16vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec1
u16vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<u16, defaultp> u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,defaultp>
u16vec1	include/glm/gtx/number_precision.hpp	/^	typedef u16			u16vec1;    \/\/!< \\brief 16bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u16
u16vec2	include/glm/fwd.hpp	/^	typedef highp_u16vec2			u16vec2;$/;"	t	namespace:glm	typeref:typename:highp_u16vec2
u16vec2	include/glm/fwd.hpp	/^	typedef lowp_u16vec2			u16vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec2
u16vec2	include/glm/fwd.hpp	/^	typedef mediump_u16vec2			u16vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec2
u16vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<u16, defaultp> u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,defaultp>
u16vec3	include/glm/fwd.hpp	/^	typedef highp_u16vec3			u16vec3;$/;"	t	namespace:glm	typeref:typename:highp_u16vec3
u16vec3	include/glm/fwd.hpp	/^	typedef lowp_u16vec3			u16vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec3
u16vec3	include/glm/fwd.hpp	/^	typedef mediump_u16vec3			u16vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec3
u16vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<u16, defaultp> u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,defaultp>
u16vec4	include/glm/fwd.hpp	/^	typedef highp_u16vec4			u16vec4;$/;"	t	namespace:glm	typeref:typename:highp_u16vec4
u16vec4	include/glm/fwd.hpp	/^	typedef lowp_u16vec4			u16vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec4
u16vec4	include/glm/fwd.hpp	/^	typedef mediump_u16vec4			u16vec4;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec4
u16vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<u16, defaultp> u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,defaultp>
u32	include/glm/fwd.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
u32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
u32vec1	include/glm/fwd.hpp	/^	typedef highp_u32vec1			u32vec1;$/;"	t	namespace:glm	typeref:typename:highp_u32vec1
u32vec1	include/glm/fwd.hpp	/^	typedef lowp_u32vec1			u32vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec1
u32vec1	include/glm/fwd.hpp	/^	typedef mediump_u32vec1			u32vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec1
u32vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<u32, defaultp> u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,defaultp>
u32vec1	include/glm/gtx/number_precision.hpp	/^	typedef u32			u32vec1;    \/\/!< \\brief 32bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u32
u32vec2	include/glm/fwd.hpp	/^	typedef highp_u32vec2			u32vec2;$/;"	t	namespace:glm	typeref:typename:highp_u32vec2
u32vec2	include/glm/fwd.hpp	/^	typedef lowp_u32vec2			u32vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec2
u32vec2	include/glm/fwd.hpp	/^	typedef mediump_u32vec2			u32vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec2
u32vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<u32, defaultp> u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,defaultp>
u32vec3	include/glm/fwd.hpp	/^	typedef highp_u32vec3			u32vec3;$/;"	t	namespace:glm	typeref:typename:highp_u32vec3
u32vec3	include/glm/fwd.hpp	/^	typedef lowp_u32vec3			u32vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec3
u32vec3	include/glm/fwd.hpp	/^	typedef mediump_u32vec3			u32vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec3
u32vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<u32, defaultp> u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,defaultp>
u32vec4	include/glm/fwd.hpp	/^	typedef highp_u32vec4			u32vec4;$/;"	t	namespace:glm	typeref:typename:highp_u32vec4
u32vec4	include/glm/fwd.hpp	/^	typedef lowp_u32vec4			u32vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec4
u32vec4	include/glm/fwd.hpp	/^	typedef mediump_u32vec4			u32vec4;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec4
u32vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<u32, defaultp> u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,defaultp>
u64	include/glm/fwd.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
u64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
u64vec1	include/glm/fwd.hpp	/^	typedef highp_u64vec1			u64vec1;$/;"	t	namespace:glm	typeref:typename:highp_u64vec1
u64vec1	include/glm/fwd.hpp	/^	typedef lowp_u64vec1			u64vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec1
u64vec1	include/glm/fwd.hpp	/^	typedef mediump_u64vec1			u64vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec1
u64vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<u64, defaultp> u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,defaultp>
u64vec1	include/glm/gtx/number_precision.hpp	/^	typedef u64			u64vec1;    \/\/!< \\brief 64bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u64
u64vec2	include/glm/fwd.hpp	/^	typedef highp_u64vec2			u64vec2;$/;"	t	namespace:glm	typeref:typename:highp_u64vec2
u64vec2	include/glm/fwd.hpp	/^	typedef lowp_u64vec2			u64vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec2
u64vec2	include/glm/fwd.hpp	/^	typedef mediump_u64vec2			u64vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec2
u64vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<u64, defaultp> u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,defaultp>
u64vec3	include/glm/fwd.hpp	/^	typedef highp_u64vec3			u64vec3;$/;"	t	namespace:glm	typeref:typename:highp_u64vec3
u64vec3	include/glm/fwd.hpp	/^	typedef lowp_u64vec3			u64vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec3
u64vec3	include/glm/fwd.hpp	/^	typedef mediump_u64vec3			u64vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec3
u64vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<u64, defaultp> u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,defaultp>
u64vec4	include/glm/fwd.hpp	/^	typedef highp_u64vec4			u64vec4;$/;"	t	namespace:glm	typeref:typename:highp_u64vec4
u64vec4	include/glm/fwd.hpp	/^	typedef lowp_u64vec4			u64vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec4
u64vec4	include/glm/fwd.hpp	/^	typedef mediump_u64vec4			u64vec4;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec4
u64vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<u64, defaultp> u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,defaultp>
u8	include/glm/fwd.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
u8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
u8vec1	include/glm/fwd.hpp	/^	typedef highp_u8vec1			u8vec1;$/;"	t	namespace:glm	typeref:typename:highp_u8vec1
u8vec1	include/glm/fwd.hpp	/^	typedef lowp_u8vec1				u8vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec1
u8vec1	include/glm/fwd.hpp	/^	typedef mediump_u8vec1			u8vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u8vec1
u8vec1	include/glm/gtc/type_precision.hpp	/^	typedef tvec1<u8, defaultp> u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,defaultp>
u8vec1	include/glm/gtx/number_precision.hpp	/^	typedef u8			u8vec1;		\/\/!< \\brief 8bit unsigned integer scalar. (from GLM_GTX_number_precisi/;"	t	namespace:glm::gtx	typeref:typename:u8
u8vec2	include/glm/fwd.hpp	/^	typedef highp_u8vec2			u8vec2;$/;"	t	namespace:glm	typeref:typename:highp_u8vec2
u8vec2	include/glm/fwd.hpp	/^	typedef lowp_u8vec2				u8vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec2
u8vec2	include/glm/fwd.hpp	/^	typedef mediump_u8vec2			u8vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u8vec2
u8vec2	include/glm/gtc/type_precision.hpp	/^	typedef tvec2<u8, defaultp> u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,defaultp>
u8vec3	include/glm/fwd.hpp	/^	typedef highp_u8vec3			u8vec3;$/;"	t	namespace:glm	typeref:typename:highp_u8vec3
u8vec3	include/glm/fwd.hpp	/^	typedef lowp_u8vec3				u8vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec3
u8vec3	include/glm/fwd.hpp	/^	typedef mediump_u8vec3			u8vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u8vec3
u8vec3	include/glm/gtc/type_precision.hpp	/^	typedef tvec3<u8, defaultp> u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,defaultp>
u8vec4	include/glm/fwd.hpp	/^	typedef highp_u8vec4			u8vec4;$/;"	t	namespace:glm	typeref:typename:highp_u8vec4
u8vec4	include/glm/fwd.hpp	/^	typedef lowp_u8vec4				u8vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec4
u8vec4	include/glm/fwd.hpp	/^	typedef mediump_u8vec4			u8vec4;	$/;"	t	namespace:glm	typeref:typename:mediump_u8vec4
u8vec4	include/glm/gtc/type_precision.hpp	/^	typedef tvec4<u8, defaultp> u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,defaultp>
uaddCarry	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint uaddCarry(uint const & x, uint const & y, uint & Carry)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
uaddCarry	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> uaddCarry(vecType<uint, P> const & x, vecType<uint, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
ucvector	src/lodepng.cpp	/^typedef struct ucvector$/;"	s	file:
ucvector	src/lodepng.cpp	/^} ucvector;$/;"	t	typeref:struct:ucvector	file:
ucvector_cleanup	src/lodepng.cpp	/^static void ucvector_cleanup(void* p)$/;"	f	typeref:typename:void	file:
ucvector_init	src/lodepng.cpp	/^static void ucvector_init(ucvector* p)$/;"	f	typeref:typename:void	file:
ucvector_init_buffer	src/lodepng.cpp	/^static void ucvector_init_buffer(ucvector* p, unsigned char* buffer, size_t size)$/;"	f	typeref:typename:void	file:
ucvector_push_back	src/lodepng.cpp	/^static unsigned ucvector_push_back(ucvector* p, unsigned char c)$/;"	f	typeref:typename:unsigned	file:
ucvector_reserve	src/lodepng.cpp	/^static unsigned ucvector_reserve(ucvector* p, size_t allocsize)$/;"	f	typeref:typename:unsigned	file:
ucvector_resize	src/lodepng.cpp	/^static unsigned ucvector_resize(ucvector* p, size_t size)$/;"	f	typeref:typename:unsigned	file:
uif32	include/glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32() :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	include/glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(float f) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	include/glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(uint32 i) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	include/glm/detail/type_half.inl	/^	union uif32$/;"	u	namespace:glm::detail	file:
uint	include/glm/detail/type_int.hpp	/^	typedef unsigned int				uint;$/;"	t	namespace:glm	typeref:typename:unsigned int
uint16	include/glm/detail/type_int.hpp	/^		typedef std::uint16_t				uint16;$/;"	t	namespace:glm::detail	typeref:typename:std::uint16_t
uint16	include/glm/detail/type_int.hpp	/^	typedef detail::uint16					uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16	include/glm/fwd.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16_t	include/glm/fwd.hpp	/^	typedef detail::uint16 uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint32	include/glm/detail/type_int.hpp	/^		typedef std::uint32_t				uint32;$/;"	t	namespace:glm::detail	typeref:typename:std::uint32_t
uint32	include/glm/detail/type_int.hpp	/^	typedef detail::uint32					uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32	include/glm/fwd.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32_t	include/glm/fwd.hpp	/^	typedef detail::uint32 uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint64	include/glm/detail/type_int.hpp	/^		typedef std::uint64_t				uint64;$/;"	t	namespace:glm::detail	typeref:typename:std::uint64_t
uint64	include/glm/detail/type_int.hpp	/^	typedef detail::uint64					uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64	include/glm/fwd.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64_t	include/GL/glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	include/GL/glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	include/GL/glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
uint64_t	include/glm/fwd.hpp	/^	typedef detail::uint64 uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint8	include/glm/detail/type_int.hpp	/^		typedef std::uint8_t				uint8;$/;"	t	namespace:glm::detail	typeref:typename:std::uint8_t
uint8	include/glm/detail/type_int.hpp	/^	typedef detail::uint8					uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8	include/glm/fwd.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8_t	include/glm/fwd.hpp	/^	typedef detail::uint8 uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8_t	include/glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uintBitsToFloat	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float uintBitsToFloat(uint const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
uintBitsToFloat	include/glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<float, P> uintBitsToFloat(vecType<uint, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,P>
uint_t	include/glm/detail/type_int.hpp	/^	typedef highp_uint					uint_t;$/;"	t	namespace:glm	typeref:typename:highp_uint
uint_t	include/glm/detail/type_int.hpp	/^	typedef lowp_uint					uint_t;$/;"	t	namespace:glm	typeref:typename:lowp_uint
uint_t	include/glm/detail/type_int.hpp	/^	typedef mediump_uint				uint_t;$/;"	t	namespace:glm	typeref:typename:mediump_uint
uivector	src/lodepng.cpp	/^typedef struct uivector$/;"	s	file:
uivector	src/lodepng.cpp	/^} uivector;$/;"	t	typeref:struct:uivector	file:
uivector_cleanup	src/lodepng.cpp	/^static void uivector_cleanup(void* p)$/;"	f	typeref:typename:void	file:
uivector_init	src/lodepng.cpp	/^static void uivector_init(uivector* p)$/;"	f	typeref:typename:void	file:
uivector_push_back	src/lodepng.cpp	/^static unsigned uivector_push_back(uivector* p, unsigned c)$/;"	f	typeref:typename:unsigned	file:
uivector_reserve	src/lodepng.cpp	/^static unsigned uivector_reserve(uivector* p, size_t allocsize)$/;"	f	typeref:typename:unsigned	file:
uivector_resize	src/lodepng.cpp	/^static unsigned uivector_resize(uivector* p, size_t size)$/;"	f	typeref:typename:unsigned	file:
uivector_resizev	src/lodepng.cpp	/^static unsigned uivector_resizev(uivector* p, size_t size, unsigned value)$/;"	f	typeref:typename:unsigned	file:
umat2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2								umat2;$/;"	t	namespace:glm	typeref:typename:highp_umat2
umat2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2								umat2;$/;"	t	namespace:glm	typeref:typename:lowp_umat2
umat2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2							umat2;$/;"	t	namespace:glm	typeref:typename:mediump_umat2
umat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:highp_umat2x2
umat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x2
umat2x2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x2
umat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:highp_umat2x3
umat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x3
umat2x3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x3
umat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:highp_umat2x4
umat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x4
umat2x4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x4
umat3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3								umat3;$/;"	t	namespace:glm	typeref:typename:highp_umat3
umat3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3								umat3;$/;"	t	namespace:glm	typeref:typename:lowp_umat3
umat3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3							umat3;$/;"	t	namespace:glm	typeref:typename:mediump_umat3
umat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:highp_umat3x2
umat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x2
umat3x2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x2
umat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:highp_umat3x3
umat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x3
umat3x3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x3
umat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:highp_umat3x4
umat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x4
umat3x4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x4
umat4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4								umat4;$/;"	t	namespace:glm	typeref:typename:highp_umat4
umat4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4								umat4;$/;"	t	namespace:glm	typeref:typename:lowp_umat4
umat4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4							umat4;$/;"	t	namespace:glm	typeref:typename:mediump_umat4
umat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:highp_umat4x2
umat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x2
umat4x2	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x2
umat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:highp_umat4x3
umat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x3
umat4x3	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x3
umat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:highp_umat4x4
umat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x4
umat4x4	include/glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x4
umulExtended	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(uint const & x, uint const & y, uint & msb, uint & lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
umulExtended	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(vecType<uint, P> const & x, vecType<uint, P> const & y, ve/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
unProject	include/glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> unProject$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
unbind	src/materials/material.cpp	/^void Material::unbind()$/;"	f	class:Material	typeref:typename:void
unfilter	src/lodepng.cpp	/^static unsigned unfilter(unsigned char* out, const unsigned char* in, unsigned w, unsigned h, un/;"	f	typeref:typename:unsigned	file:
unfilterScanline	src/lodepng.cpp	/^static unsigned unfilterScanline(unsigned char* recon, const unsigned char* scanline, const unsi/;"	f	typeref:typename:unsigned	file:
unformatted	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr>& unformatted(std::basic_ios<CTy,CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
uniformAttributes	include/materials/material.h	/^        std::unordered_map<std::string, GLint> uniformAttributes;$/;"	m	class:Material	typeref:typename:std::unordered_map<std::string,GLint>
uninitialize	include/glm/detail/setup.hpp	/^	enum ctor{uninitialize};$/;"	e	enum:glm::ctor
unknown_chunks_data	include/lodepng.h	/^  unsigned char* unknown_chunks_data[3];$/;"	m	struct:LodePNGInfo	typeref:typename:unsigned char * [3]
unknown_chunks_size	include/lodepng.h	/^  size_t unknown_chunks_size[3]; \/*size in bytes of the unknown chunks, given for protection*\/$/;"	m	struct:LodePNGInfo	typeref:typename:size_t[3]
unpackDouble2x32	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uvec2 unpackDouble2x32(double v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec2
unpackF2x11_1x10	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackF2x11_1x10(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackHalf1x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackHalf1x16(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackHalf2x16	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackHalf2x16(uint v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackHalf4x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackHalf4x16(uint64 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackI3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER ivec4 unpackI3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER ivec4
unpackSnorm1x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm1x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm2x16	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm2x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x8	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackSnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackU3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uvec4 unpackU3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec4
unpackUnorm1x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm1x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm2x16	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm2x8	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm3x10_1x2	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x16	include/glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x8	include/glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
update	src/camera.cpp	/^void Camera::update(const Controls& input)$/;"	f	class:Camera	typeref:typename:void
update	src/controls.cpp	/^void Controls::update()$/;"	f	class:Controls	typeref:typename:void
updateCameraRotationAngles	src/camera.cpp	/^void Camera::updateCameraRotationAngles(const std::pair<int, int>& mouseDelta)$/;"	f	class:Camera	typeref:typename:void
updateHashChain	src/lodepng.cpp	/^static void updateHashChain(Hash* hash, size_t wpos, unsigned hashval, unsigned short numzeros)$/;"	f	typeref:typename:void	file:
update_adler32	src/lodepng.cpp	/^static unsigned update_adler32(unsigned adler, const unsigned char* data, unsigned len)$/;"	f	typeref:typename:unsigned	file:
use_lz77	include/lodepng.h	/^  unsigned use_lz77; \/*whether or not to use LZ77. Should be 1 for proper compression.*\/$/;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
usubBorrow	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint usubBorrow(uint const & x, uint const & y, uint & Borrow)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
usubBorrow	include/glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> usubBorrow(vecType<uint, P> const & x, vecType<uint, P> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
uvCoords	src/tutorial18.cpp	/^    glm::vec2 uvCoords;$/;"	m	struct:Vertex	typeref:typename:glm::vec2	file:
uvec1	include/glm/gtc/vec1.hpp	/^	typedef highp_uvec1			uvec1;$/;"	t	namespace:glm	typeref:typename:highp_uvec1
uvec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_uvec1			uvec1;$/;"	t	namespace:glm	typeref:typename:lowp_uvec1
uvec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_uvec1		uvec1;$/;"	t	namespace:glm	typeref:typename:mediump_uvec1
uvec2	include/glm/detail/type_vec.hpp	/^	typedef highp_uvec2			uvec2;$/;"	t	namespace:glm	typeref:typename:highp_uvec2
uvec2	include/glm/detail/type_vec.hpp	/^	typedef lowp_uvec2			uvec2;$/;"	t	namespace:glm	typeref:typename:lowp_uvec2
uvec2	include/glm/detail/type_vec.hpp	/^	typedef mediump_uvec2		uvec2;$/;"	t	namespace:glm	typeref:typename:mediump_uvec2
uvec3	include/glm/detail/type_vec.hpp	/^	typedef highp_uvec3			uvec3;$/;"	t	namespace:glm	typeref:typename:highp_uvec3
uvec3	include/glm/detail/type_vec.hpp	/^	typedef lowp_uvec3			uvec3;$/;"	t	namespace:glm	typeref:typename:lowp_uvec3
uvec3	include/glm/detail/type_vec.hpp	/^	typedef mediump_uvec3		uvec3;$/;"	t	namespace:glm	typeref:typename:mediump_uvec3
uvec4	include/glm/detail/type_vec.hpp	/^	typedef highp_uvec4			uvec4;$/;"	t	namespace:glm	typeref:typename:highp_uvec4
uvec4	include/glm/detail/type_vec.hpp	/^	typedef lowp_uvec4			uvec4;$/;"	t	namespace:glm	typeref:typename:lowp_uvec4
uvec4	include/glm/detail/type_vec.hpp	/^	typedef mediump_uvec4		uvec4;$/;"	t	namespace:glm	typeref:typename:mediump_uvec4
v3Scale	include/glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER void v3Scale(tvec3<T, P> & v, T desiredLength)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
val	src/lodepng.cpp	/^  int* val; \/*circular pos to hash value*\/$/;"	m	struct:Hash	typeref:typename:int *	file:
value	include/glm/detail/type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x2	typeref:typename:col_type[2]
value	include/glm/detail/type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x3	typeref:typename:col_type[2]
value	include/glm/detail/type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x4	typeref:typename:col_type[2]
value	include/glm/detail/type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x2	typeref:typename:col_type[3]
value	include/glm/detail/type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x3	typeref:typename:col_type[3]
value	include/glm/detail/type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x4	typeref:typename:col_type[3]
value	include/glm/detail/type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x2	typeref:typename:col_type[4]
value	include/glm/detail/type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x3	typeref:typename:col_type[4]
value	include/glm/detail/type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x4	typeref:typename:col_type[4]
value	include/glm/gtc/ulp.inl	/^	double value;$/;"	m	union:__anona4a85f36020a	typeref:typename:double	file:
value	include/glm/gtc/ulp.inl	/^	float value;$/;"	m	union:__anona4a85f36010a	typeref:typename:float	file:
value	include/glm/gtx/io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter	typeref:typename:CTy[3]
value	include/glm/gtx/io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order	typeref:typename:order_type
value	include/glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision	typeref:typename:unsigned
value	include/glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width	typeref:typename:unsigned
value	include/glm/gtx/simd_vec4.inl	/^	enum{value = Value};$/;"	e	enum:glm::detail::shuffle_mask::__anonbe760d780103	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%d";};$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%f";};$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%lld";};$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "b";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "d";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i16";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i64";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i8";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u16";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u64";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	include/glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u8";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value_address	include/glm/detail/type_gentype.hpp	/^		value_const_pointer value_address() const{return value_pointer(this);}$/;"	f	struct:glm::detail::genType	typeref:typename:value_const_pointer
value_address	include/glm/detail/type_gentype.hpp	/^		value_pointer value_address(){return value_pointer(this);}$/;"	f	struct:glm::detail::genType	typeref:typename:value_pointer
value_const_pointer	include/glm/detail/type_gentype.hpp	/^		typedef VALTYPE const * value_const_pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE const *
value_pointer	include/glm/detail/type_gentype.hpp	/^		typedef VALTYPE * value_pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE *
value_ptr	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T * value_ptr$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T * value_ptr(tmat4x3<T, P> & mat)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	include/glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const * value_ptr$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_reference	include/glm/detail/type_gentype.hpp	/^		typedef VALTYPE & value_reference;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE &
value_size	include/glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::size_type base<vT, cT, rT, pT>::value_size()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::size_type
value_type	include/glm/detail/_swizzle.hpp	/^		typedef T       value_type;$/;"	t	struct:glm::detail::_swizzle_base0	typeref:typename:T
value_type	include/glm/detail/_swizzle.hpp	/^		typedef ValueType       value_type;$/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:ValueType
value_type	include/glm/detail/_swizzle.hpp	/^		typedef ValueType value_type;$/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:ValueType
value_type	include/glm/detail/type_gentype.hpp	/^		typedef VALTYPE value_type;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE
value_type	include/glm/detail/type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:T
value_type	include/glm/detail/type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:T
value_type	include/glm/detail/type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:T
value_type	include/glm/detail/type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:T
value_type	include/glm/detail/type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:T
value_type	include/glm/detail/type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:T
value_type	include/glm/detail/type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:T
value_type	include/glm/detail/type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:T
value_type	include/glm/detail/type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:T
value_type	include/glm/detail/type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec1	typeref:typename:T
value_type	include/glm/detail/type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec2	typeref:typename:T
value_type	include/glm/detail/type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec3	typeref:typename:T
value_type	include/glm/detail/type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec4	typeref:typename:T
value_type	include/glm/gtc/quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tquat	typeref:typename:T
value_type	include/glm/gtx/dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat	typeref:typename:T
value_type	include/glm/gtx/intersect.inl	/^		if (position.y < typename genType::value_type(0) || position.y > typename genType::value_type(/;"	m	class:glm::intersectLineTriangle::genType	typeref:typename:position.y<typename genType::value_type (0)||position.y> typename	file:
value_type	include/glm/gtx/intersect.inl	/^		if (position.z < typename genType::value_type(0) || position.y + position.z > typename genType/;"	m	class:glm::intersectLineTriangle::genType	typeref:typename:position.z<typename genType::value_type (0)||position.y+position.z> typename	file:
value_type	include/glm/gtx/simd_mat4.hpp	/^		typedef float value_type;$/;"	t	namespace:glm::detail	typeref:typename:float
value_type	include/glm/gtx/simd_quat.hpp	/^		typedef __m128 value_type;$/;"	t	namespace:glm::detail	typeref:typename:__m128
value_type	include/glm/gtx/simd_vec4.hpp	/^		typedef __m128 value_type;$/;"	t	namespace:glm::detail	typeref:typename:__m128
vec1	include/glm/gtc/vec1.hpp	/^	typedef highp_vec1				vec1;$/;"	t	namespace:glm	typeref:typename:highp_vec1
vec1	include/glm/gtc/vec1.hpp	/^	typedef lowp_vec1				vec1;$/;"	t	namespace:glm	typeref:typename:lowp_vec1
vec1	include/glm/gtc/vec1.hpp	/^	typedef mediump_vec1			vec1;$/;"	t	namespace:glm	typeref:typename:mediump_vec1
vec2	include/glm/detail/type_vec.hpp	/^	typedef highp_vec2			vec2;$/;"	t	namespace:glm	typeref:typename:highp_vec2
vec2	include/glm/detail/type_vec.hpp	/^	typedef lowp_vec2			vec2;$/;"	t	namespace:glm	typeref:typename:lowp_vec2
vec2	include/glm/detail/type_vec.hpp	/^	typedef mediump_vec2		vec2;$/;"	t	namespace:glm	typeref:typename:mediump_vec2
vec3	include/glm/detail/type_vec.hpp	/^	typedef highp_vec3			vec3;$/;"	t	namespace:glm	typeref:typename:highp_vec3
vec3	include/glm/detail/type_vec.hpp	/^	typedef lowp_vec3			vec3;$/;"	t	namespace:glm	typeref:typename:lowp_vec3
vec3	include/glm/detail/type_vec.hpp	/^	typedef mediump_vec3		vec3;$/;"	t	namespace:glm	typeref:typename:mediump_vec3
vec4	include/glm/detail/type_vec.hpp	/^	typedef highp_vec4			vec4;$/;"	t	namespace:glm	typeref:typename:highp_vec4
vec4	include/glm/detail/type_vec.hpp	/^	typedef lowp_vec4			vec4;$/;"	t	namespace:glm	typeref:typename:lowp_vec4
vec4	include/glm/detail/type_vec.hpp	/^	typedef mediump_vec4		vec4;$/;"	t	namespace:glm	typeref:typename:mediump_vec4
vec4_cast	include/glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER vec4 vec4_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
vec_type	include/glm/detail/_swizzle.hpp	/^		typedef VecType         vec_type;        $/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:VecType
vec_type	include/glm/detail/_swizzle.hpp	/^		typedef VecType vec_type;$/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:VecType
version	src/gl3w.c	/^} version;$/;"	v	typeref:struct:__anon5d41850a0108
vertexShader	include/materials/material.h	/^    GLuint vertexShader = 0;$/;"	m	struct:ShaderProgramStages	typeref:typename:GLuint
verticalAngle	include/camera.h	/^        float verticalAngle;$/;"	m	class:Camera	typeref:typename:float
viewMatrix	include/camera.h	/^        glm::mat4 viewMatrix;$/;"	m	class:Camera	typeref:typename:glm::mat4
w	include/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520208	typeref:typename:T
w	include/glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon624eef52080a	typeref:typename:T
w	include/glm/gtc/packing.inl	/^			int w : 2;$/;"	m	struct:glm::detail::i10i10i10i2::__anon0d6bcc420208	typeref:typename:int:2	file:
w	include/glm/gtc/packing.inl	/^			uint w : 2;$/;"	m	struct:glm::detail::u10u10u10u2::__anon0d6bcc420108	typeref:typename:uint:2	file:
w	include/glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
w	include/glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonf0ac7c26010a::__anonf0ac7c260208	typeref:typename:float
w	include/glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonbe76097d010a::__anonbe76097d0208	typeref:typename:float
weight	src/lodepng.cpp	/^  int weight; \/*the sum of all weights in this chain*\/$/;"	m	struct:BPMNode	typeref:typename:int	file:
wformat_saver	include/glm/gtx/io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<wchar_t>
width	include/glm/gtx/io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
width	include/glm/gtx/io.hpp	/^		struct width$/;"	s	namespace:glm::io
width	include/glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER width::width(unsigned a)$/;"	f	class:glm::io::width	typeref:typename:GLM_FUNC_QUALIFIER
width_	include/glm/gtx/io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
window	include/renderwindow.h	/^        SDL_Window *window = nullptr;$/;"	m	class:RenderWindow	typeref:typename:SDL_Window *
windowsize	include/lodepng.h	/^  unsigned windowsize; \/*must be a power of two <= 32768. higher compresses more but is slower./;"	m	struct:LodePNGCompressSettings	typeref:typename:unsigned
word	include/glm/gtc/ulp.inl	/^	unsigned int word;$/;"	m	union:__anona4a85f36010a	typeref:typename:unsigned int	file:
word	include/glm/gtx/raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm	typeref:typename:detail::uint16
wrapAngle	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T wrapAngle(T angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
wrapAngle	include/glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> wrapAngle(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
writeLZ77data	src/lodepng.cpp	/^static void writeLZ77data(size_t* bp, ucvector* out, const uivector* lz77_encoded,$/;"	f	typeref:typename:void	file:
writeSignature	src/lodepng.cpp	/^static void writeSignature(ucvector* out)$/;"	f	typeref:typename:void	file:
wstate_saver	include/glm/gtx/io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<wchar_t>
x	include/glm/detail/type_vec1.hpp	/^				T x;$/;"	m	union:glm::tvec1::__anon6218a5cf010a	typeref:typename:T
x	include/glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon6218a5cf020a	typeref:typename:T
x	include/glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon622abe50010a::__anon622abe500208	typeref:typename:T
x	include/glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon622abe50050a	typeref:typename:T
x	include/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10208	typeref:typename:T
x	include/glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon623cd6d1050a	typeref:typename:T
x	include/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520208	typeref:typename:T
x	include/glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon624eef52050a	typeref:typename:T
x	include/glm/gtc/packing.inl	/^			int x : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon0d6bcc420208	typeref:typename:int:10	file:
x	include/glm/gtc/packing.inl	/^			uint x : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon0d6bcc420108	typeref:typename:uint:10	file:
x	include/glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
x	include/glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonf0ac7c26010a::__anonf0ac7c260208	typeref:typename:float
x	include/glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonbe76097d010a::__anonbe76097d0208	typeref:typename:float
y	include/glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon622abe50010a::__anon622abe500208	typeref:typename:T
y	include/glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon622abe50060a	typeref:typename:T
y	include/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10208	typeref:typename:T
y	include/glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon623cd6d1060a	typeref:typename:T
y	include/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520208	typeref:typename:T
y	include/glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon624eef52060a	typeref:typename:T
y	include/glm/gtc/packing.inl	/^			int y : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon0d6bcc420208	typeref:typename:int:10	file:
y	include/glm/gtc/packing.inl	/^			uint y : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon0d6bcc420108	typeref:typename:uint:10	file:
y	include/glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
y	include/glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonf0ac7c26010a::__anonf0ac7c260208	typeref:typename:float
y	include/glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonbe76097d010a::__anonbe76097d0208	typeref:typename:float
yaw	include/glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T yaw(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
yawPitchRoll	include/glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> yawPitchRoll$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
year	include/lodepng.h	/^  unsigned year;    \/*2 bytes used (0-65535)*\/$/;"	m	struct:LodePNGTime	typeref:typename:unsigned
z	include/glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon623cd6d1010a::__anon623cd6d10208	typeref:typename:T
z	include/glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon623cd6d1070a	typeref:typename:T
z	include/glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon624eef52010a::__anon624eef520208	typeref:typename:T
z	include/glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon624eef52070a	typeref:typename:T
z	include/glm/gtc/packing.inl	/^			int z : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon0d6bcc420208	typeref:typename:int:10	file:
z	include/glm/gtc/packing.inl	/^			uint z : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon0d6bcc420108	typeref:typename:uint:10	file:
z	include/glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
z	include/glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonf0ac7c26010a::__anonf0ac7c260208	typeref:typename:float
z	include/glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anonbe76097d010a::__anonbe76097d0208	typeref:typename:float
zero	include/glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED zero = _mm_setzero_ps();$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
zero	include/glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType zero()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
zeros	src/lodepng.cpp	/^  unsigned short* zeros; \/*length of zeros streak, used as a second hash chain*\/$/;"	m	struct:Hash	typeref:typename:unsigned short *	file:
zlib_compress	src/lodepng.cpp	/^static unsigned zlib_compress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned	file:
zlib_decompress	src/lodepng.cpp	/^static unsigned zlib_decompress(unsigned char** out, size_t* outsize, const unsigned char* in,$/;"	f	typeref:typename:unsigned	file:
zlibsettings	include/lodepng.h	/^  LodePNGCompressSettings zlibsettings; \/*settings for the zlib encoder, such as window size, ./;"	m	struct:LodePNGEncoderSettings	typeref:typename:LodePNGCompressSettings
zlibsettings	include/lodepng.h	/^  LodePNGDecompressSettings zlibsettings; \/*in here is the setting to ignore Adler32 checksums*/;"	m	struct:LodePNGDecoderSettings	typeref:typename:LodePNGDecompressSettings
~LodePNGState	include/lodepng.h	/^  virtual ~LodePNGState(){}$/;"	f	struct:LodePNGState
~Material	src/materials/material.cpp	/^Material::~Material()$/;"	f	class:Material
~RenderWindow	src/renderwindow.cpp	/^RenderWindow::~RenderWindow()$/;"	f	class:RenderWindow
~State	src/lodepng.cpp	/^State::~State()$/;"	f	class:lodepng::State
~Texture	src/texture.cpp	/^Texture::~Texture()$/;"	f	class:Texture
~basic_format_saver	include/glm/gtx/io.inl	/^	basic_format_saver<CTy,CTr>::~basic_format_saver()$/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
~basic_state_saver	include/glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_state_saver<CTy,CTr>::~basic_state_saver()$/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
~tvec4	include/glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL ~tvec4(){}$/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
